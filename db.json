{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/img/erchashu1.jpg","path":"img/erchashu1.jpg","modified":0,"renderable":0},{"_id":"source/img/p2p_framework.png","path":"img/p2p_framework.png","modified":0,"renderable":0},{"_id":"source/img/erchashu2.png","path":"img/erchashu2.png","modified":0,"renderable":0},{"_id":"source/img/erlang_ftp.png","path":"img/erlang_ftp.png","modified":0,"renderable":0},{"_id":"source/img/service_bus.png","path":"img/service_bus.png","modified":0,"renderable":0},{"_id":"source/img/sd_erlang.png","path":"img/sd_erlang.png","modified":0,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"source/img/guiling/7.jpg","path":"img/guiling/7.jpg","modified":0,"renderable":0},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/11.jpeg","path":"img/dali-lijiang/11.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/16.jpeg","path":"img/dali-lijiang/16.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/26.jpeg","path":"img/dali-lijiang/26.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/25.jpeg","path":"img/dali-lijiang/25.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/33.jpg","path":"img/dali-lijiang/33.jpg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/7.jpeg","path":"img/dali-lijiang/7.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/9.jpeg","path":"img/dali-lijiang/9.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-cbd.jpeg","path":"img/guangzhou/guangzhou-cbd.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-liede.jpeg","path":"img/guangzhou/guangzhou-liede.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-ta.jpeg","path":"img/guangzhou/guangzhou-ta.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/6.jpeg","path":"img/dali-lijiang/6.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-tit.jpg","path":"img/guangzhou/guangzhou-tit.jpg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-zhongda.jpeg","path":"img/guangzhou/guangzhou-zhongda.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/shuiba.jpeg","path":"img/guangzhou/shuiba.jpeg","modified":0,"renderable":0},{"_id":"source/img/guiling/20.jpg","path":"img/guiling/20.jpg","modified":0,"renderable":0},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/10.jpeg","path":"img/dali-lijiang/10.jpeg","modified":0,"renderable":0},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/15.jpeg","path":"img/dali-lijiang/15.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/17.jpeg","path":"img/dali-lijiang/17.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/21.jpeg","path":"img/dali-lijiang/21.jpeg","modified":0,"renderable":0},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/24.jpeg","path":"img/dali-lijiang/24.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/27.jpeg","path":"img/dali-lijiang/27.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/28.jpeg","path":"img/dali-lijiang/28.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/3.jpeg","path":"img/dali-lijiang/3.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/36.jpeg","path":"img/dali-lijiang/36.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/37.jpeg","path":"img/dali-lijiang/37.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/38.jpeg","path":"img/dali-lijiang/38.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/4.jpeg","path":"img/dali-lijiang/4.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-hongzhuanchang.jpeg","path":"img/guangzhou/guangzhou-hongzhuanchang.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-cbd2.jpeg","path":"img/guangzhou/guangzhou-cbd2.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-zhongda1.jpeg","path":"img/guangzhou/guangzhou-zhongda1.jpeg","modified":0,"renderable":0},{"_id":"source/img/guiling/10.jpg","path":"img/guiling/10.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/16.jpg","path":"img/guiling/16.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/17.jpg","path":"img/guiling/17.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/11.jpg","path":"img/guiling/11.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/12.jpg","path":"img/guiling/12.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/22.jpg","path":"img/guiling/22.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/4.jpg","path":"img/guiling/4.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/6.jpg","path":"img/guiling/6.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/5.jpg","path":"img/guiling/5.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/8.jpg","path":"img/guiling/8.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/9.jpg","path":"img/guiling/9.jpg","modified":0,"renderable":0},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/1.jpeg","path":"img/dali-lijiang/1.jpeg","modified":0,"renderable":0},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/18.jpg","path":"img/dali-lijiang/18.jpg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/22.jpeg","path":"img/dali-lijiang/22.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/23.jpeg","path":"img/dali-lijiang/23.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/12.jpeg","path":"img/dali-lijiang/12.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/32.jpg","path":"img/dali-lijiang/32.jpg","modified":0,"renderable":0},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/29.jpeg","path":"img/dali-lijiang/29.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-cbd3.jpeg","path":"img/guangzhou/guangzhou-cbd3.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-tiyuxi.jpeg","path":"img/guangzhou/guangzhou-tiyuxi.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-ta2.jpeg","path":"img/guangzhou/guangzhou-ta2.jpeg","modified":0,"renderable":0},{"_id":"source/img/guiling/14.jpg","path":"img/guiling/14.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/15.jpg","path":"img/guiling/15.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/18.jpg","path":"img/guiling/18.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/21.jpg","path":"img/guiling/21.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/19.jpg","path":"img/guiling/19.jpg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/13.jpg","path":"img/dali-lijiang/13.jpg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/14.jpg","path":"img/dali-lijiang/14.jpg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/20.jpeg","path":"img/dali-lijiang/20.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/2.jpeg","path":"img/dali-lijiang/2.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/19.jpeg","path":"img/dali-lijiang/19.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/34.jpg","path":"img/dali-lijiang/34.jpg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/35.jpeg","path":"img/dali-lijiang/35.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-baiyunsan.jpeg","path":"img/guangzhou/guangzhou-baiyunsan.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/5.jpeg","path":"img/dali-lijiang/5.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/haixian-1.jpg","path":"img/guangzhou/haixian-1.jpg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-taiguhui.jpeg","path":"img/guangzhou/guangzhou-taiguhui.jpeg","modified":0,"renderable":0},{"_id":"source/img/guiling/3.jpg","path":"img/guiling/3.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/2.jpg","path":"img/guiling/2.jpg","modified":0,"renderable":0},{"_id":"themes/pure/source/images/miku-ico.png","path":"images/miku-ico.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/miku-ico.jpg","path":"images/miku-ico.jpg","modified":0,"renderable":1},{"_id":"source/img/dali-lijiang/39.jpg","path":"img/dali-lijiang/39.jpg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/guangzhou-ditie.jpeg","path":"img/guangzhou/guangzhou-ditie.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/shishengxindajiaotang.jpeg","path":"img/guangzhou/shishengxindajiaotang.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/youguidianche.jpeg","path":"img/guangzhou/youguidianche.jpeg","modified":0,"renderable":0},{"_id":"source/img/guiling/13.jpg","path":"img/guiling/13.jpg","modified":0,"renderable":0},{"_id":"source/img/guiling/1.jpg","path":"img/guiling/1.jpg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/30.jpeg","path":"img/dali-lijiang/30.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/31.jpeg","path":"img/dali-lijiang/31.jpeg","modified":0,"renderable":0},{"_id":"source/img/dali-lijiang/8.jpeg","path":"img/dali-lijiang/8.jpeg","modified":0,"renderable":0},{"_id":"source/img/guangzhou/pangzi.png","path":"img/guangzhou/pangzi.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1574604874766},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1574604874766},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1574604874766},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1574604874766},{"_id":"themes/pure/_config.yml","hash":"1dddf7a53fd47241ec7be446db6cd8b372e6bc6b","modified":1574652424918},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1574604874766},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1574604874766},{"_id":"source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1574609192687},{"_id":"source/_posts/Erlang实现简单的文件传输_类似ftp.md","hash":"0ba788987e3490fabea3944ff1c734680153a6f3","modified":1574610080072},{"_id":"source/_data/links.yml","hash":"a657f225f7939f17c62caf61b8bdb1330df646ad","modified":1574616363668},{"_id":"source/_posts/Erlang运行时错误.md","hash":"2c752e3c260bace1502bbd0fa75fe7b3932d9170","modified":1574609563549},{"_id":"source/_posts/Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3.md","hash":"e97bfa4d8fdca7e1d7ad588f5d93f5e8b064a1fa","modified":1574653653573},{"_id":"source/_posts/ets.md","hash":"31e1786f6ac6ad871175ac4eed8f6127ca3b3228","modified":1574608972662},{"_id":"source/_posts/about-queen.md","hash":"8939deee33012afea384bfd986b9e02517aa99bb","modified":1588855263051},{"_id":"source/_posts/my-queen.md","hash":"0e1ec02e889a409a9a35391e0a640e23a2908e5b","modified":1589198923279},{"_id":"source/_posts/二叉树.md","hash":"16ba383d107f204d2ae357ea48792963388bcb78","modified":1574653553446},{"_id":"source/_posts/ekka源码阅读.md","hash":"1589dcd1e792029ed877c374ef82107b8de1b497","modified":1574610085872},{"_id":"source/_posts/分布式Erlang.md","hash":"6c07cb063efdb2b6a8fd40b6e5fcd2cf3b2eea9f","modified":1574609599125},{"_id":"source/_posts/分布式架构.md","hash":"9847c9401541db9e704fea058c1f4c47ccae8c9e","modified":1574609655679},{"_id":"source/_posts/排序算法.md","hash":"92dd844c256dbe947f776227e1eb866cb761c220","modified":1574614081158},{"_id":"source/_posts/桂林阳朔两日游.md","hash":"446c0b3ac385728c8f4e0328351940f90ab2f0db","modified":1574652564105},{"_id":"source/_posts/深度优先和广度优先搜索.md","hash":"dd10d18d5e5cd27802ecc392804fa01e325d38ae","modified":1574614504779},{"_id":"source/_posts/源码构建emqx以及其第三方插件.md","hash":"b5f6ce31c3debe280828da7d58c37583e4b93c8c","modified":1574653958767},{"_id":"source/_posts/玩在广州.md","hash":"9250edf55a4825e2f5b554924d37070702bd2ff8","modified":1574652066480},{"_id":"source/_posts/链表.md","hash":"7b7fc3b83b7ea9c6c8c60cd573ba5733c6b82a0a","modified":1574614327140},{"_id":"source/_posts/自驾大理-丽江3日游.md","hash":"83cb70d0920af81a263ea06284fe387304d4dedf","modified":1574653462847},{"_id":"source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1574606224114},{"_id":"source/_posts/糟糕的2019.md","hash":"d14fb555fc8455eebdfbd7da7688069159bb7798","modified":1577762250756},{"_id":"source/about/index.md","hash":"f0af10554b3d6e901c83ca3b0c6eb390208cbfee","modified":1574653788468},{"_id":"source/img/erchashu1.jpg","hash":"3f7451b1911e2be7f4cf3df65239fc47613100f7","modified":1574653497838},{"_id":"source/img/p2p_framework.png","hash":"3f323639df72c4a34baf7bface150101996815eb","modified":1574607396855},{"_id":"source/img/erchashu2.png","hash":"0960c306ee1605403b0e6f894cb0361f832b76b4","modified":1574653512498},{"_id":"source/img/erlang_ftp.png","hash":"bc48fae036f25a712853c5aeb846939e3c703ad8","modified":1574607396855},{"_id":"source/img/service_bus.png","hash":"c876b8738a8bb6d3731bb2753ff17093b2a236e9","modified":1574607396855},{"_id":"source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1574609700744},{"_id":"source/img/sd_erlang.png","hash":"52f96d0bee54cf24adcd9089ed7da93c178b1886","modified":1574607396855},{"_id":"source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1574606224114},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1574607210519},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1574604874766},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1574604874766},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1574604874766},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1574604874766},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1574604874766},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1574604874766},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1574604874766},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1574604874766},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1574604874766},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1574604874766},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1574604874766},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1574604874766},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1574604874766},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1574604874766},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1574604874778},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1574604874766},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1574604874766},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1574604874778},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1574604874766},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1574604874766},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1574604874766},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1574604874770},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1574604874770},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1574604874770},{"_id":"source/img/guiling/7.jpg","hash":"9a3270201aecdc8c99e5032ed55a5d573911fa3c","modified":1574652250975},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1574604874766},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1574609420010},{"_id":"themes/pure/_source/about/index.md","hash":"5e648c3366e062ff7e5984fca1955e65cfb51ba8","modified":1574606970782},{"_id":"themes/pure/_source/repository/index.md","hash":"1528ff6432407daab4250ff5391953095b7d666a","modified":1574606004455},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1574604874766},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1574604874766},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1574604874766},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1574604874766},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1574604874766},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1574604874766},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1574604874766},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1574604874766},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1574604874766},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1574604874766},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1574604874766},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1574604874766},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1574604874766},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1574604874766},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1574604874766},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1574604874766},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1574604874766},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1574604874766},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1574604874766},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1574604874766},{"_id":"themes/pure/_source/links/index.md","hash":"bcbfdc417357a95fe512325abab7763f3d5eae03","modified":1574606785826},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1574604874766},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1574604874766},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1574604874766},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1574604874766},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1574604874766},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1574604874766},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1574604874766},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1574604874766},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1574604874766},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1574604874766},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1574604874766},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1574604874766},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1574604874766},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1574604874766},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1574604874766},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1574604874766},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1574604874778},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1574604874778},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1574604874778},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1574604874778},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1574604874778},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1574604874778},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1574604874778},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1574604874778},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1574604874778},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1574604874778},{"_id":"source/img/dali-lijiang/11.jpeg","hash":"b60243ce8e8d68f5eacde289e2ff812a05698f9c","modified":1574653231969},{"_id":"source/img/dali-lijiang/16.jpeg","hash":"d59fd70d0609008deb0bf69922386fa97309554a","modified":1574653260648},{"_id":"source/img/dali-lijiang/26.jpeg","hash":"597cae6071f512a7d1e25ed7ca298a4a615a5f84","modified":1574653311268},{"_id":"source/img/dali-lijiang/25.jpeg","hash":"b68ef9fbe805b9f30b732ac99d4dbb71c1b7e2cd","modified":1574653306364},{"_id":"source/img/dali-lijiang/33.jpg","hash":"354d348c10cc337ce797d3429108e08b632c9a13","modified":1574653344148},{"_id":"source/img/dali-lijiang/7.jpeg","hash":"49e4039f8c85b1d54b0a4d498c1564071ab645c2","modified":1574653213201},{"_id":"source/img/dali-lijiang/9.jpeg","hash":"4c775e70878f8d1832d1cef11c117034fec77bf1","modified":1574653222681},{"_id":"source/img/guangzhou/guangzhou-cbd.jpeg","hash":"2262921a7ace18edb932189024d60d78704866f4","modified":1574650753925},{"_id":"source/img/guangzhou/guangzhou-liede.jpeg","hash":"fb6c48e0f4b7e96492a478f7aeb3aae59bea01a7","modified":1574650837720},{"_id":"source/img/guangzhou/guangzhou-ta.jpeg","hash":"079ea20cd58c43f94f80072b276cf2cf83328af4","modified":1574650730297},{"_id":"source/img/dali-lijiang/6.jpeg","hash":"3b0342a9d669d8238234ba85849e40041c371380","modified":1574653208473},{"_id":"source/img/guangzhou/guangzhou-tit.jpg","hash":"65a538c780da6b09cf036e483977c2bc6043a94a","modified":1574650885796},{"_id":"source/img/guangzhou/guangzhou-zhongda.jpeg","hash":"51c789b3e02eb33176205da4779fdda527428b5b","modified":1574650916748},{"_id":"source/img/guangzhou/shuiba.jpeg","hash":"226b14cc81e064ea0cbcec28726b4eb5d9ef85c0","modified":1574650717581},{"_id":"source/img/guiling/20.jpg","hash":"b0f5c5b64734094567c7b3fe7574caec49fd2722","modified":1574652323954},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1574604874782},{"_id":"source/img/dali-lijiang/10.jpeg","hash":"0fd8db087632dbc4662c11c12bbc239c46000d15","modified":1574653227233},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1574604874782},{"_id":"source/img/dali-lijiang/15.jpeg","hash":"77c7c6b7eaa48d90a88f2ab944fb763743ce4f1d","modified":1574653255224},{"_id":"source/img/dali-lijiang/17.jpeg","hash":"1de399032498c7c67d4e526128ff82a1479ab167","modified":1574653266252},{"_id":"source/img/dali-lijiang/21.jpeg","hash":"c5df189cad13faae1221acd7a480deb739d171af","modified":1574653287632},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1574604874782},{"_id":"source/img/dali-lijiang/24.jpeg","hash":"9c73d462ebd2d8e67a8bff1a2e25faa71a1fe1ee","modified":1574653301652},{"_id":"source/img/dali-lijiang/27.jpeg","hash":"2bf34e5a46743843ed6e52b3b409c63358f5b2b6","modified":1574653315452},{"_id":"source/img/dali-lijiang/28.jpeg","hash":"d94607bc5e92ff1ed746f24096649bb8138f0916","modified":1574653320136},{"_id":"source/img/dali-lijiang/3.jpeg","hash":"c7edbf5e4ea42c5b3bd378aab82e397b08f3492d","modified":1574653192933},{"_id":"source/img/dali-lijiang/36.jpeg","hash":"a71f678d9e37ff7a3893372b81851d6e7211d50d","modified":1574653357875},{"_id":"source/img/dali-lijiang/37.jpeg","hash":"2eae7050b6f17cec1678f420ab27e4d449973fa5","modified":1574653362191},{"_id":"source/img/dali-lijiang/38.jpeg","hash":"9af953d868e1e55915d83464a1ce917cd6734020","modified":1574653367043},{"_id":"source/img/dali-lijiang/4.jpeg","hash":"6d16aa598828dc55ff454462fcb639c43bb2d301","modified":1574653197725},{"_id":"source/img/guangzhou/guangzhou-hongzhuanchang.jpeg","hash":"43956b230a9eab337fa569180f3acf44c8d6bcaa","modified":1574650903720},{"_id":"source/img/guangzhou/guangzhou-cbd2.jpeg","hash":"c3a765e6e21b1d60cf180321fb8975bcca6a2f88","modified":1574650783920},{"_id":"source/img/guangzhou/guangzhou-zhongda1.jpeg","hash":"6ac60e59df148b732e27fed59943f8c8677df023","modified":1574650932400},{"_id":"source/img/guiling/10.jpg","hash":"6b5553def04b3fb3045c13ea7f7911d86e25e7a6","modified":1574652264286},{"_id":"source/img/guiling/16.jpg","hash":"329ffee362cbd2fc6353b8bcf890f46e0cf6f4c2","modified":1574652304294},{"_id":"source/img/guiling/17.jpg","hash":"557c3273f3a8c13a0b33d56898b21f72dbde0135","modified":1574652309126},{"_id":"source/img/guiling/11.jpg","hash":"e402a2707b1aa4fb577bc77490dde30bb30a708b","modified":1574652268778},{"_id":"source/img/guiling/12.jpg","hash":"ded448e26e879aed4ec97bc63993676fd3f2c6dd","modified":1574652274566},{"_id":"source/img/guiling/22.jpg","hash":"1f44358c0e3e414b844da6e9839ebb54c7d551a6","modified":1574652333550},{"_id":"source/img/guiling/4.jpg","hash":"2d2c955ac152dac23476de9fe0e31cc33375a81e","modified":1574652233875},{"_id":"source/img/guiling/6.jpg","hash":"163039ff296b0a20ed5f12866f6f7be15f62394a","modified":1574652245279},{"_id":"source/img/guiling/5.jpg","hash":"558eb864016a44e98ac8a88addea49d241d9577c","modified":1574652238291},{"_id":"source/img/guiling/8.jpg","hash":"229897faa20cdfbc4f45c7334314de41a2ad4047","modified":1574652255467},{"_id":"source/img/guiling/9.jpg","hash":"93e2affa45af972ab96d9a99e42f280f55e3613e","modified":1574652259807},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1574604874766},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1574604874766},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1574604874766},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1574604874766},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1574604874766},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1574604874766},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1574604874766},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1574604874766},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1574604874766},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1574604874766},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1574604874778},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1574604874766},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1574604874766},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1574604874778},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1574604874778},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1574604874778},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1574604874778},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1574604874778},{"_id":"source/img/dali-lijiang/1.jpeg","hash":"21511ac1953dbda74c5a022bea4c7825e9958bdf","modified":1574653181073},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1574604874778},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1574604874778},{"_id":"source/img/dali-lijiang/18.jpg","hash":"990835ad9ad5850238a59b8af70fad1ba5be7582","modified":1574653271696},{"_id":"source/img/dali-lijiang/22.jpeg","hash":"19e638a6dd8956bcec8c39654b5a890633af4012","modified":1574653292436},{"_id":"source/img/dali-lijiang/23.jpeg","hash":"d062b19c4bc0242e45b45b9d3c8279ff4cb4ef0e","modified":1574653297012},{"_id":"source/img/dali-lijiang/12.jpeg","hash":"39d5bbb5df511da34d1aaa4756747540a195a8cb","modified":1574653236829},{"_id":"source/img/dali-lijiang/32.jpg","hash":"6a41a6cd9e0ca3f0ac9b8929f5215684ee2f68d7","modified":1574653339864},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1574604874782},{"_id":"source/img/dali-lijiang/29.jpeg","hash":"7a51d2f83a558e42e7e0edcd576ba40cac41b06f","modified":1574653325028},{"_id":"source/img/guangzhou/guangzhou-cbd3.jpeg","hash":"5027eb7931f69aac1894f2ebb3901c3f67e7e3eb","modified":1574650818336},{"_id":"source/img/guangzhou/guangzhou-tiyuxi.jpeg","hash":"89451baa021c83cd1591119d4b60b0c2ede2358e","modified":1574650970756},{"_id":"source/img/guangzhou/guangzhou-ta2.jpeg","hash":"13f3362c32d28edc3b7626f87a89def530734124","modified":1574650797780},{"_id":"source/img/guiling/14.jpg","hash":"aed6a4ac0e4738a581eed014d46e78a1d0383687","modified":1574652294250},{"_id":"source/img/guiling/15.jpg","hash":"5ba2c7433ef4c9afc6b167bdfb4aed799e034091","modified":1574652299206},{"_id":"source/img/guiling/18.jpg","hash":"d8f6b6ef9e20fc7d35bf7a761b2187686de6f883","modified":1574652314274},{"_id":"source/img/guiling/21.jpg","hash":"acc1addd0e72e5289d758d7851e5d09ca2399882","modified":1574652328790},{"_id":"source/img/guiling/19.jpg","hash":"84e56a0f876286242e35eecd824d05c1ad1d3d57","modified":1574652319126},{"_id":"source/img/dali-lijiang/13.jpg","hash":"b03d791926f8d4af9db7cbb41888a97943112786","modified":1574653241141},{"_id":"source/img/dali-lijiang/14.jpg","hash":"40447fbdd976bd5455a0f8e56e61cab917f4c0ab","modified":1574653245549},{"_id":"source/img/dali-lijiang/20.jpeg","hash":"87246d678b866d8e3bd4e76371e9156c620425c9","modified":1574653282592},{"_id":"source/img/dali-lijiang/2.jpeg","hash":"d574e60b7c61a4c1a9357cc5cf60b8532cefcbac","modified":1574653188265},{"_id":"source/img/dali-lijiang/19.jpeg","hash":"015cccaea3cd46bb5d827c6b34950e864d070e3e","modified":1574653277344},{"_id":"source/img/dali-lijiang/34.jpg","hash":"3460e78612446fd6485fcde1d44601bb4309aecb","modified":1574653348396},{"_id":"source/img/dali-lijiang/35.jpeg","hash":"79db0976366e06b3042d632dddf8f6f2511407cd","modified":1574653353060},{"_id":"source/img/guangzhou/guangzhou-baiyunsan.jpeg","hash":"1e1da0681b684ac4264274cc4d77f138d38bfbdd","modified":1574650959036},{"_id":"source/img/dali-lijiang/5.jpeg","hash":"687699802e1145410defb97d24a3c2bd579152b2","modified":1574653201925},{"_id":"source/img/guangzhou/haixian-1.jpg","hash":"4a95b06852378b775bcf9c2181b23aa3ca827f2e","modified":1574650850380},{"_id":"source/img/guangzhou/guangzhou-taiguhui.jpeg","hash":"8c8f1c6c79c4605b5989a5104ec83cd49e9f66b5","modified":1574650989132},{"_id":"source/img/guiling/3.jpg","hash":"6a32b65b2e68f196230fdea664db7bfce792fa7d","modified":1574652228251},{"_id":"source/img/guiling/2.jpg","hash":"55e56dc5fe7080b3479bed4c2883b6ed80b800a4","modified":1574652222239},{"_id":"themes/pure/source/images/miku-ico.png","hash":"735634455bb466bc9defede67ff2fcfb1a1d3e63","modified":1574608684006},{"_id":"themes/pure/source/images/miku-ico.jpg","hash":"1eae29297706e5228cc320d610117d55578b25bb","modified":1574608532383},{"_id":"source/img/dali-lijiang/39.jpg","hash":"c5d21b287032aa28101f762ddbeecf96665b6e2a","modified":1574653373043},{"_id":"source/img/guangzhou/guangzhou-ditie.jpeg","hash":"b26b0b46c7e73c1926c8c88c149a18edba480e63","modified":1574650770188},{"_id":"source/img/guangzhou/shishengxindajiaotang.jpeg","hash":"d2534984e0654ef1c824c5b95ecf704ca72bb126","modified":1574650623969},{"_id":"source/img/guangzhou/youguidianche.jpeg","hash":"18ac7b3570df6d7dd89b7acb4d3e55e119e9290d","modified":1574651511135},{"_id":"source/img/guiling/13.jpg","hash":"b98f95fd9d76bd19b3e6665d90149825bb03cc2d","modified":1574652278802},{"_id":"source/img/guiling/1.jpg","hash":"fb07345054103cc067ce9f7daa067aa3004ea63e","modified":1574652211303},{"_id":"source/img/dali-lijiang/30.jpeg","hash":"4a725b599f4009362ed0e76e8f020dbf1eb6a54b","modified":1574653329280},{"_id":"source/img/dali-lijiang/31.jpeg","hash":"71e606dda714d6c28fc395ce786fb6c0b3709d50","modified":1574653334672},{"_id":"source/img/dali-lijiang/8.jpeg","hash":"441ce98f5d32a419f9f4bffe05b2dd7d89aa4ed7","modified":1574653217845},{"_id":"source/img/guangzhou/pangzi.png","hash":"40597cbf02b9ba72698946360790eca5dd537c48","modified":1574651999408},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1574604874778},{"_id":"source/_posts/我的滑板女神第一天上路.md","hash":"0038b0c41b812da8834096eb94587b7def2ff725","modified":1590290816178},{"_id":"public/content.json","hash":"c768dac8afc827b41bbd7fddedb20b422ad1af49","modified":1590573964886},{"_id":"public/about/index.html","hash":"774a3af2fe1732117310943e7f0c6d80ed54741b","modified":1590477738459},{"_id":"public/categories/index.html","hash":"80f32268724c22d2c9f696d8e2b7136e9caea49f","modified":1590477738459},{"_id":"public/links/index.html","hash":"e8aedc8b404624e164e20a9668972c1b8351eb24","modified":1590477738459},{"_id":"public/tags/index.html","hash":"767a02139e6cd032e89d54c55b39d0c6e5a38535","modified":1590477738459},{"_id":"public/repository/index.html","hash":"b67616c3a10f69dbca9cb76d19a3297f7da9b7cd","modified":1590477738459},{"_id":"public/2020/05/07/about-queen/index.html","hash":"ce7ebb78c988a744f479426b57a9c8eedf1a466c","modified":1590477738459},{"_id":"public/2020/05/07/my-queen/index.html","hash":"cdde58c8658bc7745a64148a2c1c0c96d8f75c89","modified":1590477738459},{"_id":"public/2019/12/31/糟糕的2019/index.html","hash":"1ef3d7689b4ef5c9b1e19411b243d15a94ad0388","modified":1590477738459},{"_id":"public/2019/10/01/Erlang实现简单的文件传输_类似ftp/index.html","hash":"5e0f577f69507d8827d02eb982a9283bf5b8ee13","modified":1590477738459},{"_id":"public/2019/10/01/Erlang运行时错误/index.html","hash":"b583189d8e7f92b16f9a6f6eadd1afd3c1d6b55c","modified":1590477738459},{"_id":"public/2019/09/29/ets/index.html","hash":"f8c9b5091c361b2ee5a69335cfdaa707e8d1b2fa","modified":1590477738459},{"_id":"public/2019/09/29/ekka源码阅读/index.html","hash":"187979a7011571a6257965d29e3b02602036506f","modified":1590477738459},{"_id":"public/2019/09/29/源码构建emqx以及其第三方插件/index.html","hash":"bb8ad4cf7bf543782171eaba7624253793a4a771","modified":1590477738459},{"_id":"public/2019/09/21/分布式架构/index.html","hash":"9fadaf2f83e323ad5d63aafdc63864e8af595d55","modified":1590477738459},{"_id":"public/2019/09/19/分布式Erlang/index.html","hash":"c989b921d4d7ab2f93a73241abcf7efa1b5d3c67","modified":1590477738459},{"_id":"public/2019/09/17/Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3/index.html","hash":"4ceab181c5f5b73e82fd97458d406756c6e7cf2d","modified":1590477738459},{"_id":"public/2019/03/10/桂林阳朔两日游/index.html","hash":"613055f72e68f3bdc635df5200195b69f855cb46","modified":1590477738459},{"_id":"public/2018/09/29/玩在广州/index.html","hash":"f75050d3f9f0c50714ec7e956d7c03b0e0bf1bf6","modified":1590477738459},{"_id":"public/2018/03/21/深度优先和广度优先搜索/index.html","hash":"b3fa402ef6143e2e657349b24a6b586281d500a9","modified":1590477738459},{"_id":"public/2018/03/20/二叉树/index.html","hash":"47b158b00702cdc05a67d3e52cf40e26c2c033b5","modified":1590477738459},{"_id":"public/2018/03/20/链表/index.html","hash":"26288097d6a6b6eb7b6690f8581734e216bc3e03","modified":1590477738459},{"_id":"public/2018/01/18/排序算法/index.html","hash":"522e7f69a2f0902156b565fe1320c16cdd7ac667","modified":1590477738459},{"_id":"public/2017/10/08/自驾大理-丽江3日游/index.html","hash":"312f55620c10646cb8e3364810a2a133a0111720","modified":1590477738459},{"_id":"public/archives/index.html","hash":"2d066be984b85a800445a0b4e5a62e3b53fa4c02","modified":1590477738459},{"_id":"public/archives/page/2/index.html","hash":"9bf075c801f89a0918fee33dcbdd8756dc753bad","modified":1590477738459},{"_id":"public/archives/2017/index.html","hash":"4e2530130daaf822a3e3920b3813e0e757aa6c5a","modified":1590477738459},{"_id":"public/archives/2017/10/index.html","hash":"5a189e47f2d315204c65edc1da17d2a4435f6962","modified":1590477738459},{"_id":"public/archives/2018/index.html","hash":"ecc27e1090c568bf5945f17b68e28034e4af88c3","modified":1590477738459},{"_id":"public/archives/2018/01/index.html","hash":"7a443a9af56b2c7c8cc1fa6ab06ca4f05fe43085","modified":1590477738459},{"_id":"public/archives/2018/03/index.html","hash":"d21badc920694429a05a385bfe11b99516ba3675","modified":1590477738459},{"_id":"public/archives/2018/09/index.html","hash":"a10ba8d66f1c48d154b1d80bebbab5078e0e463a","modified":1590477738459},{"_id":"public/archives/2019/index.html","hash":"4ae21aa335feb1194da7548e2b79ae2020bee218","modified":1590477738459},{"_id":"public/archives/2019/03/index.html","hash":"4e8f953b74c2821a9ad00476b2e53567df60ae1c","modified":1590477738459},{"_id":"public/archives/2019/09/index.html","hash":"d077dc43e071dbc07bfc7dcea35e04229a716b7a","modified":1590477738459},{"_id":"public/archives/2019/10/index.html","hash":"c326b49b3b931a13bea720e8c3ea228eb82fefe4","modified":1590477738459},{"_id":"public/archives/2019/12/index.html","hash":"6ccb2de25fe3355a9d2190b98b4fed6f67d5c0fc","modified":1590477738459},{"_id":"public/archives/2020/index.html","hash":"e0dcb627854ef03f943b9198310e24bda1221124","modified":1590477738459},{"_id":"public/archives/2020/05/index.html","hash":"e94f7caebe2a24fe2edc51a7ea833fed622142b5","modified":1590477738459},{"_id":"public/categories/Erlang/index.html","hash":"b7ae342f2bf6fda652f86029bba5931ceba5a9d2","modified":1590477738459},{"_id":"public/categories/数据结构与算法/index.html","hash":"9487d8ec1641ed30deb4083ae79f6bcc89324aad","modified":1590477738459},{"_id":"public/categories/在路上/index.html","hash":"ceb6724d86517d34c0b479dffc2b155e75b65cd3","modified":1590477738459},{"_id":"public/index.html","hash":"c3ae7f5752672851ecb8454cdfde87f85371ef2d","modified":1590477738459},{"_id":"public/page/2/index.html","hash":"0cd2dfb27372d55c578fa96bc9e161957a54278b","modified":1590477738459},{"_id":"public/tags/erlang/index.html","hash":"d9bcd27f7d26d9f3e862b02c06c4da68a2b02d10","modified":1590477738459},{"_id":"public/tags/rebar3/index.html","hash":"f5e87956dd9ccdb8aeeca83dbf7cf33c30e37f0a","modified":1590477738459},{"_id":"public/tags/ets/index.html","hash":"48bf1c38d84bb686d9b78f9e622051e0679e2dd4","modified":1590477738459},{"_id":"public/tags/queen/index.html","hash":"3fd1a6e6edbb653caacbd82177634b9ceec13336","modified":1590477738459},{"_id":"public/tags/二叉树/index.html","hash":"d1dd0a2a095b43d19d6c22679b7ed333c05f39f8","modified":1590477738459},{"_id":"public/tags/排序/index.html","hash":"74412b1b265b3e9965bf96ba587aec3f486474a6","modified":1590477738459},{"_id":"public/tags/深度优先搜索/index.html","hash":"90cec66e51bff98c62839793ad490afb32d7a7fe","modified":1590477738459},{"_id":"public/tags/广度优先搜索/index.html","hash":"eda8a4db8eba103c4108b5439d2c431f50768aaf","modified":1590477738459},{"_id":"public/tags/桂林/index.html","hash":"1be455bdad0c290da418c3c045a0b28ebc757435","modified":1590477738459},{"_id":"public/tags/阳朔/index.html","hash":"2ae0a8518a0fc909a91ad0ae5b661ad0d8e1e2b7","modified":1590477738459},{"_id":"public/tags/广州/index.html","hash":"a52abd9e5aa9df0f055ea0d8d86e78fd40754a83","modified":1590477738459},{"_id":"public/tags/链表/index.html","hash":"941db899c05e037b22065a1b15994f3647b4ba45","modified":1590477738459},{"_id":"public/tags/随笔/index.html","hash":"643e1c43f2d96866eb1151d3bc7e778b1abecde1","modified":1590477738459},{"_id":"public/tags/大理/index.html","hash":"732ea4827d4f6d739736beec358a66ae10cffacf","modified":1590477738459},{"_id":"public/tags/丽江/index.html","hash":"b8f44b8566bc4e230daf0337f3d52de9c573b048","modified":1590477738459},{"_id":"public/2020/05/24/我的滑板女神第一天上路/index.html","hash":"7a84fa162d837f9221436d9a47da84fc6378ad03","modified":1590477738459},{"_id":"source/_posts/这一辈子可能都不曾想过，最后会和陆先生走到一起.md","hash":"40cd9292ec10ea0f18b7c9f32d4995e42068c2a4","modified":1590573950429},{"_id":"public/2020/05/26/这一辈子可能都不曾想过，最后会和陆先生走到一起/index.html","hash":"6cdf3e9da39e69bcea482d3fa1cb4f8424c3990a","modified":1590573964886}],"Category":[{"name":"Erlang","_id":"ckae1xdqe0004m7fh5msug3uk"},{"name":"数据结构与算法","_id":"ckae1xdqx000om7fhaku26e98"},{"name":"在路上","_id":"ckae1xdr30017m7fh582u7ouy"}],"Data":[{"_id":"gallery","data":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}},{"_id":"links","data":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}],"Page":[{"title":"About me","description":"个人简介","layout":"about","comments":0,"sidebar":"custom","_content":"\n一名游戏服务器开发程序员，在广州工作。\n\n\n## contact\n\n- mail\n\tshuaicode@gmail.com\n\t935232474@qq.com\n","source":"about/index.md","raw":"---\ntitle: About me\ndescription: 个人简介\nlayout: about\ncomments: false\nsidebar: custom\n---\n\n一名游戏服务器开发程序员，在广州工作。\n\n\n## contact\n\n- mail\n\tshuaicode@gmail.com\n\t935232474@qq.com\n","date":"2019-11-25T03:49:48.468Z","updated":"2019-11-25T03:49:48.468Z","path":"about/index.html","_id":"ckae1xdqb0001m7fh4gw8gli3","content":"<p>一名游戏服务器开发程序员，在广州工作。</p>\n<h2 id=\"contact\"><a href=\"#contact\" class=\"headerlink\" title=\"contact\"></a>contact</h2><ul>\n<li>mail<br>  <a href=\"mailto:shuaicode@gmail.com\" target=\"_blank\" rel=\"noopener\">shuaicode@gmail.com</a><br>  <a href=\"mailto:935232474@qq.com\" target=\"_blank\" rel=\"noopener\">935232474@qq.com</a></li>\n</ul>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p>一名游戏服务器开发程序员，在广州工作。</p>\n<h2 id=\"contact\"><a href=\"#contact\" class=\"headerlink\" title=\"contact\"></a>contact</h2><ul>\n<li>mail<br>  <a href=\"mailto:shuaicode@gmail.com\" target=\"_blank\" rel=\"noopener\">shuaicode@gmail.com</a><br>  <a href=\"mailto:935232474@qq.com\" target=\"_blank\" rel=\"noopener\">935232474@qq.com</a></li>\n</ul>\n"},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2019-11-24T14:37:04.114Z","updated":"2019-11-24T14:37:04.114Z","path":"categories/index.html","_id":"ckae1xdqd0003m7fh9i0rfgt4","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":""},{"title":"友情链接","layout":"links","comments":1,"sidebar":"none","_content":"","source":"links/index.md","raw":"---\ntitle: 友情链接\nlayout: links\ncomments: true\nsidebar: none\n---","date":"2019-11-24T15:35:00.744Z","updated":"2019-11-24T15:35:00.744Z","path":"links/index.html","_id":"ckae1xdqh0007m7fhajjf4ib6","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":""},{"title":"标签","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\ncomments: false\n---\n","date":"2019-11-24T14:37:04.114Z","updated":"2019-11-24T14:37:04.114Z","path":"tags/index.html","_id":"ckae1xdqj0009m7fh7llycjh7","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2019-11-24T14:53:30.519Z","updated":"2019-11-24T14:53:30.519Z","path":"repository/index.html","_id":"ckae1xdql000dm7fhamps9jrr","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":""}],"Post":[{"title":"Erlang实现简单的文件传输_类似ftp","date":"2019-10-01T14:10:39.000Z","_content":"\n#### 不同Erlang主机节点简单的文件传输\n\n\n\n当我们需要在两台不同的主机上进行文件传输（上传，下载），类似ftp的功能。\n\n\n\n如果我们两台机器都装有了Erlang，那么问题就变得简单了起来。\n\n\n\n现在我有两台机器，它分别是MacBook Pro 和一台PC，为了学习方便，它们都装上了Erlang。\n\n\n\n它们的ip地址如图\n\n\n\n![](/img/erlang_ftp.png)\n\n\n\n\n\n在pc启动我们的Erlang节点。(pc是windows系统，所以我们使用werl的方式启动我们的Erlang)\n\n\n\n> werl -name pc@192.168.3.2 -setcookie asd\n\n\n\n在MBP上启动另外一个节点。\n\n> erl -name mbp@192.168.3.3 -setcookie asd\n\n\n\n\n\n在mbp节点上，连接我们的pc节点。\n\n\n\n```erlang\n(mbp@192.168.3.3)1> net_kernel:connect_node('pc@192.168.3.2').\ntrue\n(mbp@192.168.3.3)2> nodes().\n['pc@192.168.3.2']\n```\n\n\n\n这样就连接成功了，nodes() 会返回我们连接的节点列表。\n\n\n\n- 查看pc上当前的工作目录。\n\n\n\n```erlang\n(mbp@192.168.3.3)3> rpc:call('pc@192.168.3.2', file, get_cwd, []).\n{ok,\"d:/work/erlang/study\"}\n```\n\n\n\n- 列出pc当前工作目录下的文件列表\n\n```erlang\n(mbp@192.168.3.3)4> rpc:call('pc@192.168.3.2', file, list_dir, [\".\"]).\n{ok,[\"bg.png\",\"ftp\",\"test.txt\"]}\n```\n\n- 把文件下载到本地。\n\n```erlang\n(mbp@192.168.3.3)5> {ok, Bin} = rpc:call('pc@192.168.3.2', file, read_file, [\"test.txt\"]).\n{ok,<<230,136,145,230,152,175,230,181,139,232,175,149,\n      230,150,135,228,187,182>>}\n\n(mbp@192.168.3.3)6> file:write_file(\"test.txt\", Bin).\nok\n\n(mbp@192.168.3.3)7> file:list_dir(\".\").\n{ok,[\"words.sql\",\"broadcast.erl\",\"broadcast.beam\",\n     \"test.txt\"]}\n```\n\n- 把文件上传到远程节点\n\n```erlang\n(mbp@192.168.3.3)8> {ok, Bin2} = file:read_file(\"words.sql\").\n{ok,<<\"/*\\r\\nNavicat MySQL Data Transfer\\r\\n\\r\\nSource Server         : local\\r\\nSource Server Version : 50718\\r\\nSource Host\"...>>}\n\n(mbp@192.168.3.3)9> rpc:call('pc@192.168.3.2', file, write_file, [\"words.sql\", Bin2]).\nok\n\n(mbp@192.168.3.3)10> rpc:call('pc@192.168.3.2', file, list_dir, [\".\"]).\n{ok,[\"bg.png\",\"ftp\",\"test.txt\",\"words.sql\"]}\n```\n\n\n\n\n\n这样就okok啦。","source":"_posts/Erlang实现简单的文件传输_类似ftp.md","raw":"---\ntitle: Erlang实现简单的文件传输_类似ftp\ndate: 2019-9-31 22:10:39\ncategories:\n  - Erlang\ntags: erlang\n---\n\n#### 不同Erlang主机节点简单的文件传输\n\n\n\n当我们需要在两台不同的主机上进行文件传输（上传，下载），类似ftp的功能。\n\n\n\n如果我们两台机器都装有了Erlang，那么问题就变得简单了起来。\n\n\n\n现在我有两台机器，它分别是MacBook Pro 和一台PC，为了学习方便，它们都装上了Erlang。\n\n\n\n它们的ip地址如图\n\n\n\n![](/img/erlang_ftp.png)\n\n\n\n\n\n在pc启动我们的Erlang节点。(pc是windows系统，所以我们使用werl的方式启动我们的Erlang)\n\n\n\n> werl -name pc@192.168.3.2 -setcookie asd\n\n\n\n在MBP上启动另外一个节点。\n\n> erl -name mbp@192.168.3.3 -setcookie asd\n\n\n\n\n\n在mbp节点上，连接我们的pc节点。\n\n\n\n```erlang\n(mbp@192.168.3.3)1> net_kernel:connect_node('pc@192.168.3.2').\ntrue\n(mbp@192.168.3.3)2> nodes().\n['pc@192.168.3.2']\n```\n\n\n\n这样就连接成功了，nodes() 会返回我们连接的节点列表。\n\n\n\n- 查看pc上当前的工作目录。\n\n\n\n```erlang\n(mbp@192.168.3.3)3> rpc:call('pc@192.168.3.2', file, get_cwd, []).\n{ok,\"d:/work/erlang/study\"}\n```\n\n\n\n- 列出pc当前工作目录下的文件列表\n\n```erlang\n(mbp@192.168.3.3)4> rpc:call('pc@192.168.3.2', file, list_dir, [\".\"]).\n{ok,[\"bg.png\",\"ftp\",\"test.txt\"]}\n```\n\n- 把文件下载到本地。\n\n```erlang\n(mbp@192.168.3.3)5> {ok, Bin} = rpc:call('pc@192.168.3.2', file, read_file, [\"test.txt\"]).\n{ok,<<230,136,145,230,152,175,230,181,139,232,175,149,\n      230,150,135,228,187,182>>}\n\n(mbp@192.168.3.3)6> file:write_file(\"test.txt\", Bin).\nok\n\n(mbp@192.168.3.3)7> file:list_dir(\".\").\n{ok,[\"words.sql\",\"broadcast.erl\",\"broadcast.beam\",\n     \"test.txt\"]}\n```\n\n- 把文件上传到远程节点\n\n```erlang\n(mbp@192.168.3.3)8> {ok, Bin2} = file:read_file(\"words.sql\").\n{ok,<<\"/*\\r\\nNavicat MySQL Data Transfer\\r\\n\\r\\nSource Server         : local\\r\\nSource Server Version : 50718\\r\\nSource Host\"...>>}\n\n(mbp@192.168.3.3)9> rpc:call('pc@192.168.3.2', file, write_file, [\"words.sql\", Bin2]).\nok\n\n(mbp@192.168.3.3)10> rpc:call('pc@192.168.3.2', file, list_dir, [\".\"]).\n{ok,[\"bg.png\",\"ftp\",\"test.txt\",\"words.sql\"]}\n```\n\n\n\n\n\n这样就okok啦。","slug":"Erlang实现简单的文件传输_类似ftp","published":1,"updated":"2019-11-24T15:41:20.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdq70000m7fh5wqydcxf","content":"<h4 id=\"不同Erlang主机节点简单的文件传输\"><a href=\"#不同Erlang主机节点简单的文件传输\" class=\"headerlink\" title=\"不同Erlang主机节点简单的文件传输\"></a>不同Erlang主机节点简单的文件传输</h4><p>当我们需要在两台不同的主机上进行文件传输（上传，下载），类似ftp的功能。</p>\n<p>如果我们两台机器都装有了Erlang，那么问题就变得简单了起来。</p>\n<p>现在我有两台机器，它分别是MacBook Pro 和一台PC，为了学习方便，它们都装上了Erlang。</p>\n<p>它们的ip地址如图</p>\n<p><img src=\"/img/erlang_ftp.png\" alt=\"\"></p>\n<p>在pc启动我们的Erlang节点。(pc是windows系统，所以我们使用werl的方式启动我们的Erlang)</p>\n<blockquote>\n<p>werl -name <a href=\"mailto:pc@192.168.3.2\" target=\"_blank\" rel=\"noopener\">pc@192.168.3.2</a> -setcookie asd</p>\n</blockquote>\n<p>在MBP上启动另外一个节点。</p>\n<blockquote>\n<p>erl -name <a href=\"mailto:mbp@192.168.3.3\" target=\"_blank\" rel=\"noopener\">mbp@192.168.3.3</a> -setcookie asd</p>\n</blockquote>\n<p>在mbp节点上，连接我们的pc节点。</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">1</span>&gt; net_kernel:connect_node('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>').</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">2</span>&gt; nodes().</span><br><span class=\"line\">['pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>']</span><br></pre></td></tr></table></figure>\n\n\n\n<p>这样就连接成功了，nodes() 会返回我们连接的节点列表。</p>\n<ul>\n<li>查看pc上当前的工作目录。</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">3</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, get_cwd, []).</span><br><span class=\"line\">&#123;ok,<span class=\"string\">\"d:/work/erlang/study\"</span>&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>列出pc当前工作目录下的文件列表</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">4</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, list_dir, [<span class=\"string\">\".\"</span>]).</span><br><span class=\"line\">&#123;ok,[<span class=\"string\">\"bg.png\"</span>,<span class=\"string\">\"ftp\"</span>,<span class=\"string\">\"test.txt\"</span>]&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>把文件下载到本地。</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">5</span>&gt; &#123;ok, Bin&#125; = rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, read_file, [<span class=\"string\">\"test.txt\"</span>]).</span><br><span class=\"line\">&#123;ok,&lt;&lt;<span class=\"number\">230</span>,<span class=\"number\">136</span>,<span class=\"number\">145</span>,<span class=\"number\">230</span>,<span class=\"number\">152</span>,<span class=\"number\">175</span>,<span class=\"number\">230</span>,<span class=\"number\">181</span>,<span class=\"number\">139</span>,<span class=\"number\">232</span>,<span class=\"number\">175</span>,<span class=\"number\">149</span>,</span><br><span class=\"line\">      <span class=\"number\">230</span>,<span class=\"number\">150</span>,<span class=\"number\">135</span>,<span class=\"number\">228</span>,<span class=\"number\">187</span>,<span class=\"number\">182</span>&gt;&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">6</span>&gt; file:write_file(<span class=\"string\">\"test.txt\"</span>, Bin).</span><br><span class=\"line\">ok</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">7</span>&gt; file:list_dir(<span class=\"string\">\".\"</span>).</span><br><span class=\"line\">&#123;ok,[<span class=\"string\">\"words.sql\"</span>,<span class=\"string\">\"broadcast.erl\"</span>,<span class=\"string\">\"broadcast.beam\"</span>,</span><br><span class=\"line\">     <span class=\"string\">\"test.txt\"</span>]&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>把文件上传到远程节点</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">8</span>&gt; &#123;ok, Bin2&#125; = file:read_file(<span class=\"string\">\"words.sql\"</span>).</span><br><span class=\"line\">&#123;ok,&lt;&lt;<span class=\"string\">\"/*\\r\\nNavicat MySQL Data Transfer\\r\\n\\r\\nSource Server         : local\\r\\nSource Server Version : 50718\\r\\nSource Host\"</span>...&gt;&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">9</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, write_file, [<span class=\"string\">\"words.sql\"</span>, Bin2]).</span><br><span class=\"line\">ok</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">10</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, list_dir, [<span class=\"string\">\".\"</span>]).</span><br><span class=\"line\">&#123;ok,[<span class=\"string\">\"bg.png\"</span>,<span class=\"string\">\"ftp\"</span>,<span class=\"string\">\"test.txt\"</span>,<span class=\"string\">\"words.sql\"</span>]&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>这样就okok啦。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h4 id=\"不同Erlang主机节点简单的文件传输\"><a href=\"#不同Erlang主机节点简单的文件传输\" class=\"headerlink\" title=\"不同Erlang主机节点简单的文件传输\"></a>不同Erlang主机节点简单的文件传输</h4><p>当我们需要在两台不同的主机上进行文件传输（上传，下载），类似ftp的功能。</p>\n<p>如果我们两台机器都装有了Erlang，那么问题就变得简单了起来。</p>\n<p>现在我有两台机器，它分别是MacBook Pro 和一台PC，为了学习方便，它们都装上了Erlang。</p>\n<p>它们的ip地址如图</p>\n<p><img src=\"/img/erlang_ftp.png\" alt=\"\"></p>\n<p>在pc启动我们的Erlang节点。(pc是windows系统，所以我们使用werl的方式启动我们的Erlang)</p>\n<blockquote>\n<p>werl -name <a href=\"mailto:pc@192.168.3.2\" target=\"_blank\" rel=\"noopener\">pc@192.168.3.2</a> -setcookie asd</p>\n</blockquote>\n<p>在MBP上启动另外一个节点。</p>\n<blockquote>\n<p>erl -name <a href=\"mailto:mbp@192.168.3.3\" target=\"_blank\" rel=\"noopener\">mbp@192.168.3.3</a> -setcookie asd</p>\n</blockquote>\n<p>在mbp节点上，连接我们的pc节点。</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">1</span>&gt; net_kernel:connect_node('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>').</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">2</span>&gt; nodes().</span><br><span class=\"line\">['pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>']</span><br></pre></td></tr></table></figure>\n\n\n\n<p>这样就连接成功了，nodes() 会返回我们连接的节点列表。</p>\n<ul>\n<li>查看pc上当前的工作目录。</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">3</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, get_cwd, []).</span><br><span class=\"line\">&#123;ok,<span class=\"string\">\"d:/work/erlang/study\"</span>&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>列出pc当前工作目录下的文件列表</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">4</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, list_dir, [<span class=\"string\">\".\"</span>]).</span><br><span class=\"line\">&#123;ok,[<span class=\"string\">\"bg.png\"</span>,<span class=\"string\">\"ftp\"</span>,<span class=\"string\">\"test.txt\"</span>]&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>把文件下载到本地。</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">5</span>&gt; &#123;ok, Bin&#125; = rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, read_file, [<span class=\"string\">\"test.txt\"</span>]).</span><br><span class=\"line\">&#123;ok,&lt;&lt;<span class=\"number\">230</span>,<span class=\"number\">136</span>,<span class=\"number\">145</span>,<span class=\"number\">230</span>,<span class=\"number\">152</span>,<span class=\"number\">175</span>,<span class=\"number\">230</span>,<span class=\"number\">181</span>,<span class=\"number\">139</span>,<span class=\"number\">232</span>,<span class=\"number\">175</span>,<span class=\"number\">149</span>,</span><br><span class=\"line\">      <span class=\"number\">230</span>,<span class=\"number\">150</span>,<span class=\"number\">135</span>,<span class=\"number\">228</span>,<span class=\"number\">187</span>,<span class=\"number\">182</span>&gt;&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">6</span>&gt; file:write_file(<span class=\"string\">\"test.txt\"</span>, Bin).</span><br><span class=\"line\">ok</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">7</span>&gt; file:list_dir(<span class=\"string\">\".\"</span>).</span><br><span class=\"line\">&#123;ok,[<span class=\"string\">\"words.sql\"</span>,<span class=\"string\">\"broadcast.erl\"</span>,<span class=\"string\">\"broadcast.beam\"</span>,</span><br><span class=\"line\">     <span class=\"string\">\"test.txt\"</span>]&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>把文件上传到远程节点</li>\n</ul>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">8</span>&gt; &#123;ok, Bin2&#125; = file:read_file(<span class=\"string\">\"words.sql\"</span>).</span><br><span class=\"line\">&#123;ok,&lt;&lt;<span class=\"string\">\"/*\\r\\nNavicat MySQL Data Transfer\\r\\n\\r\\nSource Server         : local\\r\\nSource Server Version : 50718\\r\\nSource Host\"</span>...&gt;&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">9</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, write_file, [<span class=\"string\">\"words.sql\"</span>, Bin2]).</span><br><span class=\"line\">ok</span><br><span class=\"line\"></span><br><span class=\"line\">(mbp@<span class=\"number\">192.168</span>.<span class=\"number\">3.3</span>)<span class=\"number\">10</span>&gt; rpc:call('pc@<span class=\"number\">192.168</span>.<span class=\"number\">3.2</span>', file, list_dir, [<span class=\"string\">\".\"</span>]).</span><br><span class=\"line\">&#123;ok,[<span class=\"string\">\"bg.png\"</span>,<span class=\"string\">\"ftp\"</span>,<span class=\"string\">\"test.txt\"</span>,<span class=\"string\">\"words.sql\"</span>]&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>这样就okok啦。</p>\n"},{"title":"Erlang运行时错误","date":"2019-10-01T14:10:39.000Z","_content":"\n\n### 运行时错误\n\n\n\n1. 函数子句错误\n\n   发生函数子句(**function clause**)错误的最可能原因是：函数的所有卫语句或所有的匹配模式都失败了。\n\n2. case 子句错误\n\n   当忘记了一个特定的情况、传入的数据类型错误或者需要一个匹配一切的子句时，会发生case子句(**case clause**)错误。\n\n3. if子句错误\n\n   if子句(**if clause**)错误的原因和case子句类似。当Erlang找不到一个可以求值为true的分支时，会引发这个错误。\n\n4. 不正确匹配错误\n\n   当模式匹配失败时，就会出现不正确匹配(**bad match**)错误。这通常意味着你时图进行不可能的模式匹配，对一个变量进行二次绑定或者在**=**操作符两边放置了不相等的东西。\n\n5. 不正确参数错误\n\n   不正确参数(**bad argument**)错误和函数子句错误类似，因为它们都和使用不正确的参数调用函数有关。\n\n6. 未定义函数错误\n\n   当调用了一个不存在的函数时候，会发生未定义函数(**undefined function**)错误。\n\n7. 不正确算术计算错误\n\n   当试图进行不正确的算术计算时，会发生不正确算术计算(**bad arithmetic**)错误，如除0或者在原子和数值之间进行算术计算。\n\n8. 不正确函数错误\n\n   导致不正确函数(**bad function**)错误最常见的原因是把变量当成函数使用，但是变量的值并不是函数。\n\n9. 不正确元素错误。\n\n   不正确元素(**bad rarity**)错误时不正确函数错误的特殊情况。当使用高阶函数时，给它们传递的参数个数多于或者少于实际参数个数时会出现这个错误。\n\n10. 系统限制错误\n\n    出现系统限制错误的原因有很多，下面是其中的一些：\n\n    - 进程太多\n    - 原子太长\n    - 函数参数个数太多\n    - 原子太多\n    - 连接的节点数太多\n\n","source":"_posts/Erlang运行时错误.md","raw":"---\ntitle: Erlang运行时错误\ndate: 2019-9-31 22:10:39\ncategories:\n  - Erlang\ntags: erlang\n---\n\n\n### 运行时错误\n\n\n\n1. 函数子句错误\n\n   发生函数子句(**function clause**)错误的最可能原因是：函数的所有卫语句或所有的匹配模式都失败了。\n\n2. case 子句错误\n\n   当忘记了一个特定的情况、传入的数据类型错误或者需要一个匹配一切的子句时，会发生case子句(**case clause**)错误。\n\n3. if子句错误\n\n   if子句(**if clause**)错误的原因和case子句类似。当Erlang找不到一个可以求值为true的分支时，会引发这个错误。\n\n4. 不正确匹配错误\n\n   当模式匹配失败时，就会出现不正确匹配(**bad match**)错误。这通常意味着你时图进行不可能的模式匹配，对一个变量进行二次绑定或者在**=**操作符两边放置了不相等的东西。\n\n5. 不正确参数错误\n\n   不正确参数(**bad argument**)错误和函数子句错误类似，因为它们都和使用不正确的参数调用函数有关。\n\n6. 未定义函数错误\n\n   当调用了一个不存在的函数时候，会发生未定义函数(**undefined function**)错误。\n\n7. 不正确算术计算错误\n\n   当试图进行不正确的算术计算时，会发生不正确算术计算(**bad arithmetic**)错误，如除0或者在原子和数值之间进行算术计算。\n\n8. 不正确函数错误\n\n   导致不正确函数(**bad function**)错误最常见的原因是把变量当成函数使用，但是变量的值并不是函数。\n\n9. 不正确元素错误。\n\n   不正确元素(**bad rarity**)错误时不正确函数错误的特殊情况。当使用高阶函数时，给它们传递的参数个数多于或者少于实际参数个数时会出现这个错误。\n\n10. 系统限制错误\n\n    出现系统限制错误的原因有很多，下面是其中的一些：\n\n    - 进程太多\n    - 原子太长\n    - 函数参数个数太多\n    - 原子太多\n    - 连接的节点数太多\n\n","slug":"Erlang运行时错误","published":1,"updated":"2019-11-24T15:32:43.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqc0002m7fhagvt789u","content":"<h3 id=\"运行时错误\"><a href=\"#运行时错误\" class=\"headerlink\" title=\"运行时错误\"></a>运行时错误</h3><ol>\n<li><p>函数子句错误</p>\n<p>发生函数子句(<strong>function clause</strong>)错误的最可能原因是：函数的所有卫语句或所有的匹配模式都失败了。</p>\n</li>\n<li><p>case 子句错误</p>\n<p>当忘记了一个特定的情况、传入的数据类型错误或者需要一个匹配一切的子句时，会发生case子句(<strong>case clause</strong>)错误。</p>\n</li>\n<li><p>if子句错误</p>\n<p>if子句(<strong>if clause</strong>)错误的原因和case子句类似。当Erlang找不到一个可以求值为true的分支时，会引发这个错误。</p>\n</li>\n<li><p>不正确匹配错误</p>\n<p>当模式匹配失败时，就会出现不正确匹配(<strong>bad match</strong>)错误。这通常意味着你时图进行不可能的模式匹配，对一个变量进行二次绑定或者在<strong>=</strong>操作符两边放置了不相等的东西。</p>\n</li>\n<li><p>不正确参数错误</p>\n<p>不正确参数(<strong>bad argument</strong>)错误和函数子句错误类似，因为它们都和使用不正确的参数调用函数有关。</p>\n</li>\n<li><p>未定义函数错误</p>\n<p>当调用了一个不存在的函数时候，会发生未定义函数(<strong>undefined function</strong>)错误。</p>\n</li>\n<li><p>不正确算术计算错误</p>\n<p>当试图进行不正确的算术计算时，会发生不正确算术计算(<strong>bad arithmetic</strong>)错误，如除0或者在原子和数值之间进行算术计算。</p>\n</li>\n<li><p>不正确函数错误</p>\n<p>导致不正确函数(<strong>bad function</strong>)错误最常见的原因是把变量当成函数使用，但是变量的值并不是函数。</p>\n</li>\n<li><p>不正确元素错误。</p>\n<p>不正确元素(<strong>bad rarity</strong>)错误时不正确函数错误的特殊情况。当使用高阶函数时，给它们传递的参数个数多于或者少于实际参数个数时会出现这个错误。</p>\n</li>\n<li><p>系统限制错误</p>\n<p>出现系统限制错误的原因有很多，下面是其中的一些：</p>\n<ul>\n<li>进程太多</li>\n<li>原子太长</li>\n<li>函数参数个数太多</li>\n<li>原子太多</li>\n<li>连接的节点数太多</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"运行时错误\"><a href=\"#运行时错误\" class=\"headerlink\" title=\"运行时错误\"></a>运行时错误</h3><ol>\n<li><p>函数子句错误</p>\n<p>发生函数子句(<strong>function clause</strong>)错误的最可能原因是：函数的所有卫语句或所有的匹配模式都失败了。</p>\n</li>\n<li><p>case 子句错误</p>\n<p>当忘记了一个特定的情况、传入的数据类型错误或者需要一个匹配一切的子句时，会发生case子句(<strong>case clause</strong>)错误。</p>\n</li>\n<li><p>if子句错误</p>\n<p>if子句(<strong>if clause</strong>)错误的原因和case子句类似。当Erlang找不到一个可以求值为true的分支时，会引发这个错误。</p>\n</li>\n<li><p>不正确匹配错误</p>\n<p>当模式匹配失败时，就会出现不正确匹配(<strong>bad match</strong>)错误。这通常意味着你时图进行不可能的模式匹配，对一个变量进行二次绑定或者在<strong>=</strong>操作符两边放置了不相等的东西。</p>\n</li>\n<li><p>不正确参数错误</p>\n<p>不正确参数(<strong>bad argument</strong>)错误和函数子句错误类似，因为它们都和使用不正确的参数调用函数有关。</p>\n</li>\n<li><p>未定义函数错误</p>\n<p>当调用了一个不存在的函数时候，会发生未定义函数(<strong>undefined function</strong>)错误。</p>\n</li>\n<li><p>不正确算术计算错误</p>\n<p>当试图进行不正确的算术计算时，会发生不正确算术计算(<strong>bad arithmetic</strong>)错误，如除0或者在原子和数值之间进行算术计算。</p>\n</li>\n<li><p>不正确函数错误</p>\n<p>导致不正确函数(<strong>bad function</strong>)错误最常见的原因是把变量当成函数使用，但是变量的值并不是函数。</p>\n</li>\n<li><p>不正确元素错误。</p>\n<p>不正确元素(<strong>bad rarity</strong>)错误时不正确函数错误的特殊情况。当使用高阶函数时，给它们传递的参数个数多于或者少于实际参数个数时会出现这个错误。</p>\n</li>\n<li><p>系统限制错误</p>\n<p>出现系统限制错误的原因有很多，下面是其中的一些：</p>\n<ul>\n<li>进程太多</li>\n<li>原子太长</li>\n<li>函数参数个数太多</li>\n<li>原子太多</li>\n<li>连接的节点数太多</li>\n</ul>\n</li>\n</ol>\n"},{"title":"Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3","date":"2019-09-17T14:45:39.000Z","_content":"\n## 先安装openssl\n下载openssl源码\n\n$ wget http://www.openssl.org/source/openssl-1.0.2a.tar.gz\n\n$ tar -zxvf openssl-1.0.2a.tar.gz\n\n进入源码目录，注意如果不是最新下的目录，需要先执行 make clean 确保能够重新编译成功\n为了不和系统的openssl冲突，我们安装的时候需要指定安装的路径\n\n$ make clean\n\n$ ./configure --prefix=/usr/local/opt\n\nconfig之后，会生成Makefile，打开Makefile找到cc，在CFLAG参数列表里加上-fPIC\n\nCC= cc\n\nCFLAG= -fPIC -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -Wa,—noexecstack -m64 -DL_ENDIAN -DTERMIO -O3 -Wall -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM\n\n编译并安装\n\n$ sudo make && make install\n\n\n\n## 安装Java\n\n如果没有jdk，务必自行安装下jdk1.6 以上\n\n\n\n## 安装erlang\n\n官网下载最新的Erlang源码包。<https://www.erlang.org/downloads>\n\n解压，然后进入到erlang源码目录下。\n\n$ make clean\n\n$ sudo ./configure  --prefix=/your/path/erlang --with-ssl=/usr/local/opt/ssl --without-javac\n\n$ sudo make && make install \n\n> 如果安装过程中报错，出现依赖缺失，先安装缺失依赖，然后在依次执行以上几个命令\n\n\n\n添加环境变量\n\n\n\n```shell\nexport PATH=$PATH:/your/path/erlang/bin\n```\n\n\n\n## 安装rebar3\n\n\n\n从官网下载 rebar3  <https://www.rebar3.org/>\n\n\n\n赋予可执行权限\n\n\n\n$ sudo chmod a+x rebar3\n\n\n\n复制到shell可访问的bin目录 或者添加到环境变量。我这里选择的是 复制到 bin目录\n\n\n\n$ sudo mv rebar3 /usr/local/bin\n\n\n\n#### 最后\n\n如果有什么问题，请在 https://github.com/luxingwen/learning-erlang 提交issue与我交流","source":"_posts/Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3.md","raw":"---\ntitle: Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3\ndate: 2019-9-17 22:45:39\ncategories:\n  - Erlang\ntags: \n\t- erlang\n\t- rebar3\n---\n\n## 先安装openssl\n下载openssl源码\n\n$ wget http://www.openssl.org/source/openssl-1.0.2a.tar.gz\n\n$ tar -zxvf openssl-1.0.2a.tar.gz\n\n进入源码目录，注意如果不是最新下的目录，需要先执行 make clean 确保能够重新编译成功\n为了不和系统的openssl冲突，我们安装的时候需要指定安装的路径\n\n$ make clean\n\n$ ./configure --prefix=/usr/local/opt\n\nconfig之后，会生成Makefile，打开Makefile找到cc，在CFLAG参数列表里加上-fPIC\n\nCC= cc\n\nCFLAG= -fPIC -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -Wa,—noexecstack -m64 -DL_ENDIAN -DTERMIO -O3 -Wall -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM\n\n编译并安装\n\n$ sudo make && make install\n\n\n\n## 安装Java\n\n如果没有jdk，务必自行安装下jdk1.6 以上\n\n\n\n## 安装erlang\n\n官网下载最新的Erlang源码包。<https://www.erlang.org/downloads>\n\n解压，然后进入到erlang源码目录下。\n\n$ make clean\n\n$ sudo ./configure  --prefix=/your/path/erlang --with-ssl=/usr/local/opt/ssl --without-javac\n\n$ sudo make && make install \n\n> 如果安装过程中报错，出现依赖缺失，先安装缺失依赖，然后在依次执行以上几个命令\n\n\n\n添加环境变量\n\n\n\n```shell\nexport PATH=$PATH:/your/path/erlang/bin\n```\n\n\n\n## 安装rebar3\n\n\n\n从官网下载 rebar3  <https://www.rebar3.org/>\n\n\n\n赋予可执行权限\n\n\n\n$ sudo chmod a+x rebar3\n\n\n\n复制到shell可访问的bin目录 或者添加到环境变量。我这里选择的是 复制到 bin目录\n\n\n\n$ sudo mv rebar3 /usr/local/bin\n\n\n\n#### 最后\n\n如果有什么问题，请在 https://github.com/luxingwen/learning-erlang 提交issue与我交流","slug":"Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3","published":1,"updated":"2019-11-25T03:47:33.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqg0006m7fhe3g503ut","content":"<h2 id=\"先安装openssl\"><a href=\"#先安装openssl\" class=\"headerlink\" title=\"先安装openssl\"></a>先安装openssl</h2><p>下载openssl源码</p>\n<p>$ wget <a href=\"http://www.openssl.org/source/openssl-1.0.2a.tar.gz\" target=\"_blank\" rel=\"noopener\">http://www.openssl.org/source/openssl-1.0.2a.tar.gz</a></p>\n<p>$ tar -zxvf openssl-1.0.2a.tar.gz</p>\n<p>进入源码目录，注意如果不是最新下的目录，需要先执行 make clean 确保能够重新编译成功<br>为了不和系统的openssl冲突，我们安装的时候需要指定安装的路径</p>\n<p>$ make clean</p>\n<p>$ ./configure –prefix=/usr/local/opt</p>\n<p>config之后，会生成Makefile，打开Makefile找到cc，在CFLAG参数列表里加上-fPIC</p>\n<p>CC= cc</p>\n<p>CFLAG= -fPIC -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -Wa,—noexecstack -m64 -DL_ENDIAN -DTERMIO -O3 -Wall -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM</p>\n<p>编译并安装</p>\n<p>$ sudo make &amp;&amp; make install</p>\n<h2 id=\"安装Java\"><a href=\"#安装Java\" class=\"headerlink\" title=\"安装Java\"></a>安装Java</h2><p>如果没有jdk，务必自行安装下jdk1.6 以上</p>\n<h2 id=\"安装erlang\"><a href=\"#安装erlang\" class=\"headerlink\" title=\"安装erlang\"></a>安装erlang</h2><p>官网下载最新的Erlang源码包。<a href=\"https://www.erlang.org/downloads\" target=\"_blank\" rel=\"noopener\">https://www.erlang.org/downloads</a></p>\n<p>解压，然后进入到erlang源码目录下。</p>\n<p>$ make clean</p>\n<p>$ sudo ./configure  –prefix=/your/path/erlang –with-ssl=/usr/local/opt/ssl –without-javac</p>\n<p>$ sudo make &amp;&amp; make install </p>\n<blockquote>\n<p>如果安装过程中报错，出现依赖缺失，先安装缺失依赖，然后在依次执行以上几个命令</p>\n</blockquote>\n<p>添加环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=$PATH:/your/path/erlang/bin</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"安装rebar3\"><a href=\"#安装rebar3\" class=\"headerlink\" title=\"安装rebar3\"></a>安装rebar3</h2><p>从官网下载 rebar3  <a href=\"https://www.rebar3.org/\" target=\"_blank\" rel=\"noopener\">https://www.rebar3.org/</a></p>\n<p>赋予可执行权限</p>\n<p>$ sudo chmod a+x rebar3</p>\n<p>复制到shell可访问的bin目录 或者添加到环境变量。我这里选择的是 复制到 bin目录</p>\n<p>$ sudo mv rebar3 /usr/local/bin</p>\n<h4 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h4><p>如果有什么问题，请在 <a href=\"https://github.com/luxingwen/learning-erlang\" target=\"_blank\" rel=\"noopener\">https://github.com/luxingwen/learning-erlang</a> 提交issue与我交流</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h2 id=\"先安装openssl\"><a href=\"#先安装openssl\" class=\"headerlink\" title=\"先安装openssl\"></a>先安装openssl</h2><p>下载openssl源码</p>\n<p>$ wget <a href=\"http://www.openssl.org/source/openssl-1.0.2a.tar.gz\" target=\"_blank\" rel=\"noopener\">http://www.openssl.org/source/openssl-1.0.2a.tar.gz</a></p>\n<p>$ tar -zxvf openssl-1.0.2a.tar.gz</p>\n<p>进入源码目录，注意如果不是最新下的目录，需要先执行 make clean 确保能够重新编译成功<br>为了不和系统的openssl冲突，我们安装的时候需要指定安装的路径</p>\n<p>$ make clean</p>\n<p>$ ./configure –prefix=/usr/local/opt</p>\n<p>config之后，会生成Makefile，打开Makefile找到cc，在CFLAG参数列表里加上-fPIC</p>\n<p>CC= cc</p>\n<p>CFLAG= -fPIC -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -Wa,—noexecstack -m64 -DL_ENDIAN -DTERMIO -O3 -Wall -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM</p>\n<p>编译并安装</p>\n<p>$ sudo make &amp;&amp; make install</p>\n<h2 id=\"安装Java\"><a href=\"#安装Java\" class=\"headerlink\" title=\"安装Java\"></a>安装Java</h2><p>如果没有jdk，务必自行安装下jdk1.6 以上</p>\n<h2 id=\"安装erlang\"><a href=\"#安装erlang\" class=\"headerlink\" title=\"安装erlang\"></a>安装erlang</h2><p>官网下载最新的Erlang源码包。<a href=\"https://www.erlang.org/downloads\" target=\"_blank\" rel=\"noopener\">https://www.erlang.org/downloads</a></p>\n<p>解压，然后进入到erlang源码目录下。</p>\n<p>$ make clean</p>\n<p>$ sudo ./configure  –prefix=/your/path/erlang –with-ssl=/usr/local/opt/ssl –without-javac</p>\n<p>$ sudo make &amp;&amp; make install </p>\n<blockquote>\n<p>如果安装过程中报错，出现依赖缺失，先安装缺失依赖，然后在依次执行以上几个命令</p>\n</blockquote>\n<p>添加环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=$PATH:/your/path/erlang/bin</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"安装rebar3\"><a href=\"#安装rebar3\" class=\"headerlink\" title=\"安装rebar3\"></a>安装rebar3</h2><p>从官网下载 rebar3  <a href=\"https://www.rebar3.org/\" target=\"_blank\" rel=\"noopener\">https://www.rebar3.org/</a></p>\n<p>赋予可执行权限</p>\n<p>$ sudo chmod a+x rebar3</p>\n<p>复制到shell可访问的bin目录 或者添加到环境变量。我这里选择的是 复制到 bin目录</p>\n<p>$ sudo mv rebar3 /usr/local/bin</p>\n<h4 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h4><p>如果有什么问题，请在 <a href=\"https://github.com/luxingwen/learning-erlang\" target=\"_blank\" rel=\"noopener\">https://github.com/luxingwen/learning-erlang</a> 提交issue与我交流</p>\n"},{"title":"ETS","date":"2019-09-29T14:45:39.000Z","_content":"\n### ETS\n\n\n\n键值存储，查找时间为常量。\n\n\n\n#### 四种不同的类型\n\n\n\n- 集合（set)\n\n  相同的key-value元组只能出现一次。\n\n- 包（bag)\n\n  每种key-value元组组合只能出现一次，但是同一个key可以出现多次。\n\n- 重复包(duplicate bag)\n\n  允许重复的元组。\n\n- 有序集合（ordered set)\n\n  相同的key-value元组只能出现一次，但是可以按key的顺序访问各个元组。\n\n\n\n> 访问有序集合（ordered set)类型中的元素需要消耗表长度的对数级别的时间（oLog n),访问其余类型的元素只需要消耗常量级别的时间。\n\n\n\n#### 表权限\n\n\n\n- public\n\n  允许任何进程访问（读写）。\n\n- private\n\n  只有拥有该表的进程才能访问。\n\n- protected\n\n  任何进程都可以读，只有拥有该表的进程才能写入。\n\n\n\n#### 其它参数\n\n\n\n- {keypos, N}\n\n  创建表的时候可以通过 {keypos, N} 指定键取自那个位置，对存储记录record非常的有用。\n\n\n\n- named_table\n\n  如果存在此选项，则以表的名称注册该表，然后在后续的操作使用该表名称而不是表的标识符。要获取指定标的标识符，可以使用 whereis/1。\n\n\n\n- {write_concurrency, boolean()}\n\n  默认为false。这种情况下，对表的写入修改的操作获得独占访问，阻塞对同一表的任何并发访问。如果设置为true，则表将优化为并发写访问。\n\n- {read_concurrency, boolean()}\n\n  默认为false。如果设置为true，则该表将优化为并发读访问。\n\n- compressed\n\n  压缩，如果存在此选项，那么将以更紧凑的格式存储表数据，以消耗更少的内存。但是，这会使表操作变慢。特别是需要查找整个对象（如match，select)这种操作，速度会慢很多，关键元素不会被压缩。\n\n  ","source":"_posts/ets.md","raw":"---\ntitle: ETS\ndate: 2019-9-29 22:45:39\ncategories:\n  - Erlang\ntags: \n  - erlang\n  - ets\n---\n\n### ETS\n\n\n\n键值存储，查找时间为常量。\n\n\n\n#### 四种不同的类型\n\n\n\n- 集合（set)\n\n  相同的key-value元组只能出现一次。\n\n- 包（bag)\n\n  每种key-value元组组合只能出现一次，但是同一个key可以出现多次。\n\n- 重复包(duplicate bag)\n\n  允许重复的元组。\n\n- 有序集合（ordered set)\n\n  相同的key-value元组只能出现一次，但是可以按key的顺序访问各个元组。\n\n\n\n> 访问有序集合（ordered set)类型中的元素需要消耗表长度的对数级别的时间（oLog n),访问其余类型的元素只需要消耗常量级别的时间。\n\n\n\n#### 表权限\n\n\n\n- public\n\n  允许任何进程访问（读写）。\n\n- private\n\n  只有拥有该表的进程才能访问。\n\n- protected\n\n  任何进程都可以读，只有拥有该表的进程才能写入。\n\n\n\n#### 其它参数\n\n\n\n- {keypos, N}\n\n  创建表的时候可以通过 {keypos, N} 指定键取自那个位置，对存储记录record非常的有用。\n\n\n\n- named_table\n\n  如果存在此选项，则以表的名称注册该表，然后在后续的操作使用该表名称而不是表的标识符。要获取指定标的标识符，可以使用 whereis/1。\n\n\n\n- {write_concurrency, boolean()}\n\n  默认为false。这种情况下，对表的写入修改的操作获得独占访问，阻塞对同一表的任何并发访问。如果设置为true，则表将优化为并发写访问。\n\n- {read_concurrency, boolean()}\n\n  默认为false。如果设置为true，则该表将优化为并发读访问。\n\n- compressed\n\n  压缩，如果存在此选项，那么将以更紧凑的格式存储表数据，以消耗更少的内存。但是，这会使表操作变慢。特别是需要查找整个对象（如match，select)这种操作，速度会慢很多，关键元素不会被压缩。\n\n  ","slug":"ets","published":1,"updated":"2019-11-24T15:22:52.662Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqi0008m7fhc6j334ut","content":"<h3 id=\"ETS\"><a href=\"#ETS\" class=\"headerlink\" title=\"ETS\"></a>ETS</h3><p>键值存储，查找时间为常量。</p>\n<h4 id=\"四种不同的类型\"><a href=\"#四种不同的类型\" class=\"headerlink\" title=\"四种不同的类型\"></a>四种不同的类型</h4><ul>\n<li><p>集合（set)</p>\n<p>相同的key-value元组只能出现一次。</p>\n</li>\n<li><p>包（bag)</p>\n<p>每种key-value元组组合只能出现一次，但是同一个key可以出现多次。</p>\n</li>\n<li><p>重复包(duplicate bag)</p>\n<p>允许重复的元组。</p>\n</li>\n<li><p>有序集合（ordered set)</p>\n<p>相同的key-value元组只能出现一次，但是可以按key的顺序访问各个元组。</p>\n</li>\n</ul>\n<blockquote>\n<p>访问有序集合（ordered set)类型中的元素需要消耗表长度的对数级别的时间（oLog n),访问其余类型的元素只需要消耗常量级别的时间。</p>\n</blockquote>\n<h4 id=\"表权限\"><a href=\"#表权限\" class=\"headerlink\" title=\"表权限\"></a>表权限</h4><ul>\n<li><p>public</p>\n<p>允许任何进程访问（读写）。</p>\n</li>\n<li><p>private</p>\n<p>只有拥有该表的进程才能访问。</p>\n</li>\n<li><p>protected</p>\n<p>任何进程都可以读，只有拥有该表的进程才能写入。</p>\n</li>\n</ul>\n<h4 id=\"其它参数\"><a href=\"#其它参数\" class=\"headerlink\" title=\"其它参数\"></a>其它参数</h4><ul>\n<li><p>{keypos, N}</p>\n<p>创建表的时候可以通过 {keypos, N} 指定键取自那个位置，对存储记录record非常的有用。</p>\n</li>\n</ul>\n<ul>\n<li><p>named_table</p>\n<p>如果存在此选项，则以表的名称注册该表，然后在后续的操作使用该表名称而不是表的标识符。要获取指定标的标识符，可以使用 whereis/1。</p>\n</li>\n</ul>\n<ul>\n<li><p>{write_concurrency, boolean()}</p>\n<p>默认为false。这种情况下，对表的写入修改的操作获得独占访问，阻塞对同一表的任何并发访问。如果设置为true，则表将优化为并发写访问。</p>\n</li>\n<li><p>{read_concurrency, boolean()}</p>\n<p>默认为false。如果设置为true，则该表将优化为并发读访问。</p>\n</li>\n<li><p>compressed</p>\n<p>压缩，如果存在此选项，那么将以更紧凑的格式存储表数据，以消耗更少的内存。但是，这会使表操作变慢。特别是需要查找整个对象（如match，select)这种操作，速度会慢很多，关键元素不会被压缩。</p>\n</li>\n</ul>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"ETS\"><a href=\"#ETS\" class=\"headerlink\" title=\"ETS\"></a>ETS</h3><p>键值存储，查找时间为常量。</p>\n<h4 id=\"四种不同的类型\"><a href=\"#四种不同的类型\" class=\"headerlink\" title=\"四种不同的类型\"></a>四种不同的类型</h4><ul>\n<li><p>集合（set)</p>\n<p>相同的key-value元组只能出现一次。</p>\n</li>\n<li><p>包（bag)</p>\n<p>每种key-value元组组合只能出现一次，但是同一个key可以出现多次。</p>\n</li>\n<li><p>重复包(duplicate bag)</p>\n<p>允许重复的元组。</p>\n</li>\n<li><p>有序集合（ordered set)</p>\n<p>相同的key-value元组只能出现一次，但是可以按key的顺序访问各个元组。</p>\n</li>\n</ul>\n<blockquote>\n<p>访问有序集合（ordered set)类型中的元素需要消耗表长度的对数级别的时间（oLog n),访问其余类型的元素只需要消耗常量级别的时间。</p>\n</blockquote>\n<h4 id=\"表权限\"><a href=\"#表权限\" class=\"headerlink\" title=\"表权限\"></a>表权限</h4><ul>\n<li><p>public</p>\n<p>允许任何进程访问（读写）。</p>\n</li>\n<li><p>private</p>\n<p>只有拥有该表的进程才能访问。</p>\n</li>\n<li><p>protected</p>\n<p>任何进程都可以读，只有拥有该表的进程才能写入。</p>\n</li>\n</ul>\n<h4 id=\"其它参数\"><a href=\"#其它参数\" class=\"headerlink\" title=\"其它参数\"></a>其它参数</h4><ul>\n<li><p>{keypos, N}</p>\n<p>创建表的时候可以通过 {keypos, N} 指定键取自那个位置，对存储记录record非常的有用。</p>\n</li>\n</ul>\n<ul>\n<li><p>named_table</p>\n<p>如果存在此选项，则以表的名称注册该表，然后在后续的操作使用该表名称而不是表的标识符。要获取指定标的标识符，可以使用 whereis/1。</p>\n</li>\n</ul>\n<ul>\n<li><p>{write_concurrency, boolean()}</p>\n<p>默认为false。这种情况下，对表的写入修改的操作获得独占访问，阻塞对同一表的任何并发访问。如果设置为true，则表将优化为并发写访问。</p>\n</li>\n<li><p>{read_concurrency, boolean()}</p>\n<p>默认为false。如果设置为true，则该表将优化为并发读访问。</p>\n</li>\n<li><p>compressed</p>\n<p>压缩，如果存在此选项，那么将以更紧凑的格式存储表数据，以消耗更少的内存。但是，这会使表操作变慢。特别是需要查找整个对象（如match，select)这种操作，速度会慢很多，关键元素不会被压缩。</p>\n</li>\n</ul>\n"},{"title":"about-queen","date":"2020-05-07T12:30:12.000Z","_content":"\n### 以后好好宠我的小公主\n\n1、不能和其它异性走得太近、要高冷,不能当中央空调。\n2、不能把锅甩给宝贝，要自己扛着。\n3、宝贝大姨妈时间大概在13号左右。\n4、宝贝吃芒果轻微过敏。\n5、宝贝火锅喜欢吃薄荷。\n6、宝贝头发乱了要去帮忙整理。\n\n\n![](http://q9w63n9y3.bkt.clouddn.com/queen-and-me-1.jpg)\n![](http://q9w63n9y3.bkt.clouddn.com/queen-and-me-2.jpg)","source":"_posts/about-queen.md","raw":"---\ntitle: about-queen\ndate: 2020-05-07 20:30:12\ntags: queen\n---\n\n### 以后好好宠我的小公主\n\n1、不能和其它异性走得太近、要高冷,不能当中央空调。\n2、不能把锅甩给宝贝，要自己扛着。\n3、宝贝大姨妈时间大概在13号左右。\n4、宝贝吃芒果轻微过敏。\n5、宝贝火锅喜欢吃薄荷。\n6、宝贝头发乱了要去帮忙整理。\n\n\n![](http://q9w63n9y3.bkt.clouddn.com/queen-and-me-1.jpg)\n![](http://q9w63n9y3.bkt.clouddn.com/queen-and-me-2.jpg)","slug":"about-queen","published":1,"updated":"2020-05-07T12:41:03.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqk000am7fh1oaxdztm","content":"<h3 id=\"以后好好宠我的小公主\"><a href=\"#以后好好宠我的小公主\" class=\"headerlink\" title=\"以后好好宠我的小公主\"></a>以后好好宠我的小公主</h3><p>1、不能和其它异性走得太近、要高冷,不能当中央空调。<br>2、不能把锅甩给宝贝，要自己扛着。<br>3、宝贝大姨妈时间大概在13号左右。<br>4、宝贝吃芒果轻微过敏。<br>5、宝贝火锅喜欢吃薄荷。<br>6、宝贝头发乱了要去帮忙整理。</p>\n<p><img src=\"http://q9w63n9y3.bkt.clouddn.com/queen-and-me-1.jpg\" alt=\"\"><br><img src=\"http://q9w63n9y3.bkt.clouddn.com/queen-and-me-2.jpg\" alt=\"\"></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"以后好好宠我的小公主\"><a href=\"#以后好好宠我的小公主\" class=\"headerlink\" title=\"以后好好宠我的小公主\"></a>以后好好宠我的小公主</h3><p>1、不能和其它异性走得太近、要高冷,不能当中央空调。<br>2、不能把锅甩给宝贝，要自己扛着。<br>3、宝贝大姨妈时间大概在13号左右。<br>4、宝贝吃芒果轻微过敏。<br>5、宝贝火锅喜欢吃薄荷。<br>6、宝贝头发乱了要去帮忙整理。</p>\n<p><img src=\"http://q9w63n9y3.bkt.clouddn.com/queen-and-me-1.jpg\" alt=\"\"><br><img src=\"http://q9w63n9y3.bkt.clouddn.com/queen-and-me-2.jpg\" alt=\"\"></p>\n"},{"layout":"posts","title":"my-queen","date":"2020-05-07T12:09:34.000Z","_content":"\n### 嘿！这是我的女王大人\n\n\n![](http://520.biggerforum.org/my-queen-01.jpg)\n![](http://520.biggerforum.org/my-queen-02.jpg)\n![](http://520.biggerforum.org/my-queen-03.jpg)\n![](http://520.biggerforum.org/my-queen-04.jpg)\n![](http://520.biggerforum.org/my-queen-05.jpg)\n![](http://520.biggerforum.org/my-queen-06.jpg)\n![](http://520.biggerforum.org/my-queen-07.jpg)\n![](http://520.biggerforum.org/my-queen-08.jpg)\n![](http://520.biggerforum.org/my-queen-09.jpg)\n![](http://520.biggerforum.org/my-queen-10.jpg)\n![](http://520.biggerforum.org/my-queen-11.jpg)\n\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-1.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-2.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo-1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/DSCF9029.jpeg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/s1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>","source":"_posts/my-queen.md","raw":"---\nlayout: posts\ntitle: my-queen\ndate: 2020-05-07 20:09:34\ntags: queen\n---\n\n### 嘿！这是我的女王大人\n\n\n![](http://520.biggerforum.org/my-queen-01.jpg)\n![](http://520.biggerforum.org/my-queen-02.jpg)\n![](http://520.biggerforum.org/my-queen-03.jpg)\n![](http://520.biggerforum.org/my-queen-04.jpg)\n![](http://520.biggerforum.org/my-queen-05.jpg)\n![](http://520.biggerforum.org/my-queen-06.jpg)\n![](http://520.biggerforum.org/my-queen-07.jpg)\n![](http://520.biggerforum.org/my-queen-08.jpg)\n![](http://520.biggerforum.org/my-queen-09.jpg)\n![](http://520.biggerforum.org/my-queen-10.jpg)\n![](http://520.biggerforum.org/my-queen-11.jpg)\n\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-1.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-2.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo-1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/DSCF9029.jpeg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/s1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>","slug":"my-queen","published":1,"updated":"2020-05-11T12:08:43.279Z","comments":1,"photos":[],"link":"","_id":"ckae1xdqo000fm7fh3q1ucpsg","content":"<h3 id=\"嘿！这是我的女王大人\"><a href=\"#嘿！这是我的女王大人\" class=\"headerlink\" title=\"嘿！这是我的女王大人\"></a>嘿！这是我的女王大人</h3><p><img src=\"http://520.biggerforum.org/my-queen-01.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-02.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-03.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-04.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-05.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-06.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-07.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-08.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-09.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-10.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-11.jpg\" alt=\"\"></p>\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-1.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-2.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo-1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/DSCF9029.jpeg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/s1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"嘿！这是我的女王大人\"><a href=\"#嘿！这是我的女王大人\" class=\"headerlink\" title=\"嘿！这是我的女王大人\"></a>嘿！这是我的女王大人</h3><p><img src=\"http://520.biggerforum.org/my-queen-01.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-02.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-03.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-04.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-05.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-06.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-07.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-08.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-09.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-10.jpg\" alt=\"\"><br><img src=\"http://520.biggerforum.org/my-queen-11.jpg\" alt=\"\"></p>\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-1.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/queen-swim-2.jpg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/webwxgetvideo-1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/DSCF9029.jpeg\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/s1.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>"},{"title":"二叉树","date":"2018-03-20T14:45:39.000Z","_content":"\n\n\n\n![](/img/erchashu1.jpg)\n\n几种遍历方式\n\n```c\n\n\nvoid pre(Node *root){\n    if(root == NULL){\n        return;\n    }\n    cout << root -> val << endl;\n    pre(root->left);\n    pre(root->right);\n}\n\nvoid mid(Node *root){\n    if(root == NULL){\n        return;\n    }\n    mid(root->left);\n    cout << root -> val << endl;\n    mid(root->right);\n}\n\nvoid lst(Node *root){\n    if(root == NULL){\n        return;\n    }\n    lst(root->left);\n    lst(root->right);\n    cout << root -> val << endl;\n}\n\n\n```\n\n\n计算二叉树深度\n\n先计算左右子树的深度，然后整棵树的深度就是左右子树深度较大值加1（当前节点）\n\n\n\n```c\nint caculDepth(Node *root){\n    if(root == NULL){\n        return 0;\n    }\n    return max(caculDepth(root->left), caculDepth(root->right)) +1;\n}\n\n```\n\n\n镜像二叉树\n\n![](/img/erchashu2.png)\n\n```c\n\nvoid Mirror(TreeNode *pRoot) {\n    if(pRoot == NULL) return;\n    Mirror(pRoot->left);\n    Mirror(pRoot->right);\n    swap(pRoot->left, pRoot->right);\n}\n\n```\n\n\n从上往下打印出二叉树的每个节点，同层节点从左至右打印.\n利用广度优先搜索思想。\n\n\n```c\n\nvector<int> PrintFromTopToBottom(TreeNode* root) {\n    queue<TreeNode*> q;\n    vector<int> v;\n    if(root == NULL) return v;\n    q.push(root);\n    while(!q.empty()){\n        TreeNode* node = q.front();\n        q.pop();\n        v.push_back(node->val);\n        if(node->left != NULL){\n            q.push(node->left);\n        }\n        if(node->right != NULL){\n            q.push(node->right);\n        }\n    }\n    return v;\n}\n\n```","source":"_posts/二叉树.md","raw":"---\ntitle: 二叉树\ndate: 2018-3-20 22:45:39\ncategories:\n  - 数据结构与算法\ntags: \n  - 二叉树\n---\n\n\n\n\n![](/img/erchashu1.jpg)\n\n几种遍历方式\n\n```c\n\n\nvoid pre(Node *root){\n    if(root == NULL){\n        return;\n    }\n    cout << root -> val << endl;\n    pre(root->left);\n    pre(root->right);\n}\n\nvoid mid(Node *root){\n    if(root == NULL){\n        return;\n    }\n    mid(root->left);\n    cout << root -> val << endl;\n    mid(root->right);\n}\n\nvoid lst(Node *root){\n    if(root == NULL){\n        return;\n    }\n    lst(root->left);\n    lst(root->right);\n    cout << root -> val << endl;\n}\n\n\n```\n\n\n计算二叉树深度\n\n先计算左右子树的深度，然后整棵树的深度就是左右子树深度较大值加1（当前节点）\n\n\n\n```c\nint caculDepth(Node *root){\n    if(root == NULL){\n        return 0;\n    }\n    return max(caculDepth(root->left), caculDepth(root->right)) +1;\n}\n\n```\n\n\n镜像二叉树\n\n![](/img/erchashu2.png)\n\n```c\n\nvoid Mirror(TreeNode *pRoot) {\n    if(pRoot == NULL) return;\n    Mirror(pRoot->left);\n    Mirror(pRoot->right);\n    swap(pRoot->left, pRoot->right);\n}\n\n```\n\n\n从上往下打印出二叉树的每个节点，同层节点从左至右打印.\n利用广度优先搜索思想。\n\n\n```c\n\nvector<int> PrintFromTopToBottom(TreeNode* root) {\n    queue<TreeNode*> q;\n    vector<int> v;\n    if(root == NULL) return v;\n    q.push(root);\n    while(!q.empty()){\n        TreeNode* node = q.front();\n        q.pop();\n        v.push_back(node->val);\n        if(node->left != NULL){\n            q.push(node->left);\n        }\n        if(node->right != NULL){\n            q.push(node->right);\n        }\n    }\n    return v;\n}\n\n```","slug":"二叉树","published":1,"updated":"2019-11-25T03:45:53.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqq000gm7fhd1lceezt","content":"<p><img src=\"/img/erchashu1.jpg\" alt=\"\"></p>\n<p>几种遍历方式</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pre</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; root -&gt; val &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    pre(root-&gt;left);</span><br><span class=\"line\">    pre(root-&gt;right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mid</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid(root-&gt;left);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; root -&gt; val &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    mid(root-&gt;right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lst</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    lst(root-&gt;left);</span><br><span class=\"line\">    lst(root-&gt;right);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; root -&gt; val &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>计算二叉树深度</p>\n<p>先计算左右子树的深度，然后整棵树的深度就是左右子树深度较大值加1（当前节点）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">caculDepth</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">max</span>(caculDepth(root-&gt;left), caculDepth(root-&gt;right)) +<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>镜像二叉树</p>\n<p><img src=\"/img/erchashu2.png\" alt=\"\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Mirror</span><span class=\"params\">(TreeNode *pRoot)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pRoot == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    Mirror(pRoot-&gt;left);</span><br><span class=\"line\">    Mirror(pRoot-&gt;right);</span><br><span class=\"line\">    swap(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>从上往下打印出二叉树的每个节点，同层节点从左至右打印.<br>利用广度优先搜索思想。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; PrintFromTopToBottom(TreeNode* root) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;TreeNode*&gt; q;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    q.push(root);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">        TreeNode* node = q.front();</span><br><span class=\"line\">        q.pop();</span><br><span class=\"line\">        v.push_back(node-&gt;val);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node-&gt;left != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            q.push(node-&gt;left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node-&gt;right != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            q.push(node-&gt;right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p><img src=\"/img/erchashu1.jpg\" alt=\"\"></p>\n<p>几种遍历方式</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pre</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; root -&gt; val &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    pre(root-&gt;left);</span><br><span class=\"line\">    pre(root-&gt;right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mid</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid(root-&gt;left);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; root -&gt; val &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    mid(root-&gt;right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lst</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    lst(root-&gt;left);</span><br><span class=\"line\">    lst(root-&gt;right);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; root -&gt; val &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>计算二叉树深度</p>\n<p>先计算左右子树的深度，然后整棵树的深度就是左右子树深度较大值加1（当前节点）</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">caculDepth</span><span class=\"params\">(Node *root)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">max</span>(caculDepth(root-&gt;left), caculDepth(root-&gt;right)) +<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>镜像二叉树</p>\n<p><img src=\"/img/erchashu2.png\" alt=\"\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Mirror</span><span class=\"params\">(TreeNode *pRoot)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pRoot == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    Mirror(pRoot-&gt;left);</span><br><span class=\"line\">    Mirror(pRoot-&gt;right);</span><br><span class=\"line\">    swap(pRoot-&gt;left, pRoot-&gt;right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>从上往下打印出二叉树的每个节点，同层节点从左至右打印.<br>利用广度优先搜索思想。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; PrintFromTopToBottom(TreeNode* root) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;TreeNode*&gt; q;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    q.push(root);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">        TreeNode* node = q.front();</span><br><span class=\"line\">        q.pop();</span><br><span class=\"line\">        v.push_back(node-&gt;val);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node-&gt;left != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            q.push(node-&gt;left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node-&gt;right != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            q.push(node-&gt;right);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Ekka源码阅读","date":"2019-09-29T14:45:39.000Z","_content":"\n### Ekka源码阅读\n\n\n\nEkka是emqx自动集群和自动愈合的一个组件。\n\n\n\n#### 节点发现与自动集群\n\n\n\n**ekka_cluster_strategy** 模块定义了一些行为。它们分别是：\n\n\n\n```erlang\n-type(options() :: list(proplists:property())).\n\n%% 发现\n-callback(discover(options()) -> {ok, list(node())} | {error, term()}).\n\n%% 锁\n-callback(lock(options()) -> ok | ignore | {error, term()}).\n\n%% 解锁\n-callback(unlock(options()) -> ok | ignore | {error, term()}).\n\n%% 注册\n-callback(register(options()) -> ok | ignore | {error, term()}).\n\n%% 移除注册\n-callback(unregister(options()) -> ok | ignore | {error, term()}).\n```\n\n\n\n**ekka_cluster**模块提供一些集群的API调用和集群管理的RPC调用。它们分别是\n\n```erlang\n%% Cluster API\n-export([\n\tjoin/1,\t\t\t\t\t%% 加入\n\tleave/0, \t\t\t\t%% 离开\n\tforce_leave/1, \t\t\t%% 强制离开\n\tstatus/0 \t\t\t\t%% 状态\n\t]).\n\n\n%% RPC Call for Cluster Management\n-export([\n\tprepare/1,\n\theal/1,\n\treboot/0\n\t]).\n\n\n%% @doc Join the cluster\n%% 加入集群\n-spec(join(node()) -> ok | ignore | {error, any()}).\n\n%% 如果节点是当前节点，则忽略\njoin(Node) when Node =:= node() ->\n    ignore;\njoin(Node) when is_atom(Node) ->\n    case {ekka_mnesia:is_node_in_cluster(Node), ekka_node:is_running(Node, ekka)} of\n        {false, true} -> \n        \t%% 如果节点没有在集群里而且节点正在运行， 则加入这个集群\n            prepare(join), ok = ekka_mnesia:join_cluster(Node), reboot();\n        {false, false} ->\n        \t%% 如果节点没有在集群里而且节点也没有运行  返回 错误\n            {error, {node_down, Node}};\n        {true, _} ->\n        \t%% 如果节点已经在集群里运行\n            {error, {already_in_cluster, Node}}\n    end.\n\n%% @doc Leave from the cluster.\n%% 离开集群\n-spec(leave() -> ok | {error, any()}).\nleave() ->\n    case ekka_mnesia:running_nodes() -- [node()] of\n        [_|_] ->\n            %% 如果该节点在运行的节点列表里  离开该集群\n            prepare(leave), ok = ekka_mnesia:leave_cluster(), reboot();\n        [] ->\n            {error, node_not_in_cluster}\n    end.\n\n\n%% @doc Force a node leave from cluster.\n%% 强制一个节点离开集群\n-spec(force_leave(node()) -> ok | ignore | {error, term()}).\n\n%% 如果是当前节点，忽略\nforce_leave(Node) when Node =:= node() ->\n    ignore;\nforce_leave(Node) ->\n    %% 如果Node节点在集群里，接着rpcdia\n    case ekka_mnesia:is_node_in_cluster(Node)\n         andalso rpc:call(Node, ?MODULE, prepare, [leave]) of\n        ok ->\n            case ekka_mnesia:remove_from_cluster(Node) of\n                ok    -> rpc:call(Node, ?MODULE, reboot, []);\n                Error -> Error\n            end;\n        false ->\n            {error, node_not_in_cluster};\n        {badrpc, nodedown} ->\n            ekka_membership:announce({force_leave, Node}),\n            ekka_mnesia:remove_from_cluster(Node);\n        {badrpc, Reason} ->\n            {error, Reason}\n    end.\n\n\n%% @doc Cluster status.\n%% 集群状态\nstatus() -> ekka_mnesia:cluster_status().\n\n```\n\n\n\n\n\n**ekka_autocluster** 自动集群模块\n\n\n\n```erlang\n-spec(run(atom()) -> any()).\nrun(App) ->\n    %% 获得锁\n    case acquire_lock(App) of\n        ok ->\n            spawn(fun() ->\n            \t\t %% 把当前进程的组长设置为init\n                      group_leader(whereis(init), self()),\n                      %% 等待应用准备就绪\n            \t\t  wait_application_ready(App, 10),\n                      try\n                          %% 发现且加入\n                          discover_and_join()\n                      catch\n                          _:Error:Stacktrace ->\n                              ?LOG(error, \"Discover error: ~p~n~p\", [Error, Stacktrace])\n                      after\n                          %% 释放锁\n                          release_lock(App)\n                      end,\n            \t\t  %% 可能需要再次运行\n                      maybe_run_again(App)\n                  end);\n        failed -> ignore\n    end.\n\n%% 等待节点运行应用\nwait_application_ready(_App, 0) ->\n    timeout;\nwait_application_ready(App, Retries) ->\n    case ekka_node:is_running(App) of\n        true  -> ok;\n        false -> timer:sleep(1000),\n                 wait_application_ready(App, Retries - 1)\n    end.\n\n%% 可能需要在尝试一次\nmaybe_run_again(App) ->\n    %% Check if the node joined cluster?\n    %% 检查节点是否在集群里\n    case ekka_mnesia:is_node_in_cluster() of\n        true  -> ok;\n        false -> \n            \t %% 如果节点没有加入集群， 5秒后再次重试\n            \t timer:sleep(5000),\n                 run(App)\n    end.\n\n-spec(discover_and_join() -> any()).\ndiscover_and_join() ->\n    with_strategy(\n      fun(Mod, Options) ->\n        case Mod:lock(Options) of\n            ok ->\n                discover_and_join(Mod, Options),\n                log_error(\"Unlock\", Mod:unlock(Options));\n            ignore ->\n                timer:sleep(rand:uniform(3000)),\n                discover_and_join(Mod, Options);\n            {error, Reason} ->\n                ?LOG(error, \"AutoCluster stopped for lock error: ~p\", [Reason])\n        end\n      end).\n\n\n-spec(acquire_lock(atom()) -> ok | failed).\n%% 获取锁\nacquire_lock(App) ->\n    %% 如果应用程序APP的配置参数 autocluster_lock没有被设置值，则设置为true，表示获得锁成功，否则获取锁失败\n    case application:get_env(App, autocluster_lock) of\n        undefined ->\n            application:set_env(App, autocluster_lock, true);\n        {ok, _} -> failed\n    end.\n\n-spec(release_lock(atom()) -> ok).\n%% 释放锁\nrelease_lock(App) ->\n    %% 清除应用程序APP的配置参数 autocluster_lock\n    application:unset_env(App, autocluster_lock).\n```\n\n","source":"_posts/ekka源码阅读.md","raw":"---\ntitle: Ekka源码阅读\ndate: 2019-9-29 22:45:39\ncategories:\n  - Erlang\ntags: erlang\n---\n\n### Ekka源码阅读\n\n\n\nEkka是emqx自动集群和自动愈合的一个组件。\n\n\n\n#### 节点发现与自动集群\n\n\n\n**ekka_cluster_strategy** 模块定义了一些行为。它们分别是：\n\n\n\n```erlang\n-type(options() :: list(proplists:property())).\n\n%% 发现\n-callback(discover(options()) -> {ok, list(node())} | {error, term()}).\n\n%% 锁\n-callback(lock(options()) -> ok | ignore | {error, term()}).\n\n%% 解锁\n-callback(unlock(options()) -> ok | ignore | {error, term()}).\n\n%% 注册\n-callback(register(options()) -> ok | ignore | {error, term()}).\n\n%% 移除注册\n-callback(unregister(options()) -> ok | ignore | {error, term()}).\n```\n\n\n\n**ekka_cluster**模块提供一些集群的API调用和集群管理的RPC调用。它们分别是\n\n```erlang\n%% Cluster API\n-export([\n\tjoin/1,\t\t\t\t\t%% 加入\n\tleave/0, \t\t\t\t%% 离开\n\tforce_leave/1, \t\t\t%% 强制离开\n\tstatus/0 \t\t\t\t%% 状态\n\t]).\n\n\n%% RPC Call for Cluster Management\n-export([\n\tprepare/1,\n\theal/1,\n\treboot/0\n\t]).\n\n\n%% @doc Join the cluster\n%% 加入集群\n-spec(join(node()) -> ok | ignore | {error, any()}).\n\n%% 如果节点是当前节点，则忽略\njoin(Node) when Node =:= node() ->\n    ignore;\njoin(Node) when is_atom(Node) ->\n    case {ekka_mnesia:is_node_in_cluster(Node), ekka_node:is_running(Node, ekka)} of\n        {false, true} -> \n        \t%% 如果节点没有在集群里而且节点正在运行， 则加入这个集群\n            prepare(join), ok = ekka_mnesia:join_cluster(Node), reboot();\n        {false, false} ->\n        \t%% 如果节点没有在集群里而且节点也没有运行  返回 错误\n            {error, {node_down, Node}};\n        {true, _} ->\n        \t%% 如果节点已经在集群里运行\n            {error, {already_in_cluster, Node}}\n    end.\n\n%% @doc Leave from the cluster.\n%% 离开集群\n-spec(leave() -> ok | {error, any()}).\nleave() ->\n    case ekka_mnesia:running_nodes() -- [node()] of\n        [_|_] ->\n            %% 如果该节点在运行的节点列表里  离开该集群\n            prepare(leave), ok = ekka_mnesia:leave_cluster(), reboot();\n        [] ->\n            {error, node_not_in_cluster}\n    end.\n\n\n%% @doc Force a node leave from cluster.\n%% 强制一个节点离开集群\n-spec(force_leave(node()) -> ok | ignore | {error, term()}).\n\n%% 如果是当前节点，忽略\nforce_leave(Node) when Node =:= node() ->\n    ignore;\nforce_leave(Node) ->\n    %% 如果Node节点在集群里，接着rpcdia\n    case ekka_mnesia:is_node_in_cluster(Node)\n         andalso rpc:call(Node, ?MODULE, prepare, [leave]) of\n        ok ->\n            case ekka_mnesia:remove_from_cluster(Node) of\n                ok    -> rpc:call(Node, ?MODULE, reboot, []);\n                Error -> Error\n            end;\n        false ->\n            {error, node_not_in_cluster};\n        {badrpc, nodedown} ->\n            ekka_membership:announce({force_leave, Node}),\n            ekka_mnesia:remove_from_cluster(Node);\n        {badrpc, Reason} ->\n            {error, Reason}\n    end.\n\n\n%% @doc Cluster status.\n%% 集群状态\nstatus() -> ekka_mnesia:cluster_status().\n\n```\n\n\n\n\n\n**ekka_autocluster** 自动集群模块\n\n\n\n```erlang\n-spec(run(atom()) -> any()).\nrun(App) ->\n    %% 获得锁\n    case acquire_lock(App) of\n        ok ->\n            spawn(fun() ->\n            \t\t %% 把当前进程的组长设置为init\n                      group_leader(whereis(init), self()),\n                      %% 等待应用准备就绪\n            \t\t  wait_application_ready(App, 10),\n                      try\n                          %% 发现且加入\n                          discover_and_join()\n                      catch\n                          _:Error:Stacktrace ->\n                              ?LOG(error, \"Discover error: ~p~n~p\", [Error, Stacktrace])\n                      after\n                          %% 释放锁\n                          release_lock(App)\n                      end,\n            \t\t  %% 可能需要再次运行\n                      maybe_run_again(App)\n                  end);\n        failed -> ignore\n    end.\n\n%% 等待节点运行应用\nwait_application_ready(_App, 0) ->\n    timeout;\nwait_application_ready(App, Retries) ->\n    case ekka_node:is_running(App) of\n        true  -> ok;\n        false -> timer:sleep(1000),\n                 wait_application_ready(App, Retries - 1)\n    end.\n\n%% 可能需要在尝试一次\nmaybe_run_again(App) ->\n    %% Check if the node joined cluster?\n    %% 检查节点是否在集群里\n    case ekka_mnesia:is_node_in_cluster() of\n        true  -> ok;\n        false -> \n            \t %% 如果节点没有加入集群， 5秒后再次重试\n            \t timer:sleep(5000),\n                 run(App)\n    end.\n\n-spec(discover_and_join() -> any()).\ndiscover_and_join() ->\n    with_strategy(\n      fun(Mod, Options) ->\n        case Mod:lock(Options) of\n            ok ->\n                discover_and_join(Mod, Options),\n                log_error(\"Unlock\", Mod:unlock(Options));\n            ignore ->\n                timer:sleep(rand:uniform(3000)),\n                discover_and_join(Mod, Options);\n            {error, Reason} ->\n                ?LOG(error, \"AutoCluster stopped for lock error: ~p\", [Reason])\n        end\n      end).\n\n\n-spec(acquire_lock(atom()) -> ok | failed).\n%% 获取锁\nacquire_lock(App) ->\n    %% 如果应用程序APP的配置参数 autocluster_lock没有被设置值，则设置为true，表示获得锁成功，否则获取锁失败\n    case application:get_env(App, autocluster_lock) of\n        undefined ->\n            application:set_env(App, autocluster_lock, true);\n        {ok, _} -> failed\n    end.\n\n-spec(release_lock(atom()) -> ok).\n%% 释放锁\nrelease_lock(App) ->\n    %% 清除应用程序APP的配置参数 autocluster_lock\n    application:unset_env(App, autocluster_lock).\n```\n\n","slug":"ekka源码阅读","published":1,"updated":"2019-11-24T15:41:25.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqs000lm7fhae78bkn6","content":"<h3 id=\"Ekka源码阅读\"><a href=\"#Ekka源码阅读\" class=\"headerlink\" title=\"Ekka源码阅读\"></a>Ekka源码阅读</h3><p>Ekka是emqx自动集群和自动愈合的一个组件。</p>\n<h4 id=\"节点发现与自动集群\"><a href=\"#节点发现与自动集群\" class=\"headerlink\" title=\"节点发现与自动集群\"></a>节点发现与自动集群</h4><p><strong>ekka_cluster_strategy</strong> 模块定义了一些行为。它们分别是：</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-type<span class=\"params\">(options() :: list(proplists:property()))</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 发现</span></span><br><span class=\"line\">-callback<span class=\"params\">(discover(options()) -&gt; &#123;ok, list(node())&#125; | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 锁</span></span><br><span class=\"line\">-callback<span class=\"params\">(lock(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 解锁</span></span><br><span class=\"line\">-callback<span class=\"params\">(unlock(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 注册</span></span><br><span class=\"line\">-callback<span class=\"params\">(register(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 移除注册</span></span><br><span class=\"line\">-callback<span class=\"params\">(unregister(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>ekka_cluster</strong>模块提供一些集群的API调用和集群管理的RPC调用。它们分别是</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%% Cluster API</span></span><br><span class=\"line\"><span class=\"keyword\">-export</span><span class=\"params\">([</span></span><br><span class=\"line\"><span class=\"params\">\tjoin/<span class=\"number\">1</span>,\t\t\t\t\t<span class=\"comment\">%% 加入</span></span></span><br><span class=\"line\"><span class=\"params\">\tleave/<span class=\"number\">0</span>, \t\t\t\t<span class=\"comment\">%% 离开</span></span></span><br><span class=\"line\"><span class=\"params\">\tforce_leave/<span class=\"number\">1</span>, \t\t\t<span class=\"comment\">%% 强制离开</span></span></span><br><span class=\"line\"><span class=\"params\">\tstatus/<span class=\"number\">0</span> \t\t\t\t<span class=\"comment\">%% 状态</span></span></span><br><span class=\"line\"><span class=\"params\">\t])</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% RPC Call for Cluster Management</span></span><br><span class=\"line\"><span class=\"keyword\">-export</span><span class=\"params\">([</span></span><br><span class=\"line\"><span class=\"params\">\tprepare/<span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"params\">\theal/<span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"params\">\treboot/<span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"params\">\t])</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Join the cluster</span></span><br><span class=\"line\"><span class=\"comment\">%% 加入集群</span></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(join(node()) -&gt; ok | ignore | &#123;error, any()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 如果节点是当前节点，则忽略</span></span><br><span class=\"line\">join(Node) when Node =:= node() -&gt;</span><br><span class=\"line\">    ignore;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">join</span><span class=\"params\">(Node)</span> <span class=\"title\">when</span> <span class=\"title\">is_atom</span><span class=\"params\">(Node)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> &#123;ekka_mnesia:is_node_in_cluster(Node), ekka_node:is_running(Node, ekka)&#125; <span class=\"keyword\">of</span></span><br><span class=\"line\">        &#123;false, true&#125; -&gt; </span><br><span class=\"line\">        \t<span class=\"comment\">%% 如果节点没有在集群里而且节点正在运行， 则加入这个集群</span></span><br><span class=\"line\">            prepare(join), ok = ekka_mnesia:join_cluster(Node), reboot();</span><br><span class=\"line\">        &#123;false, false&#125; -&gt;</span><br><span class=\"line\">        \t<span class=\"comment\">%% 如果节点没有在集群里而且节点也没有运行  返回 错误</span></span><br><span class=\"line\">            &#123;error, &#123;node_down, Node&#125;&#125;;</span><br><span class=\"line\">        &#123;true, _&#125; -&gt;</span><br><span class=\"line\">        \t<span class=\"comment\">%% 如果节点已经在集群里运行</span></span><br><span class=\"line\">            &#123;error, &#123;already_in_cluster, Node&#125;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Leave from the cluster.</span></span><br><span class=\"line\"><span class=\"comment\">%% 离开集群</span></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(leave() -&gt; ok | &#123;error, any()&#125;)</span>.</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">leave</span><span class=\"params\">()</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_mnesia:running_nodes() -- [node()] <span class=\"keyword\">of</span></span><br><span class=\"line\">        [_|_] -&gt;</span><br><span class=\"line\">            <span class=\"comment\">%% 如果该节点在运行的节点列表里  离开该集群</span></span><br><span class=\"line\">            prepare(leave), ok = ekka_mnesia:leave_cluster(), reboot();</span><br><span class=\"line\">        [] -&gt;</span><br><span class=\"line\">            &#123;error, node_not_in_cluster&#125;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Force a node leave from cluster.</span></span><br><span class=\"line\"><span class=\"comment\">%% 强制一个节点离开集群</span></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(force_leave(node()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 如果是当前节点，忽略</span></span><br><span class=\"line\">force_leave(Node) when Node =:= node() -&gt;</span><br><span class=\"line\">    ignore;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">force_leave</span><span class=\"params\">(Node)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 如果Node节点在集群里，接着rpcdia</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_mnesia:is_node_in_cluster(Node)</span><br><span class=\"line\">         <span class=\"keyword\">andalso</span> rpc:call(Node, ?MODULE, prepare, [leave]) <span class=\"keyword\">of</span></span><br><span class=\"line\">        ok -&gt;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> ekka_mnesia:remove_from_cluster(Node) <span class=\"keyword\">of</span></span><br><span class=\"line\">                ok    -&gt; rpc:call(Node, ?MODULE, reboot, []);</span><br><span class=\"line\">                Error -&gt; Error</span><br><span class=\"line\">            <span class=\"keyword\">end</span>;</span><br><span class=\"line\">        <span class=\"literal\">false</span> -&gt;</span><br><span class=\"line\">            &#123;error, node_not_in_cluster&#125;;</span><br><span class=\"line\">        &#123;badrpc, nodedown&#125; -&gt;</span><br><span class=\"line\">            ekka_membership:announce(&#123;force_leave, Node&#125;),</span><br><span class=\"line\">            ekka_mnesia:remove_from_cluster(Node);</span><br><span class=\"line\">        &#123;badrpc, Reason&#125; -&gt;</span><br><span class=\"line\">            &#123;error, Reason&#125;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Cluster status.</span></span><br><span class=\"line\"><span class=\"comment\">%% 集群状态</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">status</span><span class=\"params\">()</span> -&gt;</span> ekka_mnesia:cluster_status().</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><strong>ekka_autocluster</strong> 自动集群模块</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(run(atom()) -&gt; any())</span>.</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">run</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 获得锁</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> acquire_lock(App) <span class=\"keyword\">of</span></span><br><span class=\"line\">        ok -&gt;</span><br><span class=\"line\">            spawn(<span class=\"keyword\">fun</span>() -&gt;</span><br><span class=\"line\">            \t\t <span class=\"comment\">%% 把当前进程的组长设置为init</span></span><br><span class=\"line\">                      group_leader(whereis(init), self()),</span><br><span class=\"line\">                      <span class=\"comment\">%% 等待应用准备就绪</span></span><br><span class=\"line\">            \t\t  wait_application_ready(App, <span class=\"number\">10</span>),</span><br><span class=\"line\">                      <span class=\"keyword\">try</span></span><br><span class=\"line\">                          <span class=\"comment\">%% 发现且加入</span></span><br><span class=\"line\">                          discover_and_join()</span><br><span class=\"line\">                      <span class=\"keyword\">catch</span></span><br><span class=\"line\">                          _:Error:Stacktrace -&gt;</span><br><span class=\"line\">                              ?LOG(error, <span class=\"string\">\"Discover error: ~p~n~p\"</span>, [Error, Stacktrace])</span><br><span class=\"line\">                      <span class=\"keyword\">after</span></span><br><span class=\"line\">                          <span class=\"comment\">%% 释放锁</span></span><br><span class=\"line\">                          release_lock(App)</span><br><span class=\"line\">                      <span class=\"keyword\">end</span>,</span><br><span class=\"line\">            \t\t  <span class=\"comment\">%% 可能需要再次运行</span></span><br><span class=\"line\">                      maybe_run_again(App)</span><br><span class=\"line\">                  <span class=\"keyword\">end</span>);</span><br><span class=\"line\">        failed -&gt; ignore</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 等待节点运行应用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">wait_application_ready</span><span class=\"params\">(_App, <span class=\"number\">0</span>)</span> -&gt;</span></span><br><span class=\"line\">    timeout;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">wait_application_ready</span><span class=\"params\">(App, Retries)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_node:is_running(App) <span class=\"keyword\">of</span></span><br><span class=\"line\">        <span class=\"literal\">true</span>  -&gt; ok;</span><br><span class=\"line\">        <span class=\"literal\">false</span> -&gt; timer:sleep(<span class=\"number\">1000</span>),</span><br><span class=\"line\">                 wait_application_ready(App, Retries - <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 可能需要在尝试一次</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">maybe_run_again</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% Check if the node joined cluster?</span></span><br><span class=\"line\">    <span class=\"comment\">%% 检查节点是否在集群里</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_mnesia:is_node_in_cluster() <span class=\"keyword\">of</span></span><br><span class=\"line\">        <span class=\"literal\">true</span>  -&gt; ok;</span><br><span class=\"line\">        <span class=\"literal\">false</span> -&gt; </span><br><span class=\"line\">            \t <span class=\"comment\">%% 如果节点没有加入集群， 5秒后再次重试</span></span><br><span class=\"line\">            \t timer:sleep(<span class=\"number\">5000</span>),</span><br><span class=\"line\">                 run(App)</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(discover_and_join() -&gt; any())</span>.</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">discover_and_join</span><span class=\"params\">()</span> -&gt;</span></span><br><span class=\"line\">    with_strategy(</span><br><span class=\"line\">      <span class=\"keyword\">fun</span>(Mod, Options) -&gt;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> Mod:lock(Options) <span class=\"keyword\">of</span></span><br><span class=\"line\">            ok -&gt;</span><br><span class=\"line\">                discover_and_join(Mod, Options),</span><br><span class=\"line\">                log_error(<span class=\"string\">\"Unlock\"</span>, Mod:unlock(Options));</span><br><span class=\"line\">            ignore -&gt;</span><br><span class=\"line\">                timer:sleep(rand:uniform(<span class=\"number\">3000</span>)),</span><br><span class=\"line\">                discover_and_join(Mod, Options);</span><br><span class=\"line\">            &#123;error, Reason&#125; -&gt;</span><br><span class=\"line\">                ?LOG(error, <span class=\"string\">\"AutoCluster stopped for lock error: ~p\"</span>, [Reason])</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span>).</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(acquire_lock(atom()) -&gt; ok | failed)</span>.</span><br><span class=\"line\"><span class=\"comment\">%% 获取锁</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">acquire_lock</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 如果应用程序APP的配置参数 autocluster_lock没有被设置值，则设置为true，表示获得锁成功，否则获取锁失败</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> application:get_env(App, autocluster_lock) <span class=\"keyword\">of</span></span><br><span class=\"line\">        undefined -&gt;</span><br><span class=\"line\">            application:set_env(App, autocluster_lock, true);</span><br><span class=\"line\">        &#123;ok, _&#125; -&gt; failed</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(release_lock(atom()) -&gt; ok)</span>.</span><br><span class=\"line\"><span class=\"comment\">%% 释放锁</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">release_lock</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 清除应用程序APP的配置参数 autocluster_lock</span></span><br><span class=\"line\">    application:unset_env(App, autocluster_lock).</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"Ekka源码阅读\"><a href=\"#Ekka源码阅读\" class=\"headerlink\" title=\"Ekka源码阅读\"></a>Ekka源码阅读</h3><p>Ekka是emqx自动集群和自动愈合的一个组件。</p>\n<h4 id=\"节点发现与自动集群\"><a href=\"#节点发现与自动集群\" class=\"headerlink\" title=\"节点发现与自动集群\"></a>节点发现与自动集群</h4><p><strong>ekka_cluster_strategy</strong> 模块定义了一些行为。它们分别是：</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-type<span class=\"params\">(options() :: list(proplists:property()))</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 发现</span></span><br><span class=\"line\">-callback<span class=\"params\">(discover(options()) -&gt; &#123;ok, list(node())&#125; | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 锁</span></span><br><span class=\"line\">-callback<span class=\"params\">(lock(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 解锁</span></span><br><span class=\"line\">-callback<span class=\"params\">(unlock(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 注册</span></span><br><span class=\"line\">-callback<span class=\"params\">(register(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 移除注册</span></span><br><span class=\"line\">-callback<span class=\"params\">(unregister(options()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>ekka_cluster</strong>模块提供一些集群的API调用和集群管理的RPC调用。它们分别是</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%% Cluster API</span></span><br><span class=\"line\"><span class=\"keyword\">-export</span><span class=\"params\">([</span></span><br><span class=\"line\"><span class=\"params\">\tjoin/<span class=\"number\">1</span>,\t\t\t\t\t<span class=\"comment\">%% 加入</span></span></span><br><span class=\"line\"><span class=\"params\">\tleave/<span class=\"number\">0</span>, \t\t\t\t<span class=\"comment\">%% 离开</span></span></span><br><span class=\"line\"><span class=\"params\">\tforce_leave/<span class=\"number\">1</span>, \t\t\t<span class=\"comment\">%% 强制离开</span></span></span><br><span class=\"line\"><span class=\"params\">\tstatus/<span class=\"number\">0</span> \t\t\t\t<span class=\"comment\">%% 状态</span></span></span><br><span class=\"line\"><span class=\"params\">\t])</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% RPC Call for Cluster Management</span></span><br><span class=\"line\"><span class=\"keyword\">-export</span><span class=\"params\">([</span></span><br><span class=\"line\"><span class=\"params\">\tprepare/<span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"params\">\theal/<span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"params\">\treboot/<span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"params\">\t])</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Join the cluster</span></span><br><span class=\"line\"><span class=\"comment\">%% 加入集群</span></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(join(node()) -&gt; ok | ignore | &#123;error, any()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 如果节点是当前节点，则忽略</span></span><br><span class=\"line\">join(Node) when Node =:= node() -&gt;</span><br><span class=\"line\">    ignore;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">join</span><span class=\"params\">(Node)</span> <span class=\"title\">when</span> <span class=\"title\">is_atom</span><span class=\"params\">(Node)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> &#123;ekka_mnesia:is_node_in_cluster(Node), ekka_node:is_running(Node, ekka)&#125; <span class=\"keyword\">of</span></span><br><span class=\"line\">        &#123;false, true&#125; -&gt; </span><br><span class=\"line\">        \t<span class=\"comment\">%% 如果节点没有在集群里而且节点正在运行， 则加入这个集群</span></span><br><span class=\"line\">            prepare(join), ok = ekka_mnesia:join_cluster(Node), reboot();</span><br><span class=\"line\">        &#123;false, false&#125; -&gt;</span><br><span class=\"line\">        \t<span class=\"comment\">%% 如果节点没有在集群里而且节点也没有运行  返回 错误</span></span><br><span class=\"line\">            &#123;error, &#123;node_down, Node&#125;&#125;;</span><br><span class=\"line\">        &#123;true, _&#125; -&gt;</span><br><span class=\"line\">        \t<span class=\"comment\">%% 如果节点已经在集群里运行</span></span><br><span class=\"line\">            &#123;error, &#123;already_in_cluster, Node&#125;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Leave from the cluster.</span></span><br><span class=\"line\"><span class=\"comment\">%% 离开集群</span></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(leave() -&gt; ok | &#123;error, any()&#125;)</span>.</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">leave</span><span class=\"params\">()</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_mnesia:running_nodes() -- [node()] <span class=\"keyword\">of</span></span><br><span class=\"line\">        [_|_] -&gt;</span><br><span class=\"line\">            <span class=\"comment\">%% 如果该节点在运行的节点列表里  离开该集群</span></span><br><span class=\"line\">            prepare(leave), ok = ekka_mnesia:leave_cluster(), reboot();</span><br><span class=\"line\">        [] -&gt;</span><br><span class=\"line\">            &#123;error, node_not_in_cluster&#125;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Force a node leave from cluster.</span></span><br><span class=\"line\"><span class=\"comment\">%% 强制一个节点离开集群</span></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(force_leave(node()) -&gt; ok | ignore | &#123;error, term()&#125;)</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 如果是当前节点，忽略</span></span><br><span class=\"line\">force_leave(Node) when Node =:= node() -&gt;</span><br><span class=\"line\">    ignore;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">force_leave</span><span class=\"params\">(Node)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 如果Node节点在集群里，接着rpcdia</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_mnesia:is_node_in_cluster(Node)</span><br><span class=\"line\">         <span class=\"keyword\">andalso</span> rpc:call(Node, ?MODULE, prepare, [leave]) <span class=\"keyword\">of</span></span><br><span class=\"line\">        ok -&gt;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> ekka_mnesia:remove_from_cluster(Node) <span class=\"keyword\">of</span></span><br><span class=\"line\">                ok    -&gt; rpc:call(Node, ?MODULE, reboot, []);</span><br><span class=\"line\">                Error -&gt; Error</span><br><span class=\"line\">            <span class=\"keyword\">end</span>;</span><br><span class=\"line\">        <span class=\"literal\">false</span> -&gt;</span><br><span class=\"line\">            &#123;error, node_not_in_cluster&#125;;</span><br><span class=\"line\">        &#123;badrpc, nodedown&#125; -&gt;</span><br><span class=\"line\">            ekka_membership:announce(&#123;force_leave, Node&#125;),</span><br><span class=\"line\">            ekka_mnesia:remove_from_cluster(Node);</span><br><span class=\"line\">        &#123;badrpc, Reason&#125; -&gt;</span><br><span class=\"line\">            &#123;error, Reason&#125;</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% @doc Cluster status.</span></span><br><span class=\"line\"><span class=\"comment\">%% 集群状态</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">status</span><span class=\"params\">()</span> -&gt;</span> ekka_mnesia:cluster_status().</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><strong>ekka_autocluster</strong> 自动集群模块</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(run(atom()) -&gt; any())</span>.</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">run</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 获得锁</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> acquire_lock(App) <span class=\"keyword\">of</span></span><br><span class=\"line\">        ok -&gt;</span><br><span class=\"line\">            spawn(<span class=\"keyword\">fun</span>() -&gt;</span><br><span class=\"line\">            \t\t <span class=\"comment\">%% 把当前进程的组长设置为init</span></span><br><span class=\"line\">                      group_leader(whereis(init), self()),</span><br><span class=\"line\">                      <span class=\"comment\">%% 等待应用准备就绪</span></span><br><span class=\"line\">            \t\t  wait_application_ready(App, <span class=\"number\">10</span>),</span><br><span class=\"line\">                      <span class=\"keyword\">try</span></span><br><span class=\"line\">                          <span class=\"comment\">%% 发现且加入</span></span><br><span class=\"line\">                          discover_and_join()</span><br><span class=\"line\">                      <span class=\"keyword\">catch</span></span><br><span class=\"line\">                          _:Error:Stacktrace -&gt;</span><br><span class=\"line\">                              ?LOG(error, <span class=\"string\">\"Discover error: ~p~n~p\"</span>, [Error, Stacktrace])</span><br><span class=\"line\">                      <span class=\"keyword\">after</span></span><br><span class=\"line\">                          <span class=\"comment\">%% 释放锁</span></span><br><span class=\"line\">                          release_lock(App)</span><br><span class=\"line\">                      <span class=\"keyword\">end</span>,</span><br><span class=\"line\">            \t\t  <span class=\"comment\">%% 可能需要再次运行</span></span><br><span class=\"line\">                      maybe_run_again(App)</span><br><span class=\"line\">                  <span class=\"keyword\">end</span>);</span><br><span class=\"line\">        failed -&gt; ignore</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 等待节点运行应用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">wait_application_ready</span><span class=\"params\">(_App, <span class=\"number\">0</span>)</span> -&gt;</span></span><br><span class=\"line\">    timeout;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">wait_application_ready</span><span class=\"params\">(App, Retries)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_node:is_running(App) <span class=\"keyword\">of</span></span><br><span class=\"line\">        <span class=\"literal\">true</span>  -&gt; ok;</span><br><span class=\"line\">        <span class=\"literal\">false</span> -&gt; timer:sleep(<span class=\"number\">1000</span>),</span><br><span class=\"line\">                 wait_application_ready(App, Retries - <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 可能需要在尝试一次</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">maybe_run_again</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% Check if the node joined cluster?</span></span><br><span class=\"line\">    <span class=\"comment\">%% 检查节点是否在集群里</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> ekka_mnesia:is_node_in_cluster() <span class=\"keyword\">of</span></span><br><span class=\"line\">        <span class=\"literal\">true</span>  -&gt; ok;</span><br><span class=\"line\">        <span class=\"literal\">false</span> -&gt; </span><br><span class=\"line\">            \t <span class=\"comment\">%% 如果节点没有加入集群， 5秒后再次重试</span></span><br><span class=\"line\">            \t timer:sleep(<span class=\"number\">5000</span>),</span><br><span class=\"line\">                 run(App)</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(discover_and_join() -&gt; any())</span>.</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">discover_and_join</span><span class=\"params\">()</span> -&gt;</span></span><br><span class=\"line\">    with_strategy(</span><br><span class=\"line\">      <span class=\"keyword\">fun</span>(Mod, Options) -&gt;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> Mod:lock(Options) <span class=\"keyword\">of</span></span><br><span class=\"line\">            ok -&gt;</span><br><span class=\"line\">                discover_and_join(Mod, Options),</span><br><span class=\"line\">                log_error(<span class=\"string\">\"Unlock\"</span>, Mod:unlock(Options));</span><br><span class=\"line\">            ignore -&gt;</span><br><span class=\"line\">                timer:sleep(rand:uniform(<span class=\"number\">3000</span>)),</span><br><span class=\"line\">                discover_and_join(Mod, Options);</span><br><span class=\"line\">            &#123;error, Reason&#125; -&gt;</span><br><span class=\"line\">                ?LOG(error, <span class=\"string\">\"AutoCluster stopped for lock error: ~p\"</span>, [Reason])</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span>).</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(acquire_lock(atom()) -&gt; ok | failed)</span>.</span><br><span class=\"line\"><span class=\"comment\">%% 获取锁</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">acquire_lock</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 如果应用程序APP的配置参数 autocluster_lock没有被设置值，则设置为true，表示获得锁成功，否则获取锁失败</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> application:get_env(App, autocluster_lock) <span class=\"keyword\">of</span></span><br><span class=\"line\">        undefined -&gt;</span><br><span class=\"line\">            application:set_env(App, autocluster_lock, true);</span><br><span class=\"line\">        &#123;ok, _&#125; -&gt; failed</span><br><span class=\"line\">    <span class=\"keyword\">end</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">-spec</span><span class=\"params\">(release_lock(atom()) -&gt; ok)</span>.</span><br><span class=\"line\"><span class=\"comment\">%% 释放锁</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">release_lock</span><span class=\"params\">(App)</span> -&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">%% 清除应用程序APP的配置参数 autocluster_lock</span></span><br><span class=\"line\">    application:unset_env(App, autocluster_lock).</span><br></pre></td></tr></table></figure>\n\n"},{"title":"分布式架构","date":"2019-09-21T14:45:39.000Z","_content":"\n#### 可伸缩的分布式Erlang\n\n\n\n![](/img/sd_erlang.png)\n\n\n\n#### 面向服务和微服务的架构\n\n\n\n![](/img/service_bus.png)\n\n\n\n\n\n#### 点对点\n\n\n\n![](/img/p2p_framework.png)\n\n\n\n\n\n","source":"_posts/分布式架构.md","raw":"---\ntitle: 分布式架构\ndate: 2019-9-21 22:45:39\ncategories:\n  - Erlang\ntags: erlang\n---\n\n#### 可伸缩的分布式Erlang\n\n\n\n![](/img/sd_erlang.png)\n\n\n\n#### 面向服务和微服务的架构\n\n\n\n![](/img/service_bus.png)\n\n\n\n\n\n#### 点对点\n\n\n\n![](/img/p2p_framework.png)\n\n\n\n\n\n","slug":"分布式架构","published":1,"updated":"2019-11-24T15:34:15.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqw000nm7fhhy9z4xts","content":"<h4 id=\"可伸缩的分布式Erlang\"><a href=\"#可伸缩的分布式Erlang\" class=\"headerlink\" title=\"可伸缩的分布式Erlang\"></a>可伸缩的分布式Erlang</h4><p><img src=\"/img/sd_erlang.png\" alt=\"\"></p>\n<h4 id=\"面向服务和微服务的架构\"><a href=\"#面向服务和微服务的架构\" class=\"headerlink\" title=\"面向服务和微服务的架构\"></a>面向服务和微服务的架构</h4><p><img src=\"/img/service_bus.png\" alt=\"\"></p>\n<h4 id=\"点对点\"><a href=\"#点对点\" class=\"headerlink\" title=\"点对点\"></a>点对点</h4><p><img src=\"/img/p2p_framework.png\" alt=\"\"></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h4 id=\"可伸缩的分布式Erlang\"><a href=\"#可伸缩的分布式Erlang\" class=\"headerlink\" title=\"可伸缩的分布式Erlang\"></a>可伸缩的分布式Erlang</h4><p><img src=\"/img/sd_erlang.png\" alt=\"\"></p>\n<h4 id=\"面向服务和微服务的架构\"><a href=\"#面向服务和微服务的架构\" class=\"headerlink\" title=\"面向服务和微服务的架构\"></a>面向服务和微服务的架构</h4><p><img src=\"/img/service_bus.png\" alt=\"\"></p>\n<h4 id=\"点对点\"><a href=\"#点对点\" class=\"headerlink\" title=\"点对点\"></a>点对点</h4><p><img src=\"/img/p2p_framework.png\" alt=\"\"></p>\n"},{"title":"分布式Erlang","date":"2019-09-19T14:45:39.000Z","_content":"\n\n### 分布式Erlang\n\n\n\nErlang内置了相关接口允许程序跨多节点允许：多个进程可以透明地在其他节点分裂出进程，并且相互通过发送消息来通讯。分布式的各个节点都可以位于同一台物理主机上，也可以分布在不同的主机上。\n\n#### 命名与通讯\n\n一个Erlang节点想要成为分布式Erlang系统的一部分，它必须拥有一个名字。\n\n\n\n#### 节点间的连接与可见性\n\n\n\n为了能够相互通讯，Erlang的节点之间必须共享一个私密的cookie值。\n\n\n\n如果一组节点共享相同的cookie值，它们中的任何一个节点便都能够知道其他所有节点的存在，并且可以相互交互。如果在启动节点带上 -hidden 标志，这样该节点便不会自动与任何节点连接了。使用net_kernel模块可以对此进行细粒度的控制，还能控制互联的其它方面。\n\n\n\n### 分布式应用\n\n\n\n在多个Erlang节点的分布式系统中，如果正在运行的某个应用程序节点发生故障，则另外一个节点重新启动该应用程序。\n\n\n\n#### 指定分布式应用\n\n\n\n通过以下配置参数来指定分布式应用程序。\n\ndistributed = [{Application，Timeout, NodeDesc}]\n\nApplication = atom()  指定应用程序\n\nTimeout = integer()  指定另一个节点重新启动之前等待的毫秒数。默认0。\n\nNodeDesc = [Node1 | {Node2, Node3}]  是优先级顺序的节点名称列表。\n\n\n\n为了使分布式程序正常工作， 可以运行的节点必须相互联系并协商启动应用程序的配置。使用一下的配置参数来完成。\n\n\n\n- sync_nodes_mandatory = [Node] - 指定必须启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。\n- sync_nodes_optional = [Node] - 指定可以启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。\n- sync_nodes_timeout =integer（）| infinity - 指定等待其他节点启动的毫秒数。\n\n\n\neg:\n\nmyapp这个应用程序运行在节点 node1@lxw,如果这个节点崩溃。myapp将在节点node2@lxw 或者 node3@lxw 重新启动。这个node1@lxwde 配置文件 node1.config如下。  \n\n```erlang\n[{kernel,\n  [{distributed, [{myapp, 5000, [node1@lxw, {node2@lxw, node3@lxw}]}]},\n   {sync_nodes_mandatory, [node2@lxw, node3@lxw]},\n   {sync_nodes_timeout, 5000}\n  ]\n }\n].\n```\n\n对于node2@lxw和node3@lxw的配置文件，除了sync_nodes_mandatory的节点列表不同，其它都是相同的。node2@lxw的是[node1@lxw, node3@lxw], node3@lxw的是[node1@lxw, node2@lxw]。\n\n\n\nsync_nodes_mandatory 元组要结合sync_nodes_timeout一起使用。当用这个配置启动分布式节点时，节点会一直处于锁定状态，直到所有节点都启动并被锁定，接着，它们之间会进行同步，然后在继续运行。如果启动的所有节点时间超过了 sync_nodes_timeout 配置的时间，那么它们都将崩溃。\n\n\n\n#### 启动和停止分布式应用程序\n\n\n\n当所有的节点都已经启动时，通过在所有节点上调用 application:start(Application) 来启动分布式应用程序。\n\n\n\n也可以使用启动脚本自动启动应用程序。 \n\n\n\neg：\n\n```erlang\nerl -sname node1 -config node1\nerl -sname node2 -config node2\nerl -sname node3 -config node3\n```\n\n\n\n加入启动 application:start(Application) 参数\n\n\n\n```erlang\nerl -sname node1 -config node1 -eval \"application:start(Application)\"\nerl -sname node2 -config node2 -eval \"application:start(Application)\"\nerl -sname node3 -config node3 -eval \"application:start(Application)\"\n```\n\n\n\n同样，需要在所有相关节点上调用 applicaiont:stop(Application) 来停止应用程序。\n\n\n\n#### 故障转移\n\n\n\n如果正在运行应用程序的节点发生故障，则应用程序将在分布式配置参数中的节点列表中列出的第一个操作节点上重新启动（在指定的超时时间之后）。这称为 **故障转移**。\n\n\n\n应用程序在新节点上以正常方式启动，调用：\n\n> Module:start(normal, StartArgs)\n\n\n\n#### 恢复\n\n如果启动节点，这个节点在分布式应用程序中有更高的运行优先权，这个应用程序将在新的节点启动，在老的节点停止，这个称为恢复。\n\n\n\n应用程序启动通过调用：\n\n> Module:start({takeover, Node}, StartArgs)\n\n\n\n","source":"_posts/分布式Erlang.md","raw":"---\ntitle: 分布式Erlang\ndate: 2019-9-19 22:45:39\ncategories:\n  - Erlang\ntags: erlang\n---\n\n\n### 分布式Erlang\n\n\n\nErlang内置了相关接口允许程序跨多节点允许：多个进程可以透明地在其他节点分裂出进程，并且相互通过发送消息来通讯。分布式的各个节点都可以位于同一台物理主机上，也可以分布在不同的主机上。\n\n#### 命名与通讯\n\n一个Erlang节点想要成为分布式Erlang系统的一部分，它必须拥有一个名字。\n\n\n\n#### 节点间的连接与可见性\n\n\n\n为了能够相互通讯，Erlang的节点之间必须共享一个私密的cookie值。\n\n\n\n如果一组节点共享相同的cookie值，它们中的任何一个节点便都能够知道其他所有节点的存在，并且可以相互交互。如果在启动节点带上 -hidden 标志，这样该节点便不会自动与任何节点连接了。使用net_kernel模块可以对此进行细粒度的控制，还能控制互联的其它方面。\n\n\n\n### 分布式应用\n\n\n\n在多个Erlang节点的分布式系统中，如果正在运行的某个应用程序节点发生故障，则另外一个节点重新启动该应用程序。\n\n\n\n#### 指定分布式应用\n\n\n\n通过以下配置参数来指定分布式应用程序。\n\ndistributed = [{Application，Timeout, NodeDesc}]\n\nApplication = atom()  指定应用程序\n\nTimeout = integer()  指定另一个节点重新启动之前等待的毫秒数。默认0。\n\nNodeDesc = [Node1 | {Node2, Node3}]  是优先级顺序的节点名称列表。\n\n\n\n为了使分布式程序正常工作， 可以运行的节点必须相互联系并协商启动应用程序的配置。使用一下的配置参数来完成。\n\n\n\n- sync_nodes_mandatory = [Node] - 指定必须启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。\n- sync_nodes_optional = [Node] - 指定可以启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。\n- sync_nodes_timeout =integer（）| infinity - 指定等待其他节点启动的毫秒数。\n\n\n\neg:\n\nmyapp这个应用程序运行在节点 node1@lxw,如果这个节点崩溃。myapp将在节点node2@lxw 或者 node3@lxw 重新启动。这个node1@lxwde 配置文件 node1.config如下。  \n\n```erlang\n[{kernel,\n  [{distributed, [{myapp, 5000, [node1@lxw, {node2@lxw, node3@lxw}]}]},\n   {sync_nodes_mandatory, [node2@lxw, node3@lxw]},\n   {sync_nodes_timeout, 5000}\n  ]\n }\n].\n```\n\n对于node2@lxw和node3@lxw的配置文件，除了sync_nodes_mandatory的节点列表不同，其它都是相同的。node2@lxw的是[node1@lxw, node3@lxw], node3@lxw的是[node1@lxw, node2@lxw]。\n\n\n\nsync_nodes_mandatory 元组要结合sync_nodes_timeout一起使用。当用这个配置启动分布式节点时，节点会一直处于锁定状态，直到所有节点都启动并被锁定，接着，它们之间会进行同步，然后在继续运行。如果启动的所有节点时间超过了 sync_nodes_timeout 配置的时间，那么它们都将崩溃。\n\n\n\n#### 启动和停止分布式应用程序\n\n\n\n当所有的节点都已经启动时，通过在所有节点上调用 application:start(Application) 来启动分布式应用程序。\n\n\n\n也可以使用启动脚本自动启动应用程序。 \n\n\n\neg：\n\n```erlang\nerl -sname node1 -config node1\nerl -sname node2 -config node2\nerl -sname node3 -config node3\n```\n\n\n\n加入启动 application:start(Application) 参数\n\n\n\n```erlang\nerl -sname node1 -config node1 -eval \"application:start(Application)\"\nerl -sname node2 -config node2 -eval \"application:start(Application)\"\nerl -sname node3 -config node3 -eval \"application:start(Application)\"\n```\n\n\n\n同样，需要在所有相关节点上调用 applicaiont:stop(Application) 来停止应用程序。\n\n\n\n#### 故障转移\n\n\n\n如果正在运行应用程序的节点发生故障，则应用程序将在分布式配置参数中的节点列表中列出的第一个操作节点上重新启动（在指定的超时时间之后）。这称为 **故障转移**。\n\n\n\n应用程序在新节点上以正常方式启动，调用：\n\n> Module:start(normal, StartArgs)\n\n\n\n#### 恢复\n\n如果启动节点，这个节点在分布式应用程序中有更高的运行优先权，这个应用程序将在新的节点启动，在老的节点停止，这个称为恢复。\n\n\n\n应用程序启动通过调用：\n\n> Module:start({takeover, Node}, StartArgs)\n\n\n\n","slug":"分布式Erlang","published":1,"updated":"2019-11-24T15:33:19.125Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqx000sm7fha1uo00ks","content":"<h3 id=\"分布式Erlang\"><a href=\"#分布式Erlang\" class=\"headerlink\" title=\"分布式Erlang\"></a>分布式Erlang</h3><p>Erlang内置了相关接口允许程序跨多节点允许：多个进程可以透明地在其他节点分裂出进程，并且相互通过发送消息来通讯。分布式的各个节点都可以位于同一台物理主机上，也可以分布在不同的主机上。</p>\n<h4 id=\"命名与通讯\"><a href=\"#命名与通讯\" class=\"headerlink\" title=\"命名与通讯\"></a>命名与通讯</h4><p>一个Erlang节点想要成为分布式Erlang系统的一部分，它必须拥有一个名字。</p>\n<h4 id=\"节点间的连接与可见性\"><a href=\"#节点间的连接与可见性\" class=\"headerlink\" title=\"节点间的连接与可见性\"></a>节点间的连接与可见性</h4><p>为了能够相互通讯，Erlang的节点之间必须共享一个私密的cookie值。</p>\n<p>如果一组节点共享相同的cookie值，它们中的任何一个节点便都能够知道其他所有节点的存在，并且可以相互交互。如果在启动节点带上 -hidden 标志，这样该节点便不会自动与任何节点连接了。使用net_kernel模块可以对此进行细粒度的控制，还能控制互联的其它方面。</p>\n<h3 id=\"分布式应用\"><a href=\"#分布式应用\" class=\"headerlink\" title=\"分布式应用\"></a>分布式应用</h3><p>在多个Erlang节点的分布式系统中，如果正在运行的某个应用程序节点发生故障，则另外一个节点重新启动该应用程序。</p>\n<h4 id=\"指定分布式应用\"><a href=\"#指定分布式应用\" class=\"headerlink\" title=\"指定分布式应用\"></a>指定分布式应用</h4><p>通过以下配置参数来指定分布式应用程序。</p>\n<p>distributed = [{Application，Timeout, NodeDesc}]</p>\n<p>Application = atom()  指定应用程序</p>\n<p>Timeout = integer()  指定另一个节点重新启动之前等待的毫秒数。默认0。</p>\n<p>NodeDesc = [Node1 | {Node2, Node3}]  是优先级顺序的节点名称列表。</p>\n<p>为了使分布式程序正常工作， 可以运行的节点必须相互联系并协商启动应用程序的配置。使用一下的配置参数来完成。</p>\n<ul>\n<li>sync_nodes_mandatory = [Node] - 指定必须启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。</li>\n<li>sync_nodes_optional = [Node] - 指定可以启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。</li>\n<li>sync_nodes_timeout =integer（）| infinity - 指定等待其他节点启动的毫秒数。</li>\n</ul>\n<p>eg:</p>\n<p>myapp这个应用程序运行在节点 node1@lxw,如果这个节点崩溃。myapp将在节点node2@lxw 或者 node3@lxw 重新启动。这个node1@lxwde 配置文件 node1.config如下。  </p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;kernel,</span><br><span class=\"line\">  [&#123;distributed, [&#123;myapp, <span class=\"number\">5000</span>, [node1@lxw, &#123;node2@lxw, node3@lxw&#125;]&#125;]&#125;,</span><br><span class=\"line\">   &#123;sync_nodes_mandatory, [node2@lxw, node3@lxw]&#125;,</span><br><span class=\"line\">   &#123;sync_nodes_timeout, <span class=\"number\">5000</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">].</span><br></pre></td></tr></table></figure>\n\n<p>对于node2@lxw和node3@lxw的配置文件，除了sync_nodes_mandatory的节点列表不同，其它都是相同的。node2@lxw的是[node1@lxw, node3@lxw], node3@lxw的是[node1@lxw, node2@lxw]。</p>\n<p>sync_nodes_mandatory 元组要结合sync_nodes_timeout一起使用。当用这个配置启动分布式节点时，节点会一直处于锁定状态，直到所有节点都启动并被锁定，接着，它们之间会进行同步，然后在继续运行。如果启动的所有节点时间超过了 sync_nodes_timeout 配置的时间，那么它们都将崩溃。</p>\n<h4 id=\"启动和停止分布式应用程序\"><a href=\"#启动和停止分布式应用程序\" class=\"headerlink\" title=\"启动和停止分布式应用程序\"></a>启动和停止分布式应用程序</h4><p>当所有的节点都已经启动时，通过在所有节点上调用 application:start(Application) 来启动分布式应用程序。</p>\n<p>也可以使用启动脚本自动启动应用程序。 </p>\n<p>eg：</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -sname node1 -config node1</span><br><span class=\"line\">erl -sname node2 -config node2</span><br><span class=\"line\">erl -sname node3 -config node3</span><br></pre></td></tr></table></figure>\n\n\n\n<p>加入启动 application:start(Application) 参数</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -sname node1 -config node1 -eval <span class=\"string\">\"application:start(Application)\"</span></span><br><span class=\"line\">erl -sname node2 -config node2 -eval <span class=\"string\">\"application:start(Application)\"</span></span><br><span class=\"line\">erl -sname node3 -config node3 -eval <span class=\"string\">\"application:start(Application)\"</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>同样，需要在所有相关节点上调用 applicaiont:stop(Application) 来停止应用程序。</p>\n<h4 id=\"故障转移\"><a href=\"#故障转移\" class=\"headerlink\" title=\"故障转移\"></a>故障转移</h4><p>如果正在运行应用程序的节点发生故障，则应用程序将在分布式配置参数中的节点列表中列出的第一个操作节点上重新启动（在指定的超时时间之后）。这称为 <strong>故障转移</strong>。</p>\n<p>应用程序在新节点上以正常方式启动，调用：</p>\n<blockquote>\n<p>Module:start(normal, StartArgs)</p>\n</blockquote>\n<h4 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h4><p>如果启动节点，这个节点在分布式应用程序中有更高的运行优先权，这个应用程序将在新的节点启动，在老的节点停止，这个称为恢复。</p>\n<p>应用程序启动通过调用：</p>\n<blockquote>\n<p>Module:start({takeover, Node}, StartArgs)</p>\n</blockquote>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"分布式Erlang\"><a href=\"#分布式Erlang\" class=\"headerlink\" title=\"分布式Erlang\"></a>分布式Erlang</h3><p>Erlang内置了相关接口允许程序跨多节点允许：多个进程可以透明地在其他节点分裂出进程，并且相互通过发送消息来通讯。分布式的各个节点都可以位于同一台物理主机上，也可以分布在不同的主机上。</p>\n<h4 id=\"命名与通讯\"><a href=\"#命名与通讯\" class=\"headerlink\" title=\"命名与通讯\"></a>命名与通讯</h4><p>一个Erlang节点想要成为分布式Erlang系统的一部分，它必须拥有一个名字。</p>\n<h4 id=\"节点间的连接与可见性\"><a href=\"#节点间的连接与可见性\" class=\"headerlink\" title=\"节点间的连接与可见性\"></a>节点间的连接与可见性</h4><p>为了能够相互通讯，Erlang的节点之间必须共享一个私密的cookie值。</p>\n<p>如果一组节点共享相同的cookie值，它们中的任何一个节点便都能够知道其他所有节点的存在，并且可以相互交互。如果在启动节点带上 -hidden 标志，这样该节点便不会自动与任何节点连接了。使用net_kernel模块可以对此进行细粒度的控制，还能控制互联的其它方面。</p>\n<h3 id=\"分布式应用\"><a href=\"#分布式应用\" class=\"headerlink\" title=\"分布式应用\"></a>分布式应用</h3><p>在多个Erlang节点的分布式系统中，如果正在运行的某个应用程序节点发生故障，则另外一个节点重新启动该应用程序。</p>\n<h4 id=\"指定分布式应用\"><a href=\"#指定分布式应用\" class=\"headerlink\" title=\"指定分布式应用\"></a>指定分布式应用</h4><p>通过以下配置参数来指定分布式应用程序。</p>\n<p>distributed = [{Application，Timeout, NodeDesc}]</p>\n<p>Application = atom()  指定应用程序</p>\n<p>Timeout = integer()  指定另一个节点重新启动之前等待的毫秒数。默认0。</p>\n<p>NodeDesc = [Node1 | {Node2, Node3}]  是优先级顺序的节点名称列表。</p>\n<p>为了使分布式程序正常工作， 可以运行的节点必须相互联系并协商启动应用程序的配置。使用一下的配置参数来完成。</p>\n<ul>\n<li>sync_nodes_mandatory = [Node] - 指定必须启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。</li>\n<li>sync_nodes_optional = [Node] - 指定可以启动的其他节点（在sync_nodes_timeout指定的超时时间内 ）。</li>\n<li>sync_nodes_timeout =integer（）| infinity - 指定等待其他节点启动的毫秒数。</li>\n</ul>\n<p>eg:</p>\n<p>myapp这个应用程序运行在节点 node1@lxw,如果这个节点崩溃。myapp将在节点node2@lxw 或者 node3@lxw 重新启动。这个node1@lxwde 配置文件 node1.config如下。  </p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;kernel,</span><br><span class=\"line\">  [&#123;distributed, [&#123;myapp, <span class=\"number\">5000</span>, [node1@lxw, &#123;node2@lxw, node3@lxw&#125;]&#125;]&#125;,</span><br><span class=\"line\">   &#123;sync_nodes_mandatory, [node2@lxw, node3@lxw]&#125;,</span><br><span class=\"line\">   &#123;sync_nodes_timeout, <span class=\"number\">5000</span>&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">].</span><br></pre></td></tr></table></figure>\n\n<p>对于node2@lxw和node3@lxw的配置文件，除了sync_nodes_mandatory的节点列表不同，其它都是相同的。node2@lxw的是[node1@lxw, node3@lxw], node3@lxw的是[node1@lxw, node2@lxw]。</p>\n<p>sync_nodes_mandatory 元组要结合sync_nodes_timeout一起使用。当用这个配置启动分布式节点时，节点会一直处于锁定状态，直到所有节点都启动并被锁定，接着，它们之间会进行同步，然后在继续运行。如果启动的所有节点时间超过了 sync_nodes_timeout 配置的时间，那么它们都将崩溃。</p>\n<h4 id=\"启动和停止分布式应用程序\"><a href=\"#启动和停止分布式应用程序\" class=\"headerlink\" title=\"启动和停止分布式应用程序\"></a>启动和停止分布式应用程序</h4><p>当所有的节点都已经启动时，通过在所有节点上调用 application:start(Application) 来启动分布式应用程序。</p>\n<p>也可以使用启动脚本自动启动应用程序。 </p>\n<p>eg：</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -sname node1 -config node1</span><br><span class=\"line\">erl -sname node2 -config node2</span><br><span class=\"line\">erl -sname node3 -config node3</span><br></pre></td></tr></table></figure>\n\n\n\n<p>加入启动 application:start(Application) 参数</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erl -sname node1 -config node1 -eval <span class=\"string\">\"application:start(Application)\"</span></span><br><span class=\"line\">erl -sname node2 -config node2 -eval <span class=\"string\">\"application:start(Application)\"</span></span><br><span class=\"line\">erl -sname node3 -config node3 -eval <span class=\"string\">\"application:start(Application)\"</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>同样，需要在所有相关节点上调用 applicaiont:stop(Application) 来停止应用程序。</p>\n<h4 id=\"故障转移\"><a href=\"#故障转移\" class=\"headerlink\" title=\"故障转移\"></a>故障转移</h4><p>如果正在运行应用程序的节点发生故障，则应用程序将在分布式配置参数中的节点列表中列出的第一个操作节点上重新启动（在指定的超时时间之后）。这称为 <strong>故障转移</strong>。</p>\n<p>应用程序在新节点上以正常方式启动，调用：</p>\n<blockquote>\n<p>Module:start(normal, StartArgs)</p>\n</blockquote>\n<h4 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h4><p>如果启动节点，这个节点在分布式应用程序中有更高的运行优先权，这个应用程序将在新的节点启动，在老的节点停止，这个称为恢复。</p>\n<p>应用程序启动通过调用：</p>\n<blockquote>\n<p>Module:start({takeover, Node}, StartArgs)</p>\n</blockquote>\n"},{"title":"排序","date":"2018-01-18T14:45:39.000Z","_content":"\n\n### 选择排序\n\n首先在数组中找到最小的元素，然后把它和第一个元素交换。然后在剩余的元素中不断的找到最小者与第一个元素交换。\n\n```c\n#include <iostream>\nusing namespace std;\nvoid selectSort(int a[], int n){\n    int i, j;\n    for (i = 0; i < n; i++){\n        int minIndex = i;\n        for(j = i + 1; j < n; j ++){\n            if (a[minIndex] > a[j]){\n                minIndex = j;\n            }\n        }\n        swap(a[minIndex], a[j]);\n    }\n}\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    selectSort(a, 10);\n    return 0;\n}\n\n\n```\n\n\n\n### 插入排序\n\n\n在玩扑克牌的时候，如果都是从左到右的整理扑克，那么这个过程就是一个插入排序过程。\n\n具体思想就是当前元素在前面已经排好序的数组中寻找合适的位置并插入进去。\n\n\n```c\n#include <iostream>\nusing namespace std;\nvoid insertSort(int a[], int n){\n    for (int i = 1; i < n; i++){\n        for (int j = i; j > 0; j--){\n            if(a[j] < a[j-1]){\n                swap(a[j], a[j-1]);\n            }else{\n                break;\n            }\n        }\n    }\n}\n\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    insertSort(a, 10);\n    return 0;\n}\n\n\n\n```\n\n\n### 归并排序\n\n对一个数组排序，可以将数组（递归）的分成两半进行排序，然后将结果合并起来。\n\n```c\n#include <iostream>\nusing namespace std;\n\nint aux[10];\nvoid merge(int a[], int l, int mid, int r){\n    int i = l, j = mid + 1;\n    for(int k = l; k <= r; k++){\n        aux[k] = a[k];\n    }\n    for(int k = l; k <= r; k++){\n        if(i > mid){\n            a[k] = aux[j++];\n        }else if(j > r){\n            a[k] = aux[i++];\n        }else if(aux[i] > aux[j]){\n            a[k] = aux[j++];\n        }else{\n            a[k] = aux[i++];\n        }\n    }\n}\n\nvoid mergeSort(int a[], int l, int r){\n    if (l >= r) return;\n    int mid = l + (r - l) / 2;\n    mergeSort(a, l, mid);\n    mergeSort(a, mid + 1, r);\n    merge(a, l, mid, r);\n}\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    mergeSort(a, 0, 9);\n    return 0;\n}\n\n\n```\n\n\n### 快速排序\n\n\n快速排序是一种分治算法。它是将一个数组分割成两个子数组，与归并排序不同的是：快速排序保证左边的数组元素都要小于右边的数组元素。\n\n首先找到一个分割点，一般以数组的第一个元素作为这个分割点，先从左边往右边找。把比这个元素小的都放在左边，比它大的放在右边，然后又从右边往左边找。\n当两个指针相遇时，我们只需要把该分割点的元素放到该位置即可（分割点）。\n\n\n```c\n#include <iostream>\nusing namespace std;\n\nvoid quikSort(int a[], int begin, int end){\n    if(begin >= end)return;\n    int i = begin;\n    int j = end;\n    int key = a[i];\n    while(i < j){\n        while(a[j] >= key && j > i)j--;\n        a[i] = a[j];\n        while(a[i] <= key && j > i)i++;\n        a[j] = a[i];\n    }\n    a[i] = key;\n    quikSort(a, begin, i - 1);\n    quikSort(a, i + 1, end);\n}\n\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    quikSort(a, 0, 9);\n    return 0;\n}\n\n```\n\n\n### 堆排序\n\n\n```c\n#include <iostream>\n#define N 10\nusing namespace std;\n\nint arr[N+1];\nint count = 0;\n\nvoid shiftUp(int k){\n    while(arr[k/2] < arr[k] && k > 1){\n        swap(arr[k/2], arr[k]);\n        k /= 2;\n    }\n}\n\nvoid insert(int v){\n    if(count + 1 > N) return;\n    arr[count + 1] = v;\n    count++;\n    shiftUp(count);\n}\n\nvoid shiftDown(int k){\n    while(2 * k <= count){\n        int j = 2 * k;\n        if(j + 1 <= count && arr[j + 1] > arr[j]){\n            j = j + 1;\n        }\n        if(arr[k] > arr[j]){\n            break;\n        }\n        swap(arr[j], arr[k]);\n        k = j;\n    }\n}\n\nint popMax(){\n    if (!count) return 0;\n    int v = arr[1];\n    swap(arr[1], arr[count]);\n    count--;\n    shiftDown(1);\n    return v;\n}\n\nvoid heapSort1(int a[], int n){\n    for (int i = 0; i < n; i++){\n        insert(a[i]);\n    }\n\n    for (int i = n - 1; i >= 0; i--){\n        a[i] = popMax();\n    }\n}\n\nvoid heapSort2(int a[], int n){\n    for (int i = 1; i <= n; i++){\n        arr[i] = a[i -1];\n    }\n\n    for(int i = n/2; i > 0; i--){\n        shiftDown(i);\n    }\n    count = n;\n    for (int i = n - 1; i >= 0; i--){\n        a[i] = popMax();\n    }\n}\n\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    heapSort2(a, N);\n    for (int i = 0; i < N; i++){\n        cout << a[i] << \" \";\n    }\n    \n    return 0;\n}\n\n```","source":"_posts/排序算法.md","raw":"---\ntitle: 排序\ndate: 2018-1-18 22:45:39\ncategories:\n  - 数据结构与算法\ntags: 排序\n---\n\n\n### 选择排序\n\n首先在数组中找到最小的元素，然后把它和第一个元素交换。然后在剩余的元素中不断的找到最小者与第一个元素交换。\n\n```c\n#include <iostream>\nusing namespace std;\nvoid selectSort(int a[], int n){\n    int i, j;\n    for (i = 0; i < n; i++){\n        int minIndex = i;\n        for(j = i + 1; j < n; j ++){\n            if (a[minIndex] > a[j]){\n                minIndex = j;\n            }\n        }\n        swap(a[minIndex], a[j]);\n    }\n}\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    selectSort(a, 10);\n    return 0;\n}\n\n\n```\n\n\n\n### 插入排序\n\n\n在玩扑克牌的时候，如果都是从左到右的整理扑克，那么这个过程就是一个插入排序过程。\n\n具体思想就是当前元素在前面已经排好序的数组中寻找合适的位置并插入进去。\n\n\n```c\n#include <iostream>\nusing namespace std;\nvoid insertSort(int a[], int n){\n    for (int i = 1; i < n; i++){\n        for (int j = i; j > 0; j--){\n            if(a[j] < a[j-1]){\n                swap(a[j], a[j-1]);\n            }else{\n                break;\n            }\n        }\n    }\n}\n\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    insertSort(a, 10);\n    return 0;\n}\n\n\n\n```\n\n\n### 归并排序\n\n对一个数组排序，可以将数组（递归）的分成两半进行排序，然后将结果合并起来。\n\n```c\n#include <iostream>\nusing namespace std;\n\nint aux[10];\nvoid merge(int a[], int l, int mid, int r){\n    int i = l, j = mid + 1;\n    for(int k = l; k <= r; k++){\n        aux[k] = a[k];\n    }\n    for(int k = l; k <= r; k++){\n        if(i > mid){\n            a[k] = aux[j++];\n        }else if(j > r){\n            a[k] = aux[i++];\n        }else if(aux[i] > aux[j]){\n            a[k] = aux[j++];\n        }else{\n            a[k] = aux[i++];\n        }\n    }\n}\n\nvoid mergeSort(int a[], int l, int r){\n    if (l >= r) return;\n    int mid = l + (r - l) / 2;\n    mergeSort(a, l, mid);\n    mergeSort(a, mid + 1, r);\n    merge(a, l, mid, r);\n}\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    mergeSort(a, 0, 9);\n    return 0;\n}\n\n\n```\n\n\n### 快速排序\n\n\n快速排序是一种分治算法。它是将一个数组分割成两个子数组，与归并排序不同的是：快速排序保证左边的数组元素都要小于右边的数组元素。\n\n首先找到一个分割点，一般以数组的第一个元素作为这个分割点，先从左边往右边找。把比这个元素小的都放在左边，比它大的放在右边，然后又从右边往左边找。\n当两个指针相遇时，我们只需要把该分割点的元素放到该位置即可（分割点）。\n\n\n```c\n#include <iostream>\nusing namespace std;\n\nvoid quikSort(int a[], int begin, int end){\n    if(begin >= end)return;\n    int i = begin;\n    int j = end;\n    int key = a[i];\n    while(i < j){\n        while(a[j] >= key && j > i)j--;\n        a[i] = a[j];\n        while(a[i] <= key && j > i)i++;\n        a[j] = a[i];\n    }\n    a[i] = key;\n    quikSort(a, begin, i - 1);\n    quikSort(a, i + 1, end);\n}\n\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    quikSort(a, 0, 9);\n    return 0;\n}\n\n```\n\n\n### 堆排序\n\n\n```c\n#include <iostream>\n#define N 10\nusing namespace std;\n\nint arr[N+1];\nint count = 0;\n\nvoid shiftUp(int k){\n    while(arr[k/2] < arr[k] && k > 1){\n        swap(arr[k/2], arr[k]);\n        k /= 2;\n    }\n}\n\nvoid insert(int v){\n    if(count + 1 > N) return;\n    arr[count + 1] = v;\n    count++;\n    shiftUp(count);\n}\n\nvoid shiftDown(int k){\n    while(2 * k <= count){\n        int j = 2 * k;\n        if(j + 1 <= count && arr[j + 1] > arr[j]){\n            j = j + 1;\n        }\n        if(arr[k] > arr[j]){\n            break;\n        }\n        swap(arr[j], arr[k]);\n        k = j;\n    }\n}\n\nint popMax(){\n    if (!count) return 0;\n    int v = arr[1];\n    swap(arr[1], arr[count]);\n    count--;\n    shiftDown(1);\n    return v;\n}\n\nvoid heapSort1(int a[], int n){\n    for (int i = 0; i < n; i++){\n        insert(a[i]);\n    }\n\n    for (int i = n - 1; i >= 0; i--){\n        a[i] = popMax();\n    }\n}\n\nvoid heapSort2(int a[], int n){\n    for (int i = 1; i <= n; i++){\n        arr[i] = a[i -1];\n    }\n\n    for(int i = n/2; i > 0; i--){\n        shiftDown(i);\n    }\n    count = n;\n    for (int i = n - 1; i >= 0; i--){\n        a[i] = popMax();\n    }\n}\n\nint main(){\n    int a[10] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};\n    heapSort2(a, N);\n    for (int i = 0; i < N; i++){\n        cout << a[i] << \" \";\n    }\n    \n    return 0;\n}\n\n```","slug":"排序算法","published":1,"updated":"2019-11-24T16:48:01.158Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdqz000um7fhhobadtoh","content":"<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><p>首先在数组中找到最小的元素，然后把它和第一个元素交换。然后在剩余的元素中不断的找到最小者与第一个元素交换。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">selectSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> minIndex = i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = i + <span class=\"number\">1</span>; j &lt; n; j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[minIndex] &gt; a[j])&#123;</span><br><span class=\"line\">                minIndex = j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        swap(a[minIndex], a[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    selectSort(a, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><p>在玩扑克牌的时候，如果都是从左到右的整理扑克，那么这个过程就是一个插入排序过程。</p>\n<p>具体思想就是当前元素在前面已经排好序的数组中寻找合适的位置并插入进去。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insertSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &gt; <span class=\"number\">0</span>; j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[j] &lt; a[j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                swap(a[j], a[j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    insertSort(a, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><p>对一个数组排序，可以将数组（递归）的分成两半进行排序，然后将结果合并起来。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> aux[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = l, j = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class=\"line\">        aux[k] = a[k];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &gt; mid)&#123;</span><br><span class=\"line\">            a[k] = aux[j++];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j &gt; r)&#123;</span><br><span class=\"line\">            a[k] = aux[i++];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(aux[i] &gt; aux[j])&#123;</span><br><span class=\"line\">            a[k] = aux[j++];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            a[k] = aux[i++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l &gt;= r) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = l + (r - l) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    mergeSort(a, l, mid);</span><br><span class=\"line\">    mergeSort(a, mid + <span class=\"number\">1</span>, r);</span><br><span class=\"line\">    merge(a, l, mid, r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    mergeSort(a, <span class=\"number\">0</span>, <span class=\"number\">9</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h3><p>快速排序是一种分治算法。它是将一个数组分割成两个子数组，与归并排序不同的是：快速排序保证左边的数组元素都要小于右边的数组元素。</p>\n<p>首先找到一个分割点，一般以数组的第一个元素作为这个分割点，先从左边往右边找。把比这个元素小的都放在左边，比它大的放在右边，然后又从右边往左边找。<br>当两个指针相遇时，我们只需要把该分割点的元素放到该位置即可（分割点）。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">quikSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> <span class=\"built_in\">begin</span>, <span class=\"keyword\">int</span> <span class=\"built_in\">end</span>)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">begin</span> &gt;= <span class=\"built_in\">end</span>)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"built_in\">begin</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"built_in\">end</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> key = a[i];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt; j)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[j] &gt;= key &amp;&amp; j &gt; i)j--;</span><br><span class=\"line\">        a[i] = a[j];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[i] &lt;= key &amp;&amp; j &gt; i)i++;</span><br><span class=\"line\">        a[j] = a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    a[i] = key;</span><br><span class=\"line\">    quikSort(a, <span class=\"built_in\">begin</span>, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">    quikSort(a, i + <span class=\"number\">1</span>, <span class=\"built_in\">end</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    quikSort(a, <span class=\"number\">0</span>, <span class=\"number\">9</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"堆排序\"><a href=\"#堆排序\" class=\"headerlink\" title=\"堆排序\"></a>堆排序</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 10</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> arr[N+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shiftUp</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(arr[k/<span class=\"number\">2</span>] &lt; arr[k] &amp;&amp; k &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        swap(arr[k/<span class=\"number\">2</span>], arr[k]);</span><br><span class=\"line\">        k /= <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">int</span> v)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(count + <span class=\"number\">1</span> &gt; N) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    arr[count + <span class=\"number\">1</span>] = v;</span><br><span class=\"line\">    count++;</span><br><span class=\"line\">    shiftUp(count);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shiftDown</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">2</span> * k &lt;= count)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = <span class=\"number\">2</span> * k;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j + <span class=\"number\">1</span> &lt;= count &amp;&amp; arr[j + <span class=\"number\">1</span>] &gt; arr[j])&#123;</span><br><span class=\"line\">            j = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[k] &gt; arr[j])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        swap(arr[j], arr[k]);</span><br><span class=\"line\">        k = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">popMax</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!count) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v = arr[<span class=\"number\">1</span>];</span><br><span class=\"line\">    swap(arr[<span class=\"number\">1</span>], arr[count]);</span><br><span class=\"line\">    count--;</span><br><span class=\"line\">    shiftDown(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">heapSort1</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        insert(a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        a[i] = popMax();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">heapSort2</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        arr[i] = a[i <span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = n/<span class=\"number\">2</span>; i &gt; <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        shiftDown(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    count = n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        a[i] = popMax();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    heapSort2(a, N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; a[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><p>首先在数组中找到最小的元素，然后把它和第一个元素交换。然后在剩余的元素中不断的找到最小者与第一个元素交换。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">selectSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> minIndex = i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = i + <span class=\"number\">1</span>; j &lt; n; j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[minIndex] &gt; a[j])&#123;</span><br><span class=\"line\">                minIndex = j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        swap(a[minIndex], a[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    selectSort(a, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><p>在玩扑克牌的时候，如果都是从左到右的整理扑克，那么这个过程就是一个插入排序过程。</p>\n<p>具体思想就是当前元素在前面已经排好序的数组中寻找合适的位置并插入进去。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insertSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &gt; <span class=\"number\">0</span>; j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[j] &lt; a[j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                swap(a[j], a[j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    insertSort(a, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h3><p>对一个数组排序，可以将数组（递归）的分成两半进行排序，然后将结果合并起来。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> aux[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = l, j = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class=\"line\">        aux[k] = a[k];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = l; k &lt;= r; k++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &gt; mid)&#123;</span><br><span class=\"line\">            a[k] = aux[j++];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j &gt; r)&#123;</span><br><span class=\"line\">            a[k] = aux[i++];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(aux[i] &gt; aux[j])&#123;</span><br><span class=\"line\">            a[k] = aux[j++];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            a[k] = aux[i++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (l &gt;= r) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = l + (r - l) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    mergeSort(a, l, mid);</span><br><span class=\"line\">    mergeSort(a, mid + <span class=\"number\">1</span>, r);</span><br><span class=\"line\">    merge(a, l, mid, r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    mergeSort(a, <span class=\"number\">0</span>, <span class=\"number\">9</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h3><p>快速排序是一种分治算法。它是将一个数组分割成两个子数组，与归并排序不同的是：快速排序保证左边的数组元素都要小于右边的数组元素。</p>\n<p>首先找到一个分割点，一般以数组的第一个元素作为这个分割点，先从左边往右边找。把比这个元素小的都放在左边，比它大的放在右边，然后又从右边往左边找。<br>当两个指针相遇时，我们只需要把该分割点的元素放到该位置即可（分割点）。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">quikSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> <span class=\"built_in\">begin</span>, <span class=\"keyword\">int</span> <span class=\"built_in\">end</span>)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">begin</span> &gt;= <span class=\"built_in\">end</span>)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"built_in\">begin</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"built_in\">end</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> key = a[i];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt; j)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[j] &gt;= key &amp;&amp; j &gt; i)j--;</span><br><span class=\"line\">        a[i] = a[j];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a[i] &lt;= key &amp;&amp; j &gt; i)i++;</span><br><span class=\"line\">        a[j] = a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    a[i] = key;</span><br><span class=\"line\">    quikSort(a, <span class=\"built_in\">begin</span>, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">    quikSort(a, i + <span class=\"number\">1</span>, <span class=\"built_in\">end</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    quikSort(a, <span class=\"number\">0</span>, <span class=\"number\">9</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"堆排序\"><a href=\"#堆排序\" class=\"headerlink\" title=\"堆排序\"></a>堆排序</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 10</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> arr[N+<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shiftUp</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(arr[k/<span class=\"number\">2</span>] &lt; arr[k] &amp;&amp; k &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        swap(arr[k/<span class=\"number\">2</span>], arr[k]);</span><br><span class=\"line\">        k /= <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">int</span> v)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(count + <span class=\"number\">1</span> &gt; N) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    arr[count + <span class=\"number\">1</span>] = v;</span><br><span class=\"line\">    count++;</span><br><span class=\"line\">    shiftUp(count);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shiftDown</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">2</span> * k &lt;= count)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = <span class=\"number\">2</span> * k;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j + <span class=\"number\">1</span> &lt;= count &amp;&amp; arr[j + <span class=\"number\">1</span>] &gt; arr[j])&#123;</span><br><span class=\"line\">            j = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[k] &gt; arr[j])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        swap(arr[j], arr[k]);</span><br><span class=\"line\">        k = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">popMax</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!count) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v = arr[<span class=\"number\">1</span>];</span><br><span class=\"line\">    swap(arr[<span class=\"number\">1</span>], arr[count]);</span><br><span class=\"line\">    count--;</span><br><span class=\"line\">    shiftDown(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">heapSort1</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        insert(a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        a[i] = popMax();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">heapSort2</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        arr[i] = a[i <span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = n/<span class=\"number\">2</span>; i &gt; <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        shiftDown(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    count = n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        a[i] = popMax();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    heapSort2(a, N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; a[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"深度优先搜索和广度优先搜索","date":"2018-03-21T14:45:39.000Z","_content":"\n\n\n### 深度优先搜索\n\n\n```c\n\nvoid dfs(int step){\n    //判断边界\n    //尝试每一种可能\n    for(int i = 1; i <= n; i++){\n        //继续下一步\n        dfs(step + 1);\n    }\n    //返回\n    return;\n}\n\n\n```\n\n\n### 广度优先搜索\n\n\n```c\nvoid bfs(){\n    //声明队列\n    //根节点入队\n    while   // 队列不为空\n            // 获取队头元素\n            // 获取队头元素子孩子\n            // 孩子入队\n            // 队头元素出队\n}\n\n```","source":"_posts/深度优先和广度优先搜索.md","raw":"---\ntitle: 深度优先搜索和广度优先搜索\ndate: 2018-3-21 22:45:39\ncategories:\n  - 数据结构与算法\ntags: \n  - 深度优先搜索\n  - 广度优先搜索\n---\n\n\n\n### 深度优先搜索\n\n\n```c\n\nvoid dfs(int step){\n    //判断边界\n    //尝试每一种可能\n    for(int i = 1; i <= n; i++){\n        //继续下一步\n        dfs(step + 1);\n    }\n    //返回\n    return;\n}\n\n\n```\n\n\n### 广度优先搜索\n\n\n```c\nvoid bfs(){\n    //声明队列\n    //根节点入队\n    while   // 队列不为空\n            // 获取队头元素\n            // 获取队头元素子孩子\n            // 孩子入队\n            // 队头元素出队\n}\n\n```","slug":"深度优先和广度优先搜索","published":1,"updated":"2019-11-24T16:55:04.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdr0000ym7fh3gmt7nob","content":"<h3 id=\"深度优先搜索\"><a href=\"#深度优先搜索\" class=\"headerlink\" title=\"深度优先搜索\"></a>深度优先搜索</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> <span class=\"built_in\">step</span>)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断边界</span></span><br><span class=\"line\">    <span class=\"comment\">//尝试每一种可能</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//继续下一步</span></span><br><span class=\"line\">        dfs(<span class=\"built_in\">step</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"广度优先搜索\"><a href=\"#广度优先搜索\" class=\"headerlink\" title=\"广度优先搜索\"></a>广度优先搜索</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//声明队列</span></span><br><span class=\"line\">    <span class=\"comment\">//根节点入队</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>   <span class=\"comment\">// 队列不为空</span></span><br><span class=\"line\">            <span class=\"comment\">// 获取队头元素</span></span><br><span class=\"line\">            <span class=\"comment\">// 获取队头元素子孩子</span></span><br><span class=\"line\">            <span class=\"comment\">// 孩子入队</span></span><br><span class=\"line\">            <span class=\"comment\">// 队头元素出队</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h3 id=\"深度优先搜索\"><a href=\"#深度优先搜索\" class=\"headerlink\" title=\"深度优先搜索\"></a>深度优先搜索</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> <span class=\"built_in\">step</span>)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断边界</span></span><br><span class=\"line\">    <span class=\"comment\">//尝试每一种可能</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//继续下一步</span></span><br><span class=\"line\">        dfs(<span class=\"built_in\">step</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"广度优先搜索\"><a href=\"#广度优先搜索\" class=\"headerlink\" title=\"广度优先搜索\"></a>广度优先搜索</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//声明队列</span></span><br><span class=\"line\">    <span class=\"comment\">//根节点入队</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>   <span class=\"comment\">// 队列不为空</span></span><br><span class=\"line\">            <span class=\"comment\">// 获取队头元素</span></span><br><span class=\"line\">            <span class=\"comment\">// 获取队头元素子孩子</span></span><br><span class=\"line\">            <span class=\"comment\">// 孩子入队</span></span><br><span class=\"line\">            <span class=\"comment\">// 队头元素出队</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"桂林阳朔两日游","date":"2019-03-10T14:45:39.000Z","_content":"\n\n最近太闷了，所以决定一个人出去走一走。\n\n又不想去太远，所以选择了较近的桂林。\n\n\n\n周五下班后，广州出发，晚上11点到桂林北站，索性在桂林北站附近休息。\n\n第二天约了在桂林念研究生的大学同学在十字街见面。\n\n先步行在日月双塔小逛一会，接着就去象鼻山。\n\n\n![](/img/guiling/1.jpg)\n\n因为象鼻山成人票要55元，而外面吆喝坐船的只需要50，所以最后选择了坐船。\n\n![](/img/guiling/2.jpg)\n\n\n游船说游10坐山，可是7星山就包含了7座山，然后一下子就过了。\n\n\n\n差不多也到了中午，我们选择到附近的十字街先吃一点东西。\n\n\n![](/img/guiling/3.jpg)\n\n\n吃完东西下午听别人推荐的，去了芦笛岩，个人觉得这个比较坑，不推荐去。也许我不喜欢去溶洞里面游玩吧？里面手机信号都没有。\n\n![](/img/guiling/4.jpg)\n\n从芦笛岩出来后，同学推荐了性价比比较高的叠彩山爬。\n\n\n![](/img/guiling/5.jpg)\n\n![](/img/guiling/6.jpg)\n\n![](/img/guiling/7.jpg)\n\n\n![](/img/guiling/8.jpg)\n\n![](/img/guiling/9.jpg)\n\n听说夜景的日夜双塔很漂亮，吃过晚饭后又去日夜双塔逛一逛。\n\n\n![](/img/guiling/10.jpg)\n\n玩了一天，挺开心的。桂林市区基本算是逛完了，在同学的建议下，我决定再去阳朔玩一玩。桂林山水甲天下，阳朔山水甲桂林。\n\n因为我打算周日晚上就回广州。行程挺赶的，所以我就报了一个团。反正也不贵，100来大洋。\n\n\n![](/img/guiling/11.jpg)\n\n\n我报的这个团，一大车的大妈大爷们。感觉自己提前进入了老年生活。\n\n月亮山，摆一个台子就收费拍照，2块2块，赶快上车，这车开往老年活动中心。\n\n![](/img/guiling/12.jpg)\n\n接下来去金水岩，又是进洞。\n\n\n![](/img/guiling/13.jpg)\n\n\n![](/img/guiling/14.jpg)\n\n\n看表演，大妈大爷的数量超乎我的想象。\n\n![](/img/guiling/15.jpg)\n\n\n接下来，作为单身狗的我，接到了阿妹给我抛的绣球，然后，我结婚啦。\n\n![](/img/guiling/16.jpg)\n\n\n![](/img/guiling/17.jpg)\n\n\n![](/img/guiling/18.jpg)\n\n看完表演后，导游带我们去一个他们合作的农庄吃饭，在去的路上推销一些吃的，不过我没有买。因为听了同学的，所以我买了很多零食。\n\n\n\n下午就是去游漓江，20RMB的地方啦。听说竹筏不怎么好玩，所以我选择坐船。\n\n\n![](/img/guiling/19.jpg)\n\n\n![](/img/guiling/20.jpg)\n\n\n![](/img/guiling/21.jpg)\n\n\n![](/img/guiling/22.jpg)\n\n\n最后。游玩漓江后我就和导游说我自己去阳朔站坐高铁。\n\n\n\n看着时间还早，我就把早先买了8点的那趟退了，重新买了下午6点这趟到广州。\n\n\n\n即使是一个人出来游玩，也挺有意思的。\n\n如果你很闷，那么就出去走走吧。\n\n\n\n今天甩甩小哥哥特开心。\n\n\n\nEnd","source":"_posts/桂林阳朔两日游.md","raw":"---\ntitle: 桂林阳朔两日游\ndate: 2019-3-10 22:45:39\ncategories:\n  - 在路上\ntags: \n  - 桂林\n  - 阳朔\n---\n\n\n最近太闷了，所以决定一个人出去走一走。\n\n又不想去太远，所以选择了较近的桂林。\n\n\n\n周五下班后，广州出发，晚上11点到桂林北站，索性在桂林北站附近休息。\n\n第二天约了在桂林念研究生的大学同学在十字街见面。\n\n先步行在日月双塔小逛一会，接着就去象鼻山。\n\n\n![](/img/guiling/1.jpg)\n\n因为象鼻山成人票要55元，而外面吆喝坐船的只需要50，所以最后选择了坐船。\n\n![](/img/guiling/2.jpg)\n\n\n游船说游10坐山，可是7星山就包含了7座山，然后一下子就过了。\n\n\n\n差不多也到了中午，我们选择到附近的十字街先吃一点东西。\n\n\n![](/img/guiling/3.jpg)\n\n\n吃完东西下午听别人推荐的，去了芦笛岩，个人觉得这个比较坑，不推荐去。也许我不喜欢去溶洞里面游玩吧？里面手机信号都没有。\n\n![](/img/guiling/4.jpg)\n\n从芦笛岩出来后，同学推荐了性价比比较高的叠彩山爬。\n\n\n![](/img/guiling/5.jpg)\n\n![](/img/guiling/6.jpg)\n\n![](/img/guiling/7.jpg)\n\n\n![](/img/guiling/8.jpg)\n\n![](/img/guiling/9.jpg)\n\n听说夜景的日夜双塔很漂亮，吃过晚饭后又去日夜双塔逛一逛。\n\n\n![](/img/guiling/10.jpg)\n\n玩了一天，挺开心的。桂林市区基本算是逛完了，在同学的建议下，我决定再去阳朔玩一玩。桂林山水甲天下，阳朔山水甲桂林。\n\n因为我打算周日晚上就回广州。行程挺赶的，所以我就报了一个团。反正也不贵，100来大洋。\n\n\n![](/img/guiling/11.jpg)\n\n\n我报的这个团，一大车的大妈大爷们。感觉自己提前进入了老年生活。\n\n月亮山，摆一个台子就收费拍照，2块2块，赶快上车，这车开往老年活动中心。\n\n![](/img/guiling/12.jpg)\n\n接下来去金水岩，又是进洞。\n\n\n![](/img/guiling/13.jpg)\n\n\n![](/img/guiling/14.jpg)\n\n\n看表演，大妈大爷的数量超乎我的想象。\n\n![](/img/guiling/15.jpg)\n\n\n接下来，作为单身狗的我，接到了阿妹给我抛的绣球，然后，我结婚啦。\n\n![](/img/guiling/16.jpg)\n\n\n![](/img/guiling/17.jpg)\n\n\n![](/img/guiling/18.jpg)\n\n看完表演后，导游带我们去一个他们合作的农庄吃饭，在去的路上推销一些吃的，不过我没有买。因为听了同学的，所以我买了很多零食。\n\n\n\n下午就是去游漓江，20RMB的地方啦。听说竹筏不怎么好玩，所以我选择坐船。\n\n\n![](/img/guiling/19.jpg)\n\n\n![](/img/guiling/20.jpg)\n\n\n![](/img/guiling/21.jpg)\n\n\n![](/img/guiling/22.jpg)\n\n\n最后。游玩漓江后我就和导游说我自己去阳朔站坐高铁。\n\n\n\n看着时间还早，我就把早先买了8点的那趟退了，重新买了下午6点这趟到广州。\n\n\n\n即使是一个人出来游玩，也挺有意思的。\n\n如果你很闷，那么就出去走走吧。\n\n\n\n今天甩甩小哥哥特开心。\n\n\n\nEnd","slug":"桂林阳朔两日游","published":1,"updated":"2019-11-25T03:29:24.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdr10011m7fhfnry4rwy","content":"<p>最近太闷了，所以决定一个人出去走一走。</p>\n<p>又不想去太远，所以选择了较近的桂林。</p>\n<p>周五下班后，广州出发，晚上11点到桂林北站，索性在桂林北站附近休息。</p>\n<p>第二天约了在桂林念研究生的大学同学在十字街见面。</p>\n<p>先步行在日月双塔小逛一会，接着就去象鼻山。</p>\n<p><img src=\"/img/guiling/1.jpg\" alt=\"\"></p>\n<p>因为象鼻山成人票要55元，而外面吆喝坐船的只需要50，所以最后选择了坐船。</p>\n<p><img src=\"/img/guiling/2.jpg\" alt=\"\"></p>\n<p>游船说游10坐山，可是7星山就包含了7座山，然后一下子就过了。</p>\n<p>差不多也到了中午，我们选择到附近的十字街先吃一点东西。</p>\n<p><img src=\"/img/guiling/3.jpg\" alt=\"\"></p>\n<p>吃完东西下午听别人推荐的，去了芦笛岩，个人觉得这个比较坑，不推荐去。也许我不喜欢去溶洞里面游玩吧？里面手机信号都没有。</p>\n<p><img src=\"/img/guiling/4.jpg\" alt=\"\"></p>\n<p>从芦笛岩出来后，同学推荐了性价比比较高的叠彩山爬。</p>\n<p><img src=\"/img/guiling/5.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/6.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/7.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/8.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/9.jpg\" alt=\"\"></p>\n<p>听说夜景的日夜双塔很漂亮，吃过晚饭后又去日夜双塔逛一逛。</p>\n<p><img src=\"/img/guiling/10.jpg\" alt=\"\"></p>\n<p>玩了一天，挺开心的。桂林市区基本算是逛完了，在同学的建议下，我决定再去阳朔玩一玩。桂林山水甲天下，阳朔山水甲桂林。</p>\n<p>因为我打算周日晚上就回广州。行程挺赶的，所以我就报了一个团。反正也不贵，100来大洋。</p>\n<p><img src=\"/img/guiling/11.jpg\" alt=\"\"></p>\n<p>我报的这个团，一大车的大妈大爷们。感觉自己提前进入了老年生活。</p>\n<p>月亮山，摆一个台子就收费拍照，2块2块，赶快上车，这车开往老年活动中心。</p>\n<p><img src=\"/img/guiling/12.jpg\" alt=\"\"></p>\n<p>接下来去金水岩，又是进洞。</p>\n<p><img src=\"/img/guiling/13.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/14.jpg\" alt=\"\"></p>\n<p>看表演，大妈大爷的数量超乎我的想象。</p>\n<p><img src=\"/img/guiling/15.jpg\" alt=\"\"></p>\n<p>接下来，作为单身狗的我，接到了阿妹给我抛的绣球，然后，我结婚啦。</p>\n<p><img src=\"/img/guiling/16.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/17.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/18.jpg\" alt=\"\"></p>\n<p>看完表演后，导游带我们去一个他们合作的农庄吃饭，在去的路上推销一些吃的，不过我没有买。因为听了同学的，所以我买了很多零食。</p>\n<p>下午就是去游漓江，20RMB的地方啦。听说竹筏不怎么好玩，所以我选择坐船。</p>\n<p><img src=\"/img/guiling/19.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/20.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/21.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/22.jpg\" alt=\"\"></p>\n<p>最后。游玩漓江后我就和导游说我自己去阳朔站坐高铁。</p>\n<p>看着时间还早，我就把早先买了8点的那趟退了，重新买了下午6点这趟到广州。</p>\n<p>即使是一个人出来游玩，也挺有意思的。</p>\n<p>如果你很闷，那么就出去走走吧。</p>\n<p>今天甩甩小哥哥特开心。</p>\n<p>End</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p>最近太闷了，所以决定一个人出去走一走。</p>\n<p>又不想去太远，所以选择了较近的桂林。</p>\n<p>周五下班后，广州出发，晚上11点到桂林北站，索性在桂林北站附近休息。</p>\n<p>第二天约了在桂林念研究生的大学同学在十字街见面。</p>\n<p>先步行在日月双塔小逛一会，接着就去象鼻山。</p>\n<p><img src=\"/img/guiling/1.jpg\" alt=\"\"></p>\n<p>因为象鼻山成人票要55元，而外面吆喝坐船的只需要50，所以最后选择了坐船。</p>\n<p><img src=\"/img/guiling/2.jpg\" alt=\"\"></p>\n<p>游船说游10坐山，可是7星山就包含了7座山，然后一下子就过了。</p>\n<p>差不多也到了中午，我们选择到附近的十字街先吃一点东西。</p>\n<p><img src=\"/img/guiling/3.jpg\" alt=\"\"></p>\n<p>吃完东西下午听别人推荐的，去了芦笛岩，个人觉得这个比较坑，不推荐去。也许我不喜欢去溶洞里面游玩吧？里面手机信号都没有。</p>\n<p><img src=\"/img/guiling/4.jpg\" alt=\"\"></p>\n<p>从芦笛岩出来后，同学推荐了性价比比较高的叠彩山爬。</p>\n<p><img src=\"/img/guiling/5.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/6.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/7.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/8.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/9.jpg\" alt=\"\"></p>\n<p>听说夜景的日夜双塔很漂亮，吃过晚饭后又去日夜双塔逛一逛。</p>\n<p><img src=\"/img/guiling/10.jpg\" alt=\"\"></p>\n<p>玩了一天，挺开心的。桂林市区基本算是逛完了，在同学的建议下，我决定再去阳朔玩一玩。桂林山水甲天下，阳朔山水甲桂林。</p>\n<p>因为我打算周日晚上就回广州。行程挺赶的，所以我就报了一个团。反正也不贵，100来大洋。</p>\n<p><img src=\"/img/guiling/11.jpg\" alt=\"\"></p>\n<p>我报的这个团，一大车的大妈大爷们。感觉自己提前进入了老年生活。</p>\n<p>月亮山，摆一个台子就收费拍照，2块2块，赶快上车，这车开往老年活动中心。</p>\n<p><img src=\"/img/guiling/12.jpg\" alt=\"\"></p>\n<p>接下来去金水岩，又是进洞。</p>\n<p><img src=\"/img/guiling/13.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/14.jpg\" alt=\"\"></p>\n<p>看表演，大妈大爷的数量超乎我的想象。</p>\n<p><img src=\"/img/guiling/15.jpg\" alt=\"\"></p>\n<p>接下来，作为单身狗的我，接到了阿妹给我抛的绣球，然后，我结婚啦。</p>\n<p><img src=\"/img/guiling/16.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/17.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/18.jpg\" alt=\"\"></p>\n<p>看完表演后，导游带我们去一个他们合作的农庄吃饭，在去的路上推销一些吃的，不过我没有买。因为听了同学的，所以我买了很多零食。</p>\n<p>下午就是去游漓江，20RMB的地方啦。听说竹筏不怎么好玩，所以我选择坐船。</p>\n<p><img src=\"/img/guiling/19.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/20.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/21.jpg\" alt=\"\"></p>\n<p><img src=\"/img/guiling/22.jpg\" alt=\"\"></p>\n<p>最后。游玩漓江后我就和导游说我自己去阳朔站坐高铁。</p>\n<p>看着时间还早，我就把早先买了8点的那趟退了，重新买了下午6点这趟到广州。</p>\n<p>即使是一个人出来游玩，也挺有意思的。</p>\n<p>如果你很闷，那么就出去走走吧。</p>\n<p>今天甩甩小哥哥特开心。</p>\n<p>End</p>\n"},{"title":"源码构建emqx以及其第三方插件","date":"2019-09-29T14:45:39.000Z","_content":"\n## 源码构建emqx以及其第三方插件\n\n\n\n要想编译emqx以及其第三方插件，使用[emqx-rel](<https://github.com/emqx/emqx-rel>) 这个项目来构建。官方写的还是比较明白，对于没有重来都没有接触过Erlang的小伙伴来说可能会遇到一些问题。\n\n#### 首先，源码安装最新版的Erlang和rebar3\n\n\n\nlinux 查看 [Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3](Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3.md)  这篇文章\n\nmac 查看 <https://www.jianshu.com/p/efeced0cf8f7>  这篇文章\n\n\n\n因为需要openssl 依赖，不是源码安装可能没有，到时候编译的时候可能会通过，运行时可能会报错。所以，这里还是选择源码安装Erlang，把依赖手工加上。\n\n\n\n#### 源码构建emqx\n\n\n\n$ git clone https://github.com/emqx/emqx-rel.git\n\n$ cd emqx-rel \n\n$ make\n\n\n\n第一次构建，rebar3 会帮我们去下载依赖。它使用的是git，所以，电脑上必须的装有 **git**，而且可以正常 clone github上的项目。\n\n\n\n启动 emqx\n\n$ _build/emqx/rel/emqx/bin/emqx start\n\n停止 emqx\n\n$ _build/emqx/rel/emqx/bin/emqx stop\n\n\n\n\n\n#### 编译第三方插件\n\n如果你可以源码正确构建 emqx，那么构建第三方插件 应该很简单才对。\n\n\n\n你可以试着 根据  <https://github.com/luxingwen/emqx-mysql>  上所写的文档来构建 emqx-mysql 这个插件。\n\n\n\n  ### 最后\n\n\n\n我使用的是 Ubuntu。若你在构建emqx 及其 第三方插件时还有 疑问，请在https://github.com/luxingwen/learning-erlang 提交issue上与我联系，交流。\n\n","source":"_posts/源码构建emqx以及其第三方插件.md","raw":"---\ntitle: 源码构建emqx以及其第三方插件\ndate: 2019-9-29 22:45:39\ncategories:\n  - Erlang\ntags: erlang\n---\n\n## 源码构建emqx以及其第三方插件\n\n\n\n要想编译emqx以及其第三方插件，使用[emqx-rel](<https://github.com/emqx/emqx-rel>) 这个项目来构建。官方写的还是比较明白，对于没有重来都没有接触过Erlang的小伙伴来说可能会遇到一些问题。\n\n#### 首先，源码安装最新版的Erlang和rebar3\n\n\n\nlinux 查看 [Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3](Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3.md)  这篇文章\n\nmac 查看 <https://www.jianshu.com/p/efeced0cf8f7>  这篇文章\n\n\n\n因为需要openssl 依赖，不是源码安装可能没有，到时候编译的时候可能会通过，运行时可能会报错。所以，这里还是选择源码安装Erlang，把依赖手工加上。\n\n\n\n#### 源码构建emqx\n\n\n\n$ git clone https://github.com/emqx/emqx-rel.git\n\n$ cd emqx-rel \n\n$ make\n\n\n\n第一次构建，rebar3 会帮我们去下载依赖。它使用的是git，所以，电脑上必须的装有 **git**，而且可以正常 clone github上的项目。\n\n\n\n启动 emqx\n\n$ _build/emqx/rel/emqx/bin/emqx start\n\n停止 emqx\n\n$ _build/emqx/rel/emqx/bin/emqx stop\n\n\n\n\n\n#### 编译第三方插件\n\n如果你可以源码正确构建 emqx，那么构建第三方插件 应该很简单才对。\n\n\n\n你可以试着 根据  <https://github.com/luxingwen/emqx-mysql>  上所写的文档来构建 emqx-mysql 这个插件。\n\n\n\n  ### 最后\n\n\n\n我使用的是 Ubuntu。若你在构建emqx 及其 第三方插件时还有 疑问，请在https://github.com/luxingwen/learning-erlang 提交issue上与我联系，交流。\n\n","slug":"源码构建emqx以及其第三方插件","published":1,"updated":"2019-11-25T03:52:38.767Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdr20015m7fh7x9j943r","content":"<h2 id=\"源码构建emqx以及其第三方插件\"><a href=\"#源码构建emqx以及其第三方插件\" class=\"headerlink\" title=\"源码构建emqx以及其第三方插件\"></a>源码构建emqx以及其第三方插件</h2><p>要想编译emqx以及其第三方插件，使用<a href=\"https://github.com/emqx/emqx-rel\" target=\"_blank\" rel=\"noopener\">emqx-rel</a> 这个项目来构建。官方写的还是比较明白，对于没有重来都没有接触过Erlang的小伙伴来说可能会遇到一些问题。</p>\n<h4 id=\"首先，源码安装最新版的Erlang和rebar3\"><a href=\"#首先，源码安装最新版的Erlang和rebar3\" class=\"headerlink\" title=\"首先，源码安装最新版的Erlang和rebar3\"></a>首先，源码安装最新版的Erlang和rebar3</h4><p>linux 查看 <a href=\"Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3.md\">Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3</a>  这篇文章</p>\n<p>mac 查看 <a href=\"https://www.jianshu.com/p/efeced0cf8f7\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/efeced0cf8f7</a>  这篇文章</p>\n<p>因为需要openssl 依赖，不是源码安装可能没有，到时候编译的时候可能会通过，运行时可能会报错。所以，这里还是选择源码安装Erlang，把依赖手工加上。</p>\n<h4 id=\"源码构建emqx\"><a href=\"#源码构建emqx\" class=\"headerlink\" title=\"源码构建emqx\"></a>源码构建emqx</h4><p>$ git clone <a href=\"https://github.com/emqx/emqx-rel.git\" target=\"_blank\" rel=\"noopener\">https://github.com/emqx/emqx-rel.git</a></p>\n<p>$ cd emqx-rel </p>\n<p>$ make</p>\n<p>第一次构建，rebar3 会帮我们去下载依赖。它使用的是git，所以，电脑上必须的装有 <strong>git</strong>，而且可以正常 clone github上的项目。</p>\n<p>启动 emqx</p>\n<p>$ _build/emqx/rel/emqx/bin/emqx start</p>\n<p>停止 emqx</p>\n<p>$ _build/emqx/rel/emqx/bin/emqx stop</p>\n<h4 id=\"编译第三方插件\"><a href=\"#编译第三方插件\" class=\"headerlink\" title=\"编译第三方插件\"></a>编译第三方插件</h4><p>如果你可以源码正确构建 emqx，那么构建第三方插件 应该很简单才对。</p>\n<p>你可以试着 根据  <a href=\"https://github.com/luxingwen/emqx-mysql\" target=\"_blank\" rel=\"noopener\">https://github.com/luxingwen/emqx-mysql</a>  上所写的文档来构建 emqx-mysql 这个插件。</p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>我使用的是 Ubuntu。若你在构建emqx 及其 第三方插件时还有 疑问，请在<a href=\"https://github.com/luxingwen/learning-erlang\" target=\"_blank\" rel=\"noopener\">https://github.com/luxingwen/learning-erlang</a> 提交issue上与我联系，交流。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<h2 id=\"源码构建emqx以及其第三方插件\"><a href=\"#源码构建emqx以及其第三方插件\" class=\"headerlink\" title=\"源码构建emqx以及其第三方插件\"></a>源码构建emqx以及其第三方插件</h2><p>要想编译emqx以及其第三方插件，使用<a href=\"https://github.com/emqx/emqx-rel\" target=\"_blank\" rel=\"noopener\">emqx-rel</a> 这个项目来构建。官方写的还是比较明白，对于没有重来都没有接触过Erlang的小伙伴来说可能会遇到一些问题。</p>\n<h4 id=\"首先，源码安装最新版的Erlang和rebar3\"><a href=\"#首先，源码安装最新版的Erlang和rebar3\" class=\"headerlink\" title=\"首先，源码安装最新版的Erlang和rebar3\"></a>首先，源码安装最新版的Erlang和rebar3</h4><p>linux 查看 <a href=\"Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3.md\">Linux源码安装Erlang-添加OpenSSL依赖,安装rebar3</a>  这篇文章</p>\n<p>mac 查看 <a href=\"https://www.jianshu.com/p/efeced0cf8f7\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/efeced0cf8f7</a>  这篇文章</p>\n<p>因为需要openssl 依赖，不是源码安装可能没有，到时候编译的时候可能会通过，运行时可能会报错。所以，这里还是选择源码安装Erlang，把依赖手工加上。</p>\n<h4 id=\"源码构建emqx\"><a href=\"#源码构建emqx\" class=\"headerlink\" title=\"源码构建emqx\"></a>源码构建emqx</h4><p>$ git clone <a href=\"https://github.com/emqx/emqx-rel.git\" target=\"_blank\" rel=\"noopener\">https://github.com/emqx/emqx-rel.git</a></p>\n<p>$ cd emqx-rel </p>\n<p>$ make</p>\n<p>第一次构建，rebar3 会帮我们去下载依赖。它使用的是git，所以，电脑上必须的装有 <strong>git</strong>，而且可以正常 clone github上的项目。</p>\n<p>启动 emqx</p>\n<p>$ _build/emqx/rel/emqx/bin/emqx start</p>\n<p>停止 emqx</p>\n<p>$ _build/emqx/rel/emqx/bin/emqx stop</p>\n<h4 id=\"编译第三方插件\"><a href=\"#编译第三方插件\" class=\"headerlink\" title=\"编译第三方插件\"></a>编译第三方插件</h4><p>如果你可以源码正确构建 emqx，那么构建第三方插件 应该很简单才对。</p>\n<p>你可以试着 根据  <a href=\"https://github.com/luxingwen/emqx-mysql\" target=\"_blank\" rel=\"noopener\">https://github.com/luxingwen/emqx-mysql</a>  上所写的文档来构建 emqx-mysql 这个插件。</p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>我使用的是 Ubuntu。若你在构建emqx 及其 第三方插件时还有 疑问，请在<a href=\"https://github.com/luxingwen/learning-erlang\" target=\"_blank\" rel=\"noopener\">https://github.com/luxingwen/learning-erlang</a> 提交issue上与我联系，交流。</p>\n"},{"title":"玩在广州","date":"2018-09-29T14:45:39.000Z","_content":"\n\n不知不觉，已经在广州工作两年多。\n\n>   广州有啥好玩的地方呢？\n大部分广州人都会回答你说：没啥好玩的。呆久了，我也会产生这种感觉。\n回想起来，广州还是有挺多好玩的地方的。\n\n\n如果你来广州，我会带你去中山纪念堂逛一逛，虽然没啥好看的，但孙中山作为我国近代民族主义的开括者，还是值得一去吧。\n\n随后带你去石圣心大教堂坐一坐。\n\n![石圣心大教堂.png](/img/guangzhou/shishengxindajiaotang.jpeg)\n\n\n接着去沙面溜一圈，沙面乃以前的租界，由英国人一手建造而成。\n\n从沙面出来直接坐水巴到中大港口，水巴和公交车一样，两块钱就能坐。\n\n![水巴.png](/img/guangzhou/shuiba.jpeg)\n\n\n然后去中大校园溜达溜达，中大老校区有着许多古老的建筑物到现在依旧保存着。\n\n从中大出来在继续坐船到广州塔。\n\n广州塔由称小蛮腰，乃亚洲第一高塔。\n\n![广州塔.png](/img/guangzhou/guangzhou-ta.jpeg)\n\n\n在广州塔隔江对面就是广州市中心、CDB、珠江新城。\n\n![珠江新城.png](/img/guangzhou/guangzhou-cbd.jpeg)\n\n\n从广州塔下乘坐有鬼（轨）电车到万胜围，途中经过会展中心。也可以进去逛逛（虽然到目前为止我还没有去过）。\n\n![有鬼电车.png](/img/guangzhou/youguidianche.jpeg)\n\n\n万胜围（广州地铁博物馆）。\n\n![广州地铁博物馆.png](/img/guangzhou/guangzhou-ditie.jpeg)\n\n\n继续搭乘有鬼电车到广州塔。晚上的话可以在琶醍下车，琶醍有很多酒吧，可以到里面喝上几杯。\n\n广州塔港买船票，夜游珠江，广州的夜景非常的漂亮。\n\n![珠江新城.png](/img/guangzhou/guangzhou-cbd2.jpeg)\n\n\n在广州塔搭乘APM（无人自动驾驶列车）到海心沙。\n\n海心沙是广州举办亚运会的地方，现在上面有许多餐厅，很有情调。\n\n![小蛮腰.png](/img/guangzhou/guangzhou-ta2.jpeg)\n\n\n随后在花城广场转一转。广州图书馆趁一下Wi-Fi，广图的Wi-Fi速度非常快，我经常去趁。\n\n![珠江新城.png](/img/guangzhou/guangzhou-cbd3.jpeg)\n\n\n猎德大桥上走一走？我觉得猎德大桥是广州最帅的桥，我每天上班都要从上面经过，尽管每次都塞车，但是我还是觉得它很帅。\n\n![广州最帅的桥.png](/img/guangzhou/guangzhou-liede.jpeg)\n\n\n去黄沙这个免费的水族管看海洋生物，顺便大吃一顿。\n\n![海鲜.png](/img/guangzhou/haixian-1.jpg)\n\n\nTIT创意园走一圈？ 微信总部就在此。不去看一看？\n\n![tit.png](/img/guangzhou/guangzhou-tit.jpg)\n\n\n红砖厂，你也许觉得它很破，不过它确实很破。\n\n![红砖厂.png](/img/guangzhou/guangzhou-hongzhuanchang.jpeg)\n\n\n骑着自行车。绕着大学城岛逛一圈，广州名校基本集聚于此。\n\n![天河二号.png](/img/guangzhou/guangzhou-zhongda.jpeg)\n\n![中大校园.png](/img/guangzhou/guangzhou-zhongda1.jpeg)\n\n\n可以到黄埔军校参观一下，很多名将从这里出身，周围的风景也挺不错。\n\n节假日的话，去岭南印象园体验岭南乡土风情和岭南民俗文化。有表演，当然人也挺多。\n\n爬山爱好者的话，可以到白云山玩一玩。\n\n![白云山.png](/img/guangzhou/guangzhou-baiyunsan.jpeg)\n\n\n游乐场-》长隆欢乐世界，到现在我都还木有去过呢，应该挺好玩的。\n\n沙湾古镇，宝墨园，这两个去过一次，还好，就是有点远。\n\n有时间的话可以跑到广州的最南端南沙。可以吃到较便宜的海鲜（相对市区来说），到南沙客运港看一看，可以从那里坐船到世界各地的。这里也是珠江的入海口，对大海有很大期望的建议还是先别来了。\n\n\n#### 购物\n\n我觉得，广州就是女生的购物天堂啊。专门为女生设计的一般...\n\n\n\n\n带你去体育中心、体育西逛一圈。天环广场Apple store里面免费玩下最新款的苹果全家桶。\n\n![体育中心.png](/img/guangzhou/guangzhou-tiyuxi.jpeg)\n\n太古汇看名牌。土豪的你在里面买上几个lv包也挺不错，顺便我也沾沾光，毕竟我每天上下班在门口走来走去也未曾进去逛过。\n\n![太古汇.png](/img/guangzhou/guangzhou-taiguhui.jpeg)\n\n\n还不够的话，再去上下九溜达一圈。\n\n还在不行？自己溜达去吧。腿都要走断了...\n\n\n\n### 最后\n\n留下来体验下上下班高峰的广州地铁，特别是3号线和5号线。\n\n![胖子挤地铁.png](/img/guangzhou/pangzi.png)\n\n\n\n以上就是不怎么靠谱广州旅游推荐。\n\n漂亮的广州，等待最美的你。","source":"_posts/玩在广州.md","raw":"---\ntitle: 玩在广州\ndate: 2018-9-29 22:45:39\ncategories:\n  - 在路上\ntags: \n  - 广州\n---\n\n\n不知不觉，已经在广州工作两年多。\n\n>   广州有啥好玩的地方呢？\n大部分广州人都会回答你说：没啥好玩的。呆久了，我也会产生这种感觉。\n回想起来，广州还是有挺多好玩的地方的。\n\n\n如果你来广州，我会带你去中山纪念堂逛一逛，虽然没啥好看的，但孙中山作为我国近代民族主义的开括者，还是值得一去吧。\n\n随后带你去石圣心大教堂坐一坐。\n\n![石圣心大教堂.png](/img/guangzhou/shishengxindajiaotang.jpeg)\n\n\n接着去沙面溜一圈，沙面乃以前的租界，由英国人一手建造而成。\n\n从沙面出来直接坐水巴到中大港口，水巴和公交车一样，两块钱就能坐。\n\n![水巴.png](/img/guangzhou/shuiba.jpeg)\n\n\n然后去中大校园溜达溜达，中大老校区有着许多古老的建筑物到现在依旧保存着。\n\n从中大出来在继续坐船到广州塔。\n\n广州塔由称小蛮腰，乃亚洲第一高塔。\n\n![广州塔.png](/img/guangzhou/guangzhou-ta.jpeg)\n\n\n在广州塔隔江对面就是广州市中心、CDB、珠江新城。\n\n![珠江新城.png](/img/guangzhou/guangzhou-cbd.jpeg)\n\n\n从广州塔下乘坐有鬼（轨）电车到万胜围，途中经过会展中心。也可以进去逛逛（虽然到目前为止我还没有去过）。\n\n![有鬼电车.png](/img/guangzhou/youguidianche.jpeg)\n\n\n万胜围（广州地铁博物馆）。\n\n![广州地铁博物馆.png](/img/guangzhou/guangzhou-ditie.jpeg)\n\n\n继续搭乘有鬼电车到广州塔。晚上的话可以在琶醍下车，琶醍有很多酒吧，可以到里面喝上几杯。\n\n广州塔港买船票，夜游珠江，广州的夜景非常的漂亮。\n\n![珠江新城.png](/img/guangzhou/guangzhou-cbd2.jpeg)\n\n\n在广州塔搭乘APM（无人自动驾驶列车）到海心沙。\n\n海心沙是广州举办亚运会的地方，现在上面有许多餐厅，很有情调。\n\n![小蛮腰.png](/img/guangzhou/guangzhou-ta2.jpeg)\n\n\n随后在花城广场转一转。广州图书馆趁一下Wi-Fi，广图的Wi-Fi速度非常快，我经常去趁。\n\n![珠江新城.png](/img/guangzhou/guangzhou-cbd3.jpeg)\n\n\n猎德大桥上走一走？我觉得猎德大桥是广州最帅的桥，我每天上班都要从上面经过，尽管每次都塞车，但是我还是觉得它很帅。\n\n![广州最帅的桥.png](/img/guangzhou/guangzhou-liede.jpeg)\n\n\n去黄沙这个免费的水族管看海洋生物，顺便大吃一顿。\n\n![海鲜.png](/img/guangzhou/haixian-1.jpg)\n\n\nTIT创意园走一圈？ 微信总部就在此。不去看一看？\n\n![tit.png](/img/guangzhou/guangzhou-tit.jpg)\n\n\n红砖厂，你也许觉得它很破，不过它确实很破。\n\n![红砖厂.png](/img/guangzhou/guangzhou-hongzhuanchang.jpeg)\n\n\n骑着自行车。绕着大学城岛逛一圈，广州名校基本集聚于此。\n\n![天河二号.png](/img/guangzhou/guangzhou-zhongda.jpeg)\n\n![中大校园.png](/img/guangzhou/guangzhou-zhongda1.jpeg)\n\n\n可以到黄埔军校参观一下，很多名将从这里出身，周围的风景也挺不错。\n\n节假日的话，去岭南印象园体验岭南乡土风情和岭南民俗文化。有表演，当然人也挺多。\n\n爬山爱好者的话，可以到白云山玩一玩。\n\n![白云山.png](/img/guangzhou/guangzhou-baiyunsan.jpeg)\n\n\n游乐场-》长隆欢乐世界，到现在我都还木有去过呢，应该挺好玩的。\n\n沙湾古镇，宝墨园，这两个去过一次，还好，就是有点远。\n\n有时间的话可以跑到广州的最南端南沙。可以吃到较便宜的海鲜（相对市区来说），到南沙客运港看一看，可以从那里坐船到世界各地的。这里也是珠江的入海口，对大海有很大期望的建议还是先别来了。\n\n\n#### 购物\n\n我觉得，广州就是女生的购物天堂啊。专门为女生设计的一般...\n\n\n\n\n带你去体育中心、体育西逛一圈。天环广场Apple store里面免费玩下最新款的苹果全家桶。\n\n![体育中心.png](/img/guangzhou/guangzhou-tiyuxi.jpeg)\n\n太古汇看名牌。土豪的你在里面买上几个lv包也挺不错，顺便我也沾沾光，毕竟我每天上下班在门口走来走去也未曾进去逛过。\n\n![太古汇.png](/img/guangzhou/guangzhou-taiguhui.jpeg)\n\n\n还不够的话，再去上下九溜达一圈。\n\n还在不行？自己溜达去吧。腿都要走断了...\n\n\n\n### 最后\n\n留下来体验下上下班高峰的广州地铁，特别是3号线和5号线。\n\n![胖子挤地铁.png](/img/guangzhou/pangzi.png)\n\n\n\n以上就是不怎么靠谱广州旅游推荐。\n\n漂亮的广州，等待最美的你。","slug":"玩在广州","published":1,"updated":"2019-11-25T03:21:06.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdr30019m7fhaj3ka9y7","content":"<p>不知不觉，已经在广州工作两年多。</p>\n<blockquote>\n<p>  广州有啥好玩的地方呢？<br>大部分广州人都会回答你说：没啥好玩的。呆久了，我也会产生这种感觉。<br>回想起来，广州还是有挺多好玩的地方的。</p>\n</blockquote>\n<p>如果你来广州，我会带你去中山纪念堂逛一逛，虽然没啥好看的，但孙中山作为我国近代民族主义的开括者，还是值得一去吧。</p>\n<p>随后带你去石圣心大教堂坐一坐。</p>\n<p><img src=\"/img/guangzhou/shishengxindajiaotang.jpeg\" alt=\"石圣心大教堂.png\"></p>\n<p>接着去沙面溜一圈，沙面乃以前的租界，由英国人一手建造而成。</p>\n<p>从沙面出来直接坐水巴到中大港口，水巴和公交车一样，两块钱就能坐。</p>\n<p><img src=\"/img/guangzhou/shuiba.jpeg\" alt=\"水巴.png\"></p>\n<p>然后去中大校园溜达溜达，中大老校区有着许多古老的建筑物到现在依旧保存着。</p>\n<p>从中大出来在继续坐船到广州塔。</p>\n<p>广州塔由称小蛮腰，乃亚洲第一高塔。</p>\n<p><img src=\"/img/guangzhou/guangzhou-ta.jpeg\" alt=\"广州塔.png\"></p>\n<p>在广州塔隔江对面就是广州市中心、CDB、珠江新城。</p>\n<p><img src=\"/img/guangzhou/guangzhou-cbd.jpeg\" alt=\"珠江新城.png\"></p>\n<p>从广州塔下乘坐有鬼（轨）电车到万胜围，途中经过会展中心。也可以进去逛逛（虽然到目前为止我还没有去过）。</p>\n<p><img src=\"/img/guangzhou/youguidianche.jpeg\" alt=\"有鬼电车.png\"></p>\n<p>万胜围（广州地铁博物馆）。</p>\n<p><img src=\"/img/guangzhou/guangzhou-ditie.jpeg\" alt=\"广州地铁博物馆.png\"></p>\n<p>继续搭乘有鬼电车到广州塔。晚上的话可以在琶醍下车，琶醍有很多酒吧，可以到里面喝上几杯。</p>\n<p>广州塔港买船票，夜游珠江，广州的夜景非常的漂亮。</p>\n<p><img src=\"/img/guangzhou/guangzhou-cbd2.jpeg\" alt=\"珠江新城.png\"></p>\n<p>在广州塔搭乘APM（无人自动驾驶列车）到海心沙。</p>\n<p>海心沙是广州举办亚运会的地方，现在上面有许多餐厅，很有情调。</p>\n<p><img src=\"/img/guangzhou/guangzhou-ta2.jpeg\" alt=\"小蛮腰.png\"></p>\n<p>随后在花城广场转一转。广州图书馆趁一下Wi-Fi，广图的Wi-Fi速度非常快，我经常去趁。</p>\n<p><img src=\"/img/guangzhou/guangzhou-cbd3.jpeg\" alt=\"珠江新城.png\"></p>\n<p>猎德大桥上走一走？我觉得猎德大桥是广州最帅的桥，我每天上班都要从上面经过，尽管每次都塞车，但是我还是觉得它很帅。</p>\n<p><img src=\"/img/guangzhou/guangzhou-liede.jpeg\" alt=\"广州最帅的桥.png\"></p>\n<p>去黄沙这个免费的水族管看海洋生物，顺便大吃一顿。</p>\n<p><img src=\"/img/guangzhou/haixian-1.jpg\" alt=\"海鲜.png\"></p>\n<p>TIT创意园走一圈？ 微信总部就在此。不去看一看？</p>\n<p><img src=\"/img/guangzhou/guangzhou-tit.jpg\" alt=\"tit.png\"></p>\n<p>红砖厂，你也许觉得它很破，不过它确实很破。</p>\n<p><img src=\"/img/guangzhou/guangzhou-hongzhuanchang.jpeg\" alt=\"红砖厂.png\"></p>\n<p>骑着自行车。绕着大学城岛逛一圈，广州名校基本集聚于此。</p>\n<p><img src=\"/img/guangzhou/guangzhou-zhongda.jpeg\" alt=\"天河二号.png\"></p>\n<p><img src=\"/img/guangzhou/guangzhou-zhongda1.jpeg\" alt=\"中大校园.png\"></p>\n<p>可以到黄埔军校参观一下，很多名将从这里出身，周围的风景也挺不错。</p>\n<p>节假日的话，去岭南印象园体验岭南乡土风情和岭南民俗文化。有表演，当然人也挺多。</p>\n<p>爬山爱好者的话，可以到白云山玩一玩。</p>\n<p><img src=\"/img/guangzhou/guangzhou-baiyunsan.jpeg\" alt=\"白云山.png\"></p>\n<p>游乐场-》长隆欢乐世界，到现在我都还木有去过呢，应该挺好玩的。</p>\n<p>沙湾古镇，宝墨园，这两个去过一次，还好，就是有点远。</p>\n<p>有时间的话可以跑到广州的最南端南沙。可以吃到较便宜的海鲜（相对市区来说），到南沙客运港看一看，可以从那里坐船到世界各地的。这里也是珠江的入海口，对大海有很大期望的建议还是先别来了。</p>\n<h4 id=\"购物\"><a href=\"#购物\" class=\"headerlink\" title=\"购物\"></a>购物</h4><p>我觉得，广州就是女生的购物天堂啊。专门为女生设计的一般…</p>\n<p>带你去体育中心、体育西逛一圈。天环广场Apple store里面免费玩下最新款的苹果全家桶。</p>\n<p><img src=\"/img/guangzhou/guangzhou-tiyuxi.jpeg\" alt=\"体育中心.png\"></p>\n<p>太古汇看名牌。土豪的你在里面买上几个lv包也挺不错，顺便我也沾沾光，毕竟我每天上下班在门口走来走去也未曾进去逛过。</p>\n<p><img src=\"/img/guangzhou/guangzhou-taiguhui.jpeg\" alt=\"太古汇.png\"></p>\n<p>还不够的话，再去上下九溜达一圈。</p>\n<p>还在不行？自己溜达去吧。腿都要走断了…</p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>留下来体验下上下班高峰的广州地铁，特别是3号线和5号线。</p>\n<p><img src=\"/img/guangzhou/pangzi.png\" alt=\"胖子挤地铁.png\"></p>\n<p>以上就是不怎么靠谱广州旅游推荐。</p>\n<p>漂亮的广州，等待最美的你。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p>不知不觉，已经在广州工作两年多。</p>\n<blockquote>\n<p>  广州有啥好玩的地方呢？<br>大部分广州人都会回答你说：没啥好玩的。呆久了，我也会产生这种感觉。<br>回想起来，广州还是有挺多好玩的地方的。</p>\n</blockquote>\n<p>如果你来广州，我会带你去中山纪念堂逛一逛，虽然没啥好看的，但孙中山作为我国近代民族主义的开括者，还是值得一去吧。</p>\n<p>随后带你去石圣心大教堂坐一坐。</p>\n<p><img src=\"/img/guangzhou/shishengxindajiaotang.jpeg\" alt=\"石圣心大教堂.png\"></p>\n<p>接着去沙面溜一圈，沙面乃以前的租界，由英国人一手建造而成。</p>\n<p>从沙面出来直接坐水巴到中大港口，水巴和公交车一样，两块钱就能坐。</p>\n<p><img src=\"/img/guangzhou/shuiba.jpeg\" alt=\"水巴.png\"></p>\n<p>然后去中大校园溜达溜达，中大老校区有着许多古老的建筑物到现在依旧保存着。</p>\n<p>从中大出来在继续坐船到广州塔。</p>\n<p>广州塔由称小蛮腰，乃亚洲第一高塔。</p>\n<p><img src=\"/img/guangzhou/guangzhou-ta.jpeg\" alt=\"广州塔.png\"></p>\n<p>在广州塔隔江对面就是广州市中心、CDB、珠江新城。</p>\n<p><img src=\"/img/guangzhou/guangzhou-cbd.jpeg\" alt=\"珠江新城.png\"></p>\n<p>从广州塔下乘坐有鬼（轨）电车到万胜围，途中经过会展中心。也可以进去逛逛（虽然到目前为止我还没有去过）。</p>\n<p><img src=\"/img/guangzhou/youguidianche.jpeg\" alt=\"有鬼电车.png\"></p>\n<p>万胜围（广州地铁博物馆）。</p>\n<p><img src=\"/img/guangzhou/guangzhou-ditie.jpeg\" alt=\"广州地铁博物馆.png\"></p>\n<p>继续搭乘有鬼电车到广州塔。晚上的话可以在琶醍下车，琶醍有很多酒吧，可以到里面喝上几杯。</p>\n<p>广州塔港买船票，夜游珠江，广州的夜景非常的漂亮。</p>\n<p><img src=\"/img/guangzhou/guangzhou-cbd2.jpeg\" alt=\"珠江新城.png\"></p>\n<p>在广州塔搭乘APM（无人自动驾驶列车）到海心沙。</p>\n<p>海心沙是广州举办亚运会的地方，现在上面有许多餐厅，很有情调。</p>\n<p><img src=\"/img/guangzhou/guangzhou-ta2.jpeg\" alt=\"小蛮腰.png\"></p>\n<p>随后在花城广场转一转。广州图书馆趁一下Wi-Fi，广图的Wi-Fi速度非常快，我经常去趁。</p>\n<p><img src=\"/img/guangzhou/guangzhou-cbd3.jpeg\" alt=\"珠江新城.png\"></p>\n<p>猎德大桥上走一走？我觉得猎德大桥是广州最帅的桥，我每天上班都要从上面经过，尽管每次都塞车，但是我还是觉得它很帅。</p>\n<p><img src=\"/img/guangzhou/guangzhou-liede.jpeg\" alt=\"广州最帅的桥.png\"></p>\n<p>去黄沙这个免费的水族管看海洋生物，顺便大吃一顿。</p>\n<p><img src=\"/img/guangzhou/haixian-1.jpg\" alt=\"海鲜.png\"></p>\n<p>TIT创意园走一圈？ 微信总部就在此。不去看一看？</p>\n<p><img src=\"/img/guangzhou/guangzhou-tit.jpg\" alt=\"tit.png\"></p>\n<p>红砖厂，你也许觉得它很破，不过它确实很破。</p>\n<p><img src=\"/img/guangzhou/guangzhou-hongzhuanchang.jpeg\" alt=\"红砖厂.png\"></p>\n<p>骑着自行车。绕着大学城岛逛一圈，广州名校基本集聚于此。</p>\n<p><img src=\"/img/guangzhou/guangzhou-zhongda.jpeg\" alt=\"天河二号.png\"></p>\n<p><img src=\"/img/guangzhou/guangzhou-zhongda1.jpeg\" alt=\"中大校园.png\"></p>\n<p>可以到黄埔军校参观一下，很多名将从这里出身，周围的风景也挺不错。</p>\n<p>节假日的话，去岭南印象园体验岭南乡土风情和岭南民俗文化。有表演，当然人也挺多。</p>\n<p>爬山爱好者的话，可以到白云山玩一玩。</p>\n<p><img src=\"/img/guangzhou/guangzhou-baiyunsan.jpeg\" alt=\"白云山.png\"></p>\n<p>游乐场-》长隆欢乐世界，到现在我都还木有去过呢，应该挺好玩的。</p>\n<p>沙湾古镇，宝墨园，这两个去过一次，还好，就是有点远。</p>\n<p>有时间的话可以跑到广州的最南端南沙。可以吃到较便宜的海鲜（相对市区来说），到南沙客运港看一看，可以从那里坐船到世界各地的。这里也是珠江的入海口，对大海有很大期望的建议还是先别来了。</p>\n<h4 id=\"购物\"><a href=\"#购物\" class=\"headerlink\" title=\"购物\"></a>购物</h4><p>我觉得，广州就是女生的购物天堂啊。专门为女生设计的一般…</p>\n<p>带你去体育中心、体育西逛一圈。天环广场Apple store里面免费玩下最新款的苹果全家桶。</p>\n<p><img src=\"/img/guangzhou/guangzhou-tiyuxi.jpeg\" alt=\"体育中心.png\"></p>\n<p>太古汇看名牌。土豪的你在里面买上几个lv包也挺不错，顺便我也沾沾光，毕竟我每天上下班在门口走来走去也未曾进去逛过。</p>\n<p><img src=\"/img/guangzhou/guangzhou-taiguhui.jpeg\" alt=\"太古汇.png\"></p>\n<p>还不够的话，再去上下九溜达一圈。</p>\n<p>还在不行？自己溜达去吧。腿都要走断了…</p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>留下来体验下上下班高峰的广州地铁，特别是3号线和5号线。</p>\n<p><img src=\"/img/guangzhou/pangzi.png\" alt=\"胖子挤地铁.png\"></p>\n<p>以上就是不怎么靠谱广州旅游推荐。</p>\n<p>漂亮的广州，等待最美的你。</p>\n"},{"title":"链表","date":"2018-03-20T14:45:39.000Z","_content":"\n反转链表\n\n\n```c\n\nListNode* ReverseList(ListNode* pHead) {\n    if(pHead == NULL) return NULL;\n    ListNode* cur = pHead;\n    ListNode* pre = NULL;\n    ListNode* next = NULL;\n    while(cur != NULL){\n        next = cur -> next;\n        cur -> next = pre;\n        pre = cur;\n        cur = next;\n    }\n    return pre;\n}\n\n```\n\n输入一个链表，输出该链表中倒数第k个结点。\n\n```c\n\nListNode* FindKthToTail(ListNode* pListHead, unsigned int k) {\n    vector<ListNode*> v;\n    while(pListHead!=NULL){\n        v.push_back(pListHead);\n        pListHead = pListHead->next;\n    }\n    if(v.size() < k || k < 1) return NULL;\n    return v[v.size() - k];  \n}\n\n\n```\n\n输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。\n\n```c\n\n ListNode* Merge(ListNode* pHead1, ListNode* pHead2){\n        ListNode* p = new ListNode(-1);\n        ListNode* root= p;\n        while(pHead1 != NULL || pHead2 != NULL){\n            if(pHead1 == NULL){\n                p->next = pHead2;\n                break;\n            }\n            if(pHead2 == NULL){\n                p->next = pHead1;\n                break;\n            }\n            if(pHead1 -> val < pHead2 -> val){\n                p->next = pHead1;\n                p = p->next;\n                pHead1 = pHead1 -> next;\n            }else{\n                p->next = pHead2;\n                p = p-> next;\n                pHead2 = pHead2->next;\n            }\n        }\n        return root->next;       \n }\n\n\n\n```\n\n输入一个链表，从尾到头打印链表每个节点的值。\n\n```c\n\nvector<int> printListFromTailToHead(ListNode* head) {\n        vector<int> v;\n        if(head == NULL) return v;\n        while(head != NULL){\n            v.push_back(head->val);\n            head = head->next;\n        }\n        std::reverse(v.begin(), v.end());\n        return v;\n}\n\n\n```\n","source":"_posts/链表.md","raw":"---\ntitle: 链表\ndate: 2018-3-20 22:45:39\ncategories:\n  - 数据结构与算法\ntags: \n  - 链表\n---\n\n反转链表\n\n\n```c\n\nListNode* ReverseList(ListNode* pHead) {\n    if(pHead == NULL) return NULL;\n    ListNode* cur = pHead;\n    ListNode* pre = NULL;\n    ListNode* next = NULL;\n    while(cur != NULL){\n        next = cur -> next;\n        cur -> next = pre;\n        pre = cur;\n        cur = next;\n    }\n    return pre;\n}\n\n```\n\n输入一个链表，输出该链表中倒数第k个结点。\n\n```c\n\nListNode* FindKthToTail(ListNode* pListHead, unsigned int k) {\n    vector<ListNode*> v;\n    while(pListHead!=NULL){\n        v.push_back(pListHead);\n        pListHead = pListHead->next;\n    }\n    if(v.size() < k || k < 1) return NULL;\n    return v[v.size() - k];  \n}\n\n\n```\n\n输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。\n\n```c\n\n ListNode* Merge(ListNode* pHead1, ListNode* pHead2){\n        ListNode* p = new ListNode(-1);\n        ListNode* root= p;\n        while(pHead1 != NULL || pHead2 != NULL){\n            if(pHead1 == NULL){\n                p->next = pHead2;\n                break;\n            }\n            if(pHead2 == NULL){\n                p->next = pHead1;\n                break;\n            }\n            if(pHead1 -> val < pHead2 -> val){\n                p->next = pHead1;\n                p = p->next;\n                pHead1 = pHead1 -> next;\n            }else{\n                p->next = pHead2;\n                p = p-> next;\n                pHead2 = pHead2->next;\n            }\n        }\n        return root->next;       \n }\n\n\n\n```\n\n输入一个链表，从尾到头打印链表每个节点的值。\n\n```c\n\nvector<int> printListFromTailToHead(ListNode* head) {\n        vector<int> v;\n        if(head == NULL) return v;\n        while(head != NULL){\n            v.push_back(head->val);\n            head = head->next;\n        }\n        std::reverse(v.begin(), v.end());\n        return v;\n}\n\n\n```\n","slug":"链表","published":1,"updated":"2019-11-24T16:52:07.140Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdr4001dm7fhgpz69bwd","content":"<p>反转链表</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ListNode* <span class=\"title\">ReverseList</span><span class=\"params\">(ListNode* pHead)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pHead == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    ListNode* cur = pHead;</span><br><span class=\"line\">    ListNode* pre = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    ListNode* next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(cur != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        next = cur -&gt; next;</span><br><span class=\"line\">        cur -&gt; next = pre;</span><br><span class=\"line\">        pre = cur;</span><br><span class=\"line\">        cur = next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pre;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输入一个链表，输出该链表中倒数第k个结点。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ListNode* <span class=\"title\">FindKthToTail</span><span class=\"params\">(ListNode* pListHead, <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;ListNode*&gt; v;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pListHead!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        v.push_back(pListHead);</span><br><span class=\"line\">        pListHead = pListHead-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v.<span class=\"built_in\">size</span>() &lt; k || k &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v[v.<span class=\"built_in\">size</span>() - k];  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ListNode* <span class=\"title\">Merge</span><span class=\"params\">(ListNode* pHead1, ListNode* pHead2)</span></span>&#123;</span><br><span class=\"line\">       ListNode* p = <span class=\"keyword\">new</span> ListNode(<span class=\"number\">-1</span>);</span><br><span class=\"line\">       ListNode* root= p;</span><br><span class=\"line\">       <span class=\"keyword\">while</span>(pHead1 != <span class=\"literal\">NULL</span> || pHead2 != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(pHead1 == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">               p-&gt;next = pHead2;</span><br><span class=\"line\">               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(pHead2 == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">               p-&gt;next = pHead1;</span><br><span class=\"line\">               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(pHead1 -&gt; val &lt; pHead2 -&gt; val)&#123;</span><br><span class=\"line\">               p-&gt;next = pHead1;</span><br><span class=\"line\">               p = p-&gt;next;</span><br><span class=\"line\">               pHead1 = pHead1 -&gt; next;</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">               p-&gt;next = pHead2;</span><br><span class=\"line\">               p = p-&gt; next;</span><br><span class=\"line\">               pHead2 = pHead2-&gt;next;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> root-&gt;next;       </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输入一个链表，从尾到头打印链表每个节点的值。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; printListFromTailToHead(ListNode* head) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(head != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            v.push_back(head-&gt;val);</span><br><span class=\"line\">            head = head-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::reverse(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p>反转链表</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ListNode* <span class=\"title\">ReverseList</span><span class=\"params\">(ListNode* pHead)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pHead == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    ListNode* cur = pHead;</span><br><span class=\"line\">    ListNode* pre = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    ListNode* next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(cur != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        next = cur -&gt; next;</span><br><span class=\"line\">        cur -&gt; next = pre;</span><br><span class=\"line\">        pre = cur;</span><br><span class=\"line\">        cur = next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pre;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输入一个链表，输出该链表中倒数第k个结点。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ListNode* <span class=\"title\">FindKthToTail</span><span class=\"params\">(ListNode* pListHead, <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;ListNode*&gt; v;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pListHead!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        v.push_back(pListHead);</span><br><span class=\"line\">        pListHead = pListHead-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v.<span class=\"built_in\">size</span>() &lt; k || k &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v[v.<span class=\"built_in\">size</span>() - k];  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ListNode* <span class=\"title\">Merge</span><span class=\"params\">(ListNode* pHead1, ListNode* pHead2)</span></span>&#123;</span><br><span class=\"line\">       ListNode* p = <span class=\"keyword\">new</span> ListNode(<span class=\"number\">-1</span>);</span><br><span class=\"line\">       ListNode* root= p;</span><br><span class=\"line\">       <span class=\"keyword\">while</span>(pHead1 != <span class=\"literal\">NULL</span> || pHead2 != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(pHead1 == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">               p-&gt;next = pHead2;</span><br><span class=\"line\">               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(pHead2 == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">               p-&gt;next = pHead1;</span><br><span class=\"line\">               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(pHead1 -&gt; val &lt; pHead2 -&gt; val)&#123;</span><br><span class=\"line\">               p-&gt;next = pHead1;</span><br><span class=\"line\">               p = p-&gt;next;</span><br><span class=\"line\">               pHead1 = pHead1 -&gt; next;</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">               p-&gt;next = pHead2;</span><br><span class=\"line\">               p = p-&gt; next;</span><br><span class=\"line\">               pHead2 = pHead2-&gt;next;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> root-&gt;next;       </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输入一个链表，从尾到头打印链表每个节点的值。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; printListFromTailToHead(ListNode* head) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(head != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            v.push_back(head-&gt;val);</span><br><span class=\"line\">            head = head-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::reverse(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"糟糕的2019","date":"2019-12-31T01:15:27.000Z","_content":"\n\n人们往往只记得生活对他的苦，却不记得生活对他的甜。","source":"_posts/糟糕的2019.md","raw":"---\ntitle: 糟糕的2019\ndate: 2019-12-31 09:15:27\ntags: 随笔\n---\n\n\n人们往往只记得生活对他的苦，却不记得生活对他的甜。","slug":"糟糕的2019","published":1,"updated":"2019-12-31T03:17:30.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdr6001gm7fh51gk2v1i","content":"<p>人们往往只记得生活对他的苦，却不记得生活对他的甜。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p>人们往往只记得生活对他的苦，却不记得生活对他的甜。</p>\n"},{"title":"自驾大理-丽江3日游","date":"2017-10-08T14:45:39.000Z","_content":"\n\n作为一个云南人，长这么大，还是第一次去大理&丽江。\n\n装备：姐姐的豪车。\n\n人物：我、姐姐、表弟、老爸老妈。\n\n司机：我和姐姐（长途开车，两人换着开不累）。\n\n出发前的一天晚上，我们自己做了一下攻略，大概如下。\n\n![](/img/dali-lijiang/1.jpeg)\n\n最后我们实际游程和上面的攻略还是有点出入，不过相差不是很大。\n\n### 大理\n\n第一天\n\n> 早上7点40从昆明出发。11点到达大理，在去景区的路边上（距离大理古城10km）随便找了一家饭馆吃，因为想着在景区吃可能比较贵，5人花费170。\n  </br>吃完饭，12点。我们都觉得现在去天龙八部影视城比较早了，所以打算先去洱海边上转一圈。\n  </br>所以我就一直往洱海的方向开。最后去了才村码头~（国庆人真多啊，被一个大妈带去别人客栈旁边停车，收费20元）\n  </br>我和我表弟想去租电动摩托车骑一下的（60元一辆一天），最后被姐姐制止了，因为我们下午的计划是去影视城。最后就在才村码头转了一下，拍了几张照片。\n\n\n![](/img/dali-lijiang/2.jpeg)\n\n![](/img/dali-lijiang/3.jpeg)\n\n> 随便在才村码头转了转就去天龙八部影视城了。去的路上因为我这个新司机开过了路口，浪费了约20分钟左右。\n  </br>天龙八部影视城（25一人，原价50，因为景区很多地方在维护）\n\n![](/img/dali-lijiang/4.jpeg)\n\n![](/img/dali-lijiang/5.jpeg)\n\n> 在大理遇到高中同桌（缘分真好），他也是一家人的来自驾游，后面就两家人一起逛。\n\n![](/img/dali-lijiang/6.jpeg)\n\n![](/img/dali-lijiang/7.jpeg)\n\n![](/img/dali-lijiang/8.jpeg)\n\n> 在影视城和同桌转了转，我们约好了晚上两家人一起吃饭。因为时间还早，同桌提议说到三塔看看。\n\n![](/img/dali-lijiang/9.jpeg)\n\n> 关于三塔，我们只是在外面转了转。因为门票实在是太贵了（120一人，打折下来97一人，我们10个人呢），感觉进去了也没啥好玩的。\n\n![](/img/dali-lijiang/10.jpeg)\n\n\n> 接近6点，在美团上定了一家古城里面的饭馆，10人298，味道还挺不错的（大概是都饿了的缘故吧）。\n  </br>吃完饭，顺便在古城转了转。\n\n![](/img/dali-lijiang/11.jpeg)\n\n> 随便在古城逛逛，便和同桌他们道别。因为我们晚上要住在双廊，同桌他们在市区里面住。\n </br>驾车一个钟左右，最后到达客栈，可能中秋节的缘故，客栈老板拿出自家的水果、酸奶、各种零食来招待我们。\n\n\n第二天\n\n> 7点半起床。8点半左右从客栈出来，去吃早餐。\n  </br>之后便在双廊转悠。\n\n![](/img/dali-lijiang/12.jpeg)\n\n![](/img/dali-lijiang/13.jpg)\n\n> 大游轮，140一人。\n\n![](/img/dali-lijiang/14.jpg)\n\n> 南诏岛（门票50+10块船票），好想划下面这条小船过去呢。\n\n![](/img/dali-lijiang/15.jpeg)\n\n![](/img/dali-lijiang/16.jpeg)\n\n> 11点多，大家都不怎么饿。在我的提议下，决定不自驾环洱海去大理古城了，直接去丽江古城，所以加满油后直接去丽江古城。\n </br>约2两个小时后，到达丽江古城。美团了一个美国大牛哇（蛙靠），顺便把车停在了古城附近的停车场，吃过饭后就一直在丽江古城转悠呢。\n\n### 丽江\n\n![](/img/dali-lijiang/17.jpeg)\n\n丽江是个好地方\n\n> 古城满大街弥漫着“就在这一瞬间  才发现   你就在我身边...\",\"期待着你的回来  我的小宝贝  期待着你的拥抱  我的小宝贝 多么想牵着你的手...\"\n  </br>参杂着手鼓姑娘们的鼓声和她们的忧郁。\n\n\n古城购物\n\n\n> 古城里面的店大多都是外地人在经营着，正所谓无奸不商。我是体会到了，大多商家都是乱叫价。\n  </br>这里我教你一招：对于你觉得贵得太离谱的商品，砍价的时候直接砍她一半还多的价格。我妈妈去看一件衣服，商家叫价160，可能你觉得这个价格算是比较正常的，我妈只给别人50。这远远小于160啊，后面商家说60卖给我们。到这里，我就已经对老妈佩服不已了，惊呆了有没有？如果这样你就觉得很厉害了，那就远远错了。后面我们从店里面走出来，走了有10米左右。那老板叫到：50卖给你们了。我对老妈说：她50卖了，快去买吧。老妈说：那件衣服没有袖子，不咋个好看。要买就买合适的，最终还是没买...\n  </br>这里你可以说我在吹牛逼～不过你也不妨试试，到时候赚到的是你，又不是我。\n\n艳遇\n\n> 平时不好好耍朋友，找对象。光想着去丽江艳遇，当然是不行的。\n  </br>酒托很多，酒吧酒也很贵。一杯啤酒就30大洋，一瓶红酒就成百上千了的吧？对于我这种屌丝来说，已经算是天价了。\n\n![](/img/dali-lijiang/18.jpg)\n\n\n\n### 玉龙雪山\n\n第三天\n\n> 在第二天去丽江的路上，姐姐就在网上看已经没了去玉龙雪山的索道票。要去的话只有后天（7号）的票。7号肯定不能去塞，因为我7号怎么也得回到昆明，第二天坐动车回广州呢。\n  </br>后面就在飞猪上面看了一个旅行策划公司还有票（套票）。458一人，包含进山门票（130）+大巴车票（好像是130？）+ 索道票（180）+ 自助餐（50块）+ 氧气（30块）+ 师傅接送，又有人带你玩。然后我们又怕被坑。再三纠结之下，还是买了这个票，因为只有这样才能去玉龙雪山玩。\n  </br>早上7点，起床，把东西放在车上之后去吃了早餐，随后8点师傅就到酒店门口等我们，我们做她的车去。师傅人很好，一路上和我们有说有笑。\n  </br>这天全程都是师傅带我们在玩。她不是导游，只是师傅，但是我觉得这样挺好的。\n  </br>刚到甘海子的时候，远远就可以看到玉龙雪山，哇！！！我们很是想下去拍照，师傅说我们这里回来的时候在来玩。\n  </br>师傅把车停到停车场后，便带我们去排队做大巴车去蓝月古。\n  </br>在大巴车上就看到了蓝月谷的美，我以为就只是路过。\n  </br>下了大巴车。买了电瓶车的票，50块一人（这里是单独消费，并未包含在网购的套票内）。因为师傅建议做电瓶车游览，她建议的同时也解释到这是景区内唯一自费的，其它的全都包含在套票内了，我看着也挺远的。买了票，师傅帮我们拿着氧气瓶，简单交代了一下，她到下个乘车点等我们。我们便自己在蓝月谷玩了两个钟左右，拍了很多照片。\n\n\n### 蓝月谷\n\n![](/img/dali-lijiang/19.jpeg)\n\n![](/img/dali-lijiang/20.jpeg)\n\n![](/img/dali-lijiang/21.jpeg)\n\n![](/img/dali-lijiang/22.jpeg)\n\n\n![](/img/dali-lijiang/23.jpeg)\n\n### 雪山雪山\n\n> 蓝月谷出来后，便坐电瓶车去找师傅。随后她带我们去吃自助餐（火锅），饭没煮熟外（不知道是不是高原的缘故），味道还行的。\n  </br>吃完饭，师傅便带我们去排队坐大巴车去坐索道的地方，这下真的去雪山了。\n  </br>她把氧气瓶给我们后，简单交代了些去雪山的事。\n\n![](/img/dali-lijiang/24.jpeg)\n\n拍照3张100块，真会玩\n\n![](/img/dali-lijiang/25.jpeg)\n\n![](/img/dali-lijiang/26.jpeg)\n\n![](/img/dali-lijiang/27.jpeg)\n\n全程穿短袖装逼的250\n\n\n![](/img/dali-lijiang/28.jpeg)\n\n![](/img/dali-lijiang/29.jpeg)\n\n> 被小伙的口才折服，拍了个照片。20大洋\n\n![](/img/dali-lijiang/30.jpeg)\n\n![](/img/dali-lijiang/31.jpeg)\n\n### 甘海子&逗逼的一家人\n\n> 从雪山下来后，直接去找师傅。师傅说话算数，带我们去甘海子玩。\n\n![](/img/dali-lijiang/32.jpg)\n\n![](/img/dali-lijiang/33.jpg)\n\n![](/img/dali-lijiang/34.jpg)\n\n### Last\n\n> 最后，本来想直接就先回大理住的，结果因为事先定的酒店退不了。无奈只能在丽江留宿，因为怕堵车，所以在我的建议下，我们决定第二天早上的5点从丽江出发。\n  </br>最后在酒店旁边找了一家丽江腊排骨吃过之后。又去古城转了一圈～\n\n\n![](/img/dali-lijiang/35.jpeg)\n\n> 对于搬砖的我来说。对此还是挺感兴趣的，我猜测它是使用的基站定位来实现的，至于预测难道是大数据？不过好像只能对移动用户定位？因为实际人流量感觉比这多得多啊\n\n\n![](/img/dali-lijiang/36.jpeg)\n\n\n\n![](/img/dali-lijiang/37.jpeg)\n\n这货玩傻了\n\n\n![](/img/dali-lijiang/38.jpeg)\n\n### 回家\n\n\n第四天\n\n> 实际上我并没有4点半起床，我接近5点才起的。冲了个凉水澡，因为过一会要开车，我必须得马上保持清醒状态。\n  </br>走得早，有好处。全程没有堵车，刚进城就开始堵。因为就在我们前面出现车祸，7张车隧道内连撞，我们在隧道外急刹车差点撞到前面那辆车。画面太....所以就不上传了。\n\n\n\n### 如果有机会，我在丽江等你\n\n\n\n![](/img/dali-lijiang/39.jpg)\n\n\n### 总结\n\n这次游玩算是比较匆忙，因为我本来是要回家帮忙收包谷（玉米）的。不知怎么的？老头子和老妈子居然被姐姐说服出来玩（浪）。所以才有了这么几天的大理&丽江自驾游，也是我第一次到大理&丽江玩。我们5个人，不算下买东西（衣服什么乱七八糟的），只算门票+住宿+吃饭+照相+加油+停车，人均大概1100大洋左右。\n\nabout 玉龙雪山，个人觉得真的值得一去。第一次去还是建议买一个那个旅游策划公司的套票，（它不是跟团，就是有人带你到那里，你自己去玩。玩好了，你去找那个人，她又带你到下个地方玩，中途你玩多长时间她完全不管你的。）因为这样有人带着你去坐车，能省下很多时间，如果你一个人自己去又是第一次。绝对要大部分时间花在找坐车的地方&坐车转车上面。\n\naoubt 购物，一定要会砍价啊，不然坑死你没得说。\n\n第一次写游记，简直就是废话连篇&写的也不好。上面的照片均是我手机所拍，如有侵犯个人隐私权，请联系我删除。\n","source":"_posts/自驾大理-丽江3日游.md","raw":"---\ntitle: 自驾大理-丽江3日游\ndate: 2017-10-8 22:45:39\ncategories:\n  - 在路上\ntags: \n  - 大理\n  - 丽江\n---\n\n\n作为一个云南人，长这么大，还是第一次去大理&丽江。\n\n装备：姐姐的豪车。\n\n人物：我、姐姐、表弟、老爸老妈。\n\n司机：我和姐姐（长途开车，两人换着开不累）。\n\n出发前的一天晚上，我们自己做了一下攻略，大概如下。\n\n![](/img/dali-lijiang/1.jpeg)\n\n最后我们实际游程和上面的攻略还是有点出入，不过相差不是很大。\n\n### 大理\n\n第一天\n\n> 早上7点40从昆明出发。11点到达大理，在去景区的路边上（距离大理古城10km）随便找了一家饭馆吃，因为想着在景区吃可能比较贵，5人花费170。\n  </br>吃完饭，12点。我们都觉得现在去天龙八部影视城比较早了，所以打算先去洱海边上转一圈。\n  </br>所以我就一直往洱海的方向开。最后去了才村码头~（国庆人真多啊，被一个大妈带去别人客栈旁边停车，收费20元）\n  </br>我和我表弟想去租电动摩托车骑一下的（60元一辆一天），最后被姐姐制止了，因为我们下午的计划是去影视城。最后就在才村码头转了一下，拍了几张照片。\n\n\n![](/img/dali-lijiang/2.jpeg)\n\n![](/img/dali-lijiang/3.jpeg)\n\n> 随便在才村码头转了转就去天龙八部影视城了。去的路上因为我这个新司机开过了路口，浪费了约20分钟左右。\n  </br>天龙八部影视城（25一人，原价50，因为景区很多地方在维护）\n\n![](/img/dali-lijiang/4.jpeg)\n\n![](/img/dali-lijiang/5.jpeg)\n\n> 在大理遇到高中同桌（缘分真好），他也是一家人的来自驾游，后面就两家人一起逛。\n\n![](/img/dali-lijiang/6.jpeg)\n\n![](/img/dali-lijiang/7.jpeg)\n\n![](/img/dali-lijiang/8.jpeg)\n\n> 在影视城和同桌转了转，我们约好了晚上两家人一起吃饭。因为时间还早，同桌提议说到三塔看看。\n\n![](/img/dali-lijiang/9.jpeg)\n\n> 关于三塔，我们只是在外面转了转。因为门票实在是太贵了（120一人，打折下来97一人，我们10个人呢），感觉进去了也没啥好玩的。\n\n![](/img/dali-lijiang/10.jpeg)\n\n\n> 接近6点，在美团上定了一家古城里面的饭馆，10人298，味道还挺不错的（大概是都饿了的缘故吧）。\n  </br>吃完饭，顺便在古城转了转。\n\n![](/img/dali-lijiang/11.jpeg)\n\n> 随便在古城逛逛，便和同桌他们道别。因为我们晚上要住在双廊，同桌他们在市区里面住。\n </br>驾车一个钟左右，最后到达客栈，可能中秋节的缘故，客栈老板拿出自家的水果、酸奶、各种零食来招待我们。\n\n\n第二天\n\n> 7点半起床。8点半左右从客栈出来，去吃早餐。\n  </br>之后便在双廊转悠。\n\n![](/img/dali-lijiang/12.jpeg)\n\n![](/img/dali-lijiang/13.jpg)\n\n> 大游轮，140一人。\n\n![](/img/dali-lijiang/14.jpg)\n\n> 南诏岛（门票50+10块船票），好想划下面这条小船过去呢。\n\n![](/img/dali-lijiang/15.jpeg)\n\n![](/img/dali-lijiang/16.jpeg)\n\n> 11点多，大家都不怎么饿。在我的提议下，决定不自驾环洱海去大理古城了，直接去丽江古城，所以加满油后直接去丽江古城。\n </br>约2两个小时后，到达丽江古城。美团了一个美国大牛哇（蛙靠），顺便把车停在了古城附近的停车场，吃过饭后就一直在丽江古城转悠呢。\n\n### 丽江\n\n![](/img/dali-lijiang/17.jpeg)\n\n丽江是个好地方\n\n> 古城满大街弥漫着“就在这一瞬间  才发现   你就在我身边...\",\"期待着你的回来  我的小宝贝  期待着你的拥抱  我的小宝贝 多么想牵着你的手...\"\n  </br>参杂着手鼓姑娘们的鼓声和她们的忧郁。\n\n\n古城购物\n\n\n> 古城里面的店大多都是外地人在经营着，正所谓无奸不商。我是体会到了，大多商家都是乱叫价。\n  </br>这里我教你一招：对于你觉得贵得太离谱的商品，砍价的时候直接砍她一半还多的价格。我妈妈去看一件衣服，商家叫价160，可能你觉得这个价格算是比较正常的，我妈只给别人50。这远远小于160啊，后面商家说60卖给我们。到这里，我就已经对老妈佩服不已了，惊呆了有没有？如果这样你就觉得很厉害了，那就远远错了。后面我们从店里面走出来，走了有10米左右。那老板叫到：50卖给你们了。我对老妈说：她50卖了，快去买吧。老妈说：那件衣服没有袖子，不咋个好看。要买就买合适的，最终还是没买...\n  </br>这里你可以说我在吹牛逼～不过你也不妨试试，到时候赚到的是你，又不是我。\n\n艳遇\n\n> 平时不好好耍朋友，找对象。光想着去丽江艳遇，当然是不行的。\n  </br>酒托很多，酒吧酒也很贵。一杯啤酒就30大洋，一瓶红酒就成百上千了的吧？对于我这种屌丝来说，已经算是天价了。\n\n![](/img/dali-lijiang/18.jpg)\n\n\n\n### 玉龙雪山\n\n第三天\n\n> 在第二天去丽江的路上，姐姐就在网上看已经没了去玉龙雪山的索道票。要去的话只有后天（7号）的票。7号肯定不能去塞，因为我7号怎么也得回到昆明，第二天坐动车回广州呢。\n  </br>后面就在飞猪上面看了一个旅行策划公司还有票（套票）。458一人，包含进山门票（130）+大巴车票（好像是130？）+ 索道票（180）+ 自助餐（50块）+ 氧气（30块）+ 师傅接送，又有人带你玩。然后我们又怕被坑。再三纠结之下，还是买了这个票，因为只有这样才能去玉龙雪山玩。\n  </br>早上7点，起床，把东西放在车上之后去吃了早餐，随后8点师傅就到酒店门口等我们，我们做她的车去。师傅人很好，一路上和我们有说有笑。\n  </br>这天全程都是师傅带我们在玩。她不是导游，只是师傅，但是我觉得这样挺好的。\n  </br>刚到甘海子的时候，远远就可以看到玉龙雪山，哇！！！我们很是想下去拍照，师傅说我们这里回来的时候在来玩。\n  </br>师傅把车停到停车场后，便带我们去排队做大巴车去蓝月古。\n  </br>在大巴车上就看到了蓝月谷的美，我以为就只是路过。\n  </br>下了大巴车。买了电瓶车的票，50块一人（这里是单独消费，并未包含在网购的套票内）。因为师傅建议做电瓶车游览，她建议的同时也解释到这是景区内唯一自费的，其它的全都包含在套票内了，我看着也挺远的。买了票，师傅帮我们拿着氧气瓶，简单交代了一下，她到下个乘车点等我们。我们便自己在蓝月谷玩了两个钟左右，拍了很多照片。\n\n\n### 蓝月谷\n\n![](/img/dali-lijiang/19.jpeg)\n\n![](/img/dali-lijiang/20.jpeg)\n\n![](/img/dali-lijiang/21.jpeg)\n\n![](/img/dali-lijiang/22.jpeg)\n\n\n![](/img/dali-lijiang/23.jpeg)\n\n### 雪山雪山\n\n> 蓝月谷出来后，便坐电瓶车去找师傅。随后她带我们去吃自助餐（火锅），饭没煮熟外（不知道是不是高原的缘故），味道还行的。\n  </br>吃完饭，师傅便带我们去排队坐大巴车去坐索道的地方，这下真的去雪山了。\n  </br>她把氧气瓶给我们后，简单交代了些去雪山的事。\n\n![](/img/dali-lijiang/24.jpeg)\n\n拍照3张100块，真会玩\n\n![](/img/dali-lijiang/25.jpeg)\n\n![](/img/dali-lijiang/26.jpeg)\n\n![](/img/dali-lijiang/27.jpeg)\n\n全程穿短袖装逼的250\n\n\n![](/img/dali-lijiang/28.jpeg)\n\n![](/img/dali-lijiang/29.jpeg)\n\n> 被小伙的口才折服，拍了个照片。20大洋\n\n![](/img/dali-lijiang/30.jpeg)\n\n![](/img/dali-lijiang/31.jpeg)\n\n### 甘海子&逗逼的一家人\n\n> 从雪山下来后，直接去找师傅。师傅说话算数，带我们去甘海子玩。\n\n![](/img/dali-lijiang/32.jpg)\n\n![](/img/dali-lijiang/33.jpg)\n\n![](/img/dali-lijiang/34.jpg)\n\n### Last\n\n> 最后，本来想直接就先回大理住的，结果因为事先定的酒店退不了。无奈只能在丽江留宿，因为怕堵车，所以在我的建议下，我们决定第二天早上的5点从丽江出发。\n  </br>最后在酒店旁边找了一家丽江腊排骨吃过之后。又去古城转了一圈～\n\n\n![](/img/dali-lijiang/35.jpeg)\n\n> 对于搬砖的我来说。对此还是挺感兴趣的，我猜测它是使用的基站定位来实现的，至于预测难道是大数据？不过好像只能对移动用户定位？因为实际人流量感觉比这多得多啊\n\n\n![](/img/dali-lijiang/36.jpeg)\n\n\n\n![](/img/dali-lijiang/37.jpeg)\n\n这货玩傻了\n\n\n![](/img/dali-lijiang/38.jpeg)\n\n### 回家\n\n\n第四天\n\n> 实际上我并没有4点半起床，我接近5点才起的。冲了个凉水澡，因为过一会要开车，我必须得马上保持清醒状态。\n  </br>走得早，有好处。全程没有堵车，刚进城就开始堵。因为就在我们前面出现车祸，7张车隧道内连撞，我们在隧道外急刹车差点撞到前面那辆车。画面太....所以就不上传了。\n\n\n\n### 如果有机会，我在丽江等你\n\n\n\n![](/img/dali-lijiang/39.jpg)\n\n\n### 总结\n\n这次游玩算是比较匆忙，因为我本来是要回家帮忙收包谷（玉米）的。不知怎么的？老头子和老妈子居然被姐姐说服出来玩（浪）。所以才有了这么几天的大理&丽江自驾游，也是我第一次到大理&丽江玩。我们5个人，不算下买东西（衣服什么乱七八糟的），只算门票+住宿+吃饭+照相+加油+停车，人均大概1100大洋左右。\n\nabout 玉龙雪山，个人觉得真的值得一去。第一次去还是建议买一个那个旅游策划公司的套票，（它不是跟团，就是有人带你到那里，你自己去玩。玩好了，你去找那个人，她又带你到下个地方玩，中途你玩多长时间她完全不管你的。）因为这样有人带着你去坐车，能省下很多时间，如果你一个人自己去又是第一次。绝对要大部分时间花在找坐车的地方&坐车转车上面。\n\naoubt 购物，一定要会砍价啊，不然坑死你没得说。\n\n第一次写游记，简直就是废话连篇&写的也不好。上面的照片均是我手机所拍，如有侵犯个人隐私权，请联系我删除。\n","slug":"自驾大理-丽江3日游","published":1,"updated":"2019-11-25T03:44:22.847Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckae1xdr7001lm7fh56qp3jah","content":"<p>作为一个云南人，长这么大，还是第一次去大理&amp;丽江。</p>\n<p>装备：姐姐的豪车。</p>\n<p>人物：我、姐姐、表弟、老爸老妈。</p>\n<p>司机：我和姐姐（长途开车，两人换着开不累）。</p>\n<p>出发前的一天晚上，我们自己做了一下攻略，大概如下。</p>\n<p><img src=\"/img/dali-lijiang/1.jpeg\" alt=\"\"></p>\n<p>最后我们实际游程和上面的攻略还是有点出入，不过相差不是很大。</p>\n<h3 id=\"大理\"><a href=\"#大理\" class=\"headerlink\" title=\"大理\"></a>大理</h3><p>第一天</p>\n<blockquote>\n<p>早上7点40从昆明出发。11点到达大理，在去景区的路边上（距离大理古城10km）随便找了一家饭馆吃，因为想着在景区吃可能比较贵，5人花费170。<br>  </br>吃完饭，12点。我们都觉得现在去天龙八部影视城比较早了，所以打算先去洱海边上转一圈。<br>  </br>所以我就一直往洱海的方向开。最后去了才村码头~（国庆人真多啊，被一个大妈带去别人客栈旁边停车，收费20元）<br>  </br>我和我表弟想去租电动摩托车骑一下的（60元一辆一天），最后被姐姐制止了，因为我们下午的计划是去影视城。最后就在才村码头转了一下，拍了几张照片。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/2.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/3.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>随便在才村码头转了转就去天龙八部影视城了。去的路上因为我这个新司机开过了路口，浪费了约20分钟左右。<br>  </br>天龙八部影视城（25一人，原价50，因为景区很多地方在维护）</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/4.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/5.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>在大理遇到高中同桌（缘分真好），他也是一家人的来自驾游，后面就两家人一起逛。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/6.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/7.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/8.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>在影视城和同桌转了转，我们约好了晚上两家人一起吃饭。因为时间还早，同桌提议说到三塔看看。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/9.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>关于三塔，我们只是在外面转了转。因为门票实在是太贵了（120一人，打折下来97一人，我们10个人呢），感觉进去了也没啥好玩的。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/10.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>接近6点，在美团上定了一家古城里面的饭馆，10人298，味道还挺不错的（大概是都饿了的缘故吧）。<br>  </br>吃完饭，顺便在古城转了转。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/11.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>随便在古城逛逛，便和同桌他们道别。因为我们晚上要住在双廊，同桌他们在市区里面住。<br> </br>驾车一个钟左右，最后到达客栈，可能中秋节的缘故，客栈老板拿出自家的水果、酸奶、各种零食来招待我们。</p>\n</blockquote>\n<p>第二天</p>\n<blockquote>\n<p>7点半起床。8点半左右从客栈出来，去吃早餐。<br>  </br>之后便在双廊转悠。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/12.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/13.jpg\" alt=\"\"></p>\n<blockquote>\n<p>大游轮，140一人。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/14.jpg\" alt=\"\"></p>\n<blockquote>\n<p>南诏岛（门票50+10块船票），好想划下面这条小船过去呢。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/15.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/16.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>11点多，大家都不怎么饿。在我的提议下，决定不自驾环洱海去大理古城了，直接去丽江古城，所以加满油后直接去丽江古城。<br> </br>约2两个小时后，到达丽江古城。美团了一个美国大牛哇（蛙靠），顺便把车停在了古城附近的停车场，吃过饭后就一直在丽江古城转悠呢。</p>\n</blockquote>\n<h3 id=\"丽江\"><a href=\"#丽江\" class=\"headerlink\" title=\"丽江\"></a>丽江</h3><p><img src=\"/img/dali-lijiang/17.jpeg\" alt=\"\"></p>\n<p>丽江是个好地方</p>\n<blockquote>\n<p>古城满大街弥漫着“就在这一瞬间  才发现   你就在我身边…”,”期待着你的回来  我的小宝贝  期待着你的拥抱  我的小宝贝 多么想牵着你的手…”<br>  </br>参杂着手鼓姑娘们的鼓声和她们的忧郁。</p>\n</blockquote>\n<p>古城购物</p>\n<blockquote>\n<p>古城里面的店大多都是外地人在经营着，正所谓无奸不商。我是体会到了，大多商家都是乱叫价。<br>  </br>这里我教你一招：对于你觉得贵得太离谱的商品，砍价的时候直接砍她一半还多的价格。我妈妈去看一件衣服，商家叫价160，可能你觉得这个价格算是比较正常的，我妈只给别人50。这远远小于160啊，后面商家说60卖给我们。到这里，我就已经对老妈佩服不已了，惊呆了有没有？如果这样你就觉得很厉害了，那就远远错了。后面我们从店里面走出来，走了有10米左右。那老板叫到：50卖给你们了。我对老妈说：她50卖了，快去买吧。老妈说：那件衣服没有袖子，不咋个好看。要买就买合适的，最终还是没买…<br>  </br>这里你可以说我在吹牛逼～不过你也不妨试试，到时候赚到的是你，又不是我。</p>\n</blockquote>\n<p>艳遇</p>\n<blockquote>\n<p>平时不好好耍朋友，找对象。光想着去丽江艳遇，当然是不行的。<br>  </br>酒托很多，酒吧酒也很贵。一杯啤酒就30大洋，一瓶红酒就成百上千了的吧？对于我这种屌丝来说，已经算是天价了。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/18.jpg\" alt=\"\"></p>\n<h3 id=\"玉龙雪山\"><a href=\"#玉龙雪山\" class=\"headerlink\" title=\"玉龙雪山\"></a>玉龙雪山</h3><p>第三天</p>\n<blockquote>\n<p>在第二天去丽江的路上，姐姐就在网上看已经没了去玉龙雪山的索道票。要去的话只有后天（7号）的票。7号肯定不能去塞，因为我7号怎么也得回到昆明，第二天坐动车回广州呢。<br>  </br>后面就在飞猪上面看了一个旅行策划公司还有票（套票）。458一人，包含进山门票（130）+大巴车票（好像是130？）+ 索道票（180）+ 自助餐（50块）+ 氧气（30块）+ 师傅接送，又有人带你玩。然后我们又怕被坑。再三纠结之下，还是买了这个票，因为只有这样才能去玉龙雪山玩。<br>  </br>早上7点，起床，把东西放在车上之后去吃了早餐，随后8点师傅就到酒店门口等我们，我们做她的车去。师傅人很好，一路上和我们有说有笑。<br>  </br>这天全程都是师傅带我们在玩。她不是导游，只是师傅，但是我觉得这样挺好的。<br>  </br>刚到甘海子的时候，远远就可以看到玉龙雪山，哇！！！我们很是想下去拍照，师傅说我们这里回来的时候在来玩。<br>  </br>师傅把车停到停车场后，便带我们去排队做大巴车去蓝月古。<br>  </br>在大巴车上就看到了蓝月谷的美，我以为就只是路过。<br>  </br>下了大巴车。买了电瓶车的票，50块一人（这里是单独消费，并未包含在网购的套票内）。因为师傅建议做电瓶车游览，她建议的同时也解释到这是景区内唯一自费的，其它的全都包含在套票内了，我看着也挺远的。买了票，师傅帮我们拿着氧气瓶，简单交代了一下，她到下个乘车点等我们。我们便自己在蓝月谷玩了两个钟左右，拍了很多照片。</p>\n</blockquote>\n<h3 id=\"蓝月谷\"><a href=\"#蓝月谷\" class=\"headerlink\" title=\"蓝月谷\"></a>蓝月谷</h3><p><img src=\"/img/dali-lijiang/19.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/20.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/21.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/22.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/23.jpeg\" alt=\"\"></p>\n<h3 id=\"雪山雪山\"><a href=\"#雪山雪山\" class=\"headerlink\" title=\"雪山雪山\"></a>雪山雪山</h3><blockquote>\n<p>蓝月谷出来后，便坐电瓶车去找师傅。随后她带我们去吃自助餐（火锅），饭没煮熟外（不知道是不是高原的缘故），味道还行的。<br>  </br>吃完饭，师傅便带我们去排队坐大巴车去坐索道的地方，这下真的去雪山了。<br>  </br>她把氧气瓶给我们后，简单交代了些去雪山的事。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/24.jpeg\" alt=\"\"></p>\n<p>拍照3张100块，真会玩</p>\n<p><img src=\"/img/dali-lijiang/25.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/26.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/27.jpeg\" alt=\"\"></p>\n<p>全程穿短袖装逼的250</p>\n<p><img src=\"/img/dali-lijiang/28.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/29.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>被小伙的口才折服，拍了个照片。20大洋</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/30.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/31.jpeg\" alt=\"\"></p>\n<h3 id=\"甘海子-amp-逗逼的一家人\"><a href=\"#甘海子-amp-逗逼的一家人\" class=\"headerlink\" title=\"甘海子&amp;逗逼的一家人\"></a>甘海子&amp;逗逼的一家人</h3><blockquote>\n<p>从雪山下来后，直接去找师傅。师傅说话算数，带我们去甘海子玩。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/32.jpg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/33.jpg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/34.jpg\" alt=\"\"></p>\n<h3 id=\"Last\"><a href=\"#Last\" class=\"headerlink\" title=\"Last\"></a>Last</h3><blockquote>\n<p>最后，本来想直接就先回大理住的，结果因为事先定的酒店退不了。无奈只能在丽江留宿，因为怕堵车，所以在我的建议下，我们决定第二天早上的5点从丽江出发。<br>  </br>最后在酒店旁边找了一家丽江腊排骨吃过之后。又去古城转了一圈～</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/35.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>对于搬砖的我来说。对此还是挺感兴趣的，我猜测它是使用的基站定位来实现的，至于预测难道是大数据？不过好像只能对移动用户定位？因为实际人流量感觉比这多得多啊</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/36.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/37.jpeg\" alt=\"\"></p>\n<p>这货玩傻了</p>\n<p><img src=\"/img/dali-lijiang/38.jpeg\" alt=\"\"></p>\n<h3 id=\"回家\"><a href=\"#回家\" class=\"headerlink\" title=\"回家\"></a>回家</h3><p>第四天</p>\n<blockquote>\n<p>实际上我并没有4点半起床，我接近5点才起的。冲了个凉水澡，因为过一会要开车，我必须得马上保持清醒状态。<br>  </br>走得早，有好处。全程没有堵车，刚进城就开始堵。因为就在我们前面出现车祸，7张车隧道内连撞，我们在隧道外急刹车差点撞到前面那辆车。画面太….所以就不上传了。</p>\n</blockquote>\n<h3 id=\"如果有机会，我在丽江等你\"><a href=\"#如果有机会，我在丽江等你\" class=\"headerlink\" title=\"如果有机会，我在丽江等你\"></a>如果有机会，我在丽江等你</h3><p><img src=\"/img/dali-lijiang/39.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这次游玩算是比较匆忙，因为我本来是要回家帮忙收包谷（玉米）的。不知怎么的？老头子和老妈子居然被姐姐说服出来玩（浪）。所以才有了这么几天的大理&amp;丽江自驾游，也是我第一次到大理&amp;丽江玩。我们5个人，不算下买东西（衣服什么乱七八糟的），只算门票+住宿+吃饭+照相+加油+停车，人均大概1100大洋左右。</p>\n<p>about 玉龙雪山，个人觉得真的值得一去。第一次去还是建议买一个那个旅游策划公司的套票，（它不是跟团，就是有人带你到那里，你自己去玩。玩好了，你去找那个人，她又带你到下个地方玩，中途你玩多长时间她完全不管你的。）因为这样有人带着你去坐车，能省下很多时间，如果你一个人自己去又是第一次。绝对要大部分时间花在找坐车的地方&amp;坐车转车上面。</p>\n<p>aoubt 购物，一定要会砍价啊，不然坑死你没得说。</p>\n<p>第一次写游记，简直就是废话连篇&amp;写的也不好。上面的照片均是我手机所拍，如有侵犯个人隐私权，请联系我删除。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p>作为一个云南人，长这么大，还是第一次去大理&amp;丽江。</p>\n<p>装备：姐姐的豪车。</p>\n<p>人物：我、姐姐、表弟、老爸老妈。</p>\n<p>司机：我和姐姐（长途开车，两人换着开不累）。</p>\n<p>出发前的一天晚上，我们自己做了一下攻略，大概如下。</p>\n<p><img src=\"/img/dali-lijiang/1.jpeg\" alt=\"\"></p>\n<p>最后我们实际游程和上面的攻略还是有点出入，不过相差不是很大。</p>\n<h3 id=\"大理\"><a href=\"#大理\" class=\"headerlink\" title=\"大理\"></a>大理</h3><p>第一天</p>\n<blockquote>\n<p>早上7点40从昆明出发。11点到达大理，在去景区的路边上（距离大理古城10km）随便找了一家饭馆吃，因为想着在景区吃可能比较贵，5人花费170。<br>  </br>吃完饭，12点。我们都觉得现在去天龙八部影视城比较早了，所以打算先去洱海边上转一圈。<br>  </br>所以我就一直往洱海的方向开。最后去了才村码头~（国庆人真多啊，被一个大妈带去别人客栈旁边停车，收费20元）<br>  </br>我和我表弟想去租电动摩托车骑一下的（60元一辆一天），最后被姐姐制止了，因为我们下午的计划是去影视城。最后就在才村码头转了一下，拍了几张照片。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/2.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/3.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>随便在才村码头转了转就去天龙八部影视城了。去的路上因为我这个新司机开过了路口，浪费了约20分钟左右。<br>  </br>天龙八部影视城（25一人，原价50，因为景区很多地方在维护）</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/4.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/5.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>在大理遇到高中同桌（缘分真好），他也是一家人的来自驾游，后面就两家人一起逛。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/6.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/7.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/8.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>在影视城和同桌转了转，我们约好了晚上两家人一起吃饭。因为时间还早，同桌提议说到三塔看看。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/9.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>关于三塔，我们只是在外面转了转。因为门票实在是太贵了（120一人，打折下来97一人，我们10个人呢），感觉进去了也没啥好玩的。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/10.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>接近6点，在美团上定了一家古城里面的饭馆，10人298，味道还挺不错的（大概是都饿了的缘故吧）。<br>  </br>吃完饭，顺便在古城转了转。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/11.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>随便在古城逛逛，便和同桌他们道别。因为我们晚上要住在双廊，同桌他们在市区里面住。<br> </br>驾车一个钟左右，最后到达客栈，可能中秋节的缘故，客栈老板拿出自家的水果、酸奶、各种零食来招待我们。</p>\n</blockquote>\n<p>第二天</p>\n<blockquote>\n<p>7点半起床。8点半左右从客栈出来，去吃早餐。<br>  </br>之后便在双廊转悠。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/12.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/13.jpg\" alt=\"\"></p>\n<blockquote>\n<p>大游轮，140一人。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/14.jpg\" alt=\"\"></p>\n<blockquote>\n<p>南诏岛（门票50+10块船票），好想划下面这条小船过去呢。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/15.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/16.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>11点多，大家都不怎么饿。在我的提议下，决定不自驾环洱海去大理古城了，直接去丽江古城，所以加满油后直接去丽江古城。<br> </br>约2两个小时后，到达丽江古城。美团了一个美国大牛哇（蛙靠），顺便把车停在了古城附近的停车场，吃过饭后就一直在丽江古城转悠呢。</p>\n</blockquote>\n<h3 id=\"丽江\"><a href=\"#丽江\" class=\"headerlink\" title=\"丽江\"></a>丽江</h3><p><img src=\"/img/dali-lijiang/17.jpeg\" alt=\"\"></p>\n<p>丽江是个好地方</p>\n<blockquote>\n<p>古城满大街弥漫着“就在这一瞬间  才发现   你就在我身边…”,”期待着你的回来  我的小宝贝  期待着你的拥抱  我的小宝贝 多么想牵着你的手…”<br>  </br>参杂着手鼓姑娘们的鼓声和她们的忧郁。</p>\n</blockquote>\n<p>古城购物</p>\n<blockquote>\n<p>古城里面的店大多都是外地人在经营着，正所谓无奸不商。我是体会到了，大多商家都是乱叫价。<br>  </br>这里我教你一招：对于你觉得贵得太离谱的商品，砍价的时候直接砍她一半还多的价格。我妈妈去看一件衣服，商家叫价160，可能你觉得这个价格算是比较正常的，我妈只给别人50。这远远小于160啊，后面商家说60卖给我们。到这里，我就已经对老妈佩服不已了，惊呆了有没有？如果这样你就觉得很厉害了，那就远远错了。后面我们从店里面走出来，走了有10米左右。那老板叫到：50卖给你们了。我对老妈说：她50卖了，快去买吧。老妈说：那件衣服没有袖子，不咋个好看。要买就买合适的，最终还是没买…<br>  </br>这里你可以说我在吹牛逼～不过你也不妨试试，到时候赚到的是你，又不是我。</p>\n</blockquote>\n<p>艳遇</p>\n<blockquote>\n<p>平时不好好耍朋友，找对象。光想着去丽江艳遇，当然是不行的。<br>  </br>酒托很多，酒吧酒也很贵。一杯啤酒就30大洋，一瓶红酒就成百上千了的吧？对于我这种屌丝来说，已经算是天价了。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/18.jpg\" alt=\"\"></p>\n<h3 id=\"玉龙雪山\"><a href=\"#玉龙雪山\" class=\"headerlink\" title=\"玉龙雪山\"></a>玉龙雪山</h3><p>第三天</p>\n<blockquote>\n<p>在第二天去丽江的路上，姐姐就在网上看已经没了去玉龙雪山的索道票。要去的话只有后天（7号）的票。7号肯定不能去塞，因为我7号怎么也得回到昆明，第二天坐动车回广州呢。<br>  </br>后面就在飞猪上面看了一个旅行策划公司还有票（套票）。458一人，包含进山门票（130）+大巴车票（好像是130？）+ 索道票（180）+ 自助餐（50块）+ 氧气（30块）+ 师傅接送，又有人带你玩。然后我们又怕被坑。再三纠结之下，还是买了这个票，因为只有这样才能去玉龙雪山玩。<br>  </br>早上7点，起床，把东西放在车上之后去吃了早餐，随后8点师傅就到酒店门口等我们，我们做她的车去。师傅人很好，一路上和我们有说有笑。<br>  </br>这天全程都是师傅带我们在玩。她不是导游，只是师傅，但是我觉得这样挺好的。<br>  </br>刚到甘海子的时候，远远就可以看到玉龙雪山，哇！！！我们很是想下去拍照，师傅说我们这里回来的时候在来玩。<br>  </br>师傅把车停到停车场后，便带我们去排队做大巴车去蓝月古。<br>  </br>在大巴车上就看到了蓝月谷的美，我以为就只是路过。<br>  </br>下了大巴车。买了电瓶车的票，50块一人（这里是单独消费，并未包含在网购的套票内）。因为师傅建议做电瓶车游览，她建议的同时也解释到这是景区内唯一自费的，其它的全都包含在套票内了，我看着也挺远的。买了票，师傅帮我们拿着氧气瓶，简单交代了一下，她到下个乘车点等我们。我们便自己在蓝月谷玩了两个钟左右，拍了很多照片。</p>\n</blockquote>\n<h3 id=\"蓝月谷\"><a href=\"#蓝月谷\" class=\"headerlink\" title=\"蓝月谷\"></a>蓝月谷</h3><p><img src=\"/img/dali-lijiang/19.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/20.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/21.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/22.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/23.jpeg\" alt=\"\"></p>\n<h3 id=\"雪山雪山\"><a href=\"#雪山雪山\" class=\"headerlink\" title=\"雪山雪山\"></a>雪山雪山</h3><blockquote>\n<p>蓝月谷出来后，便坐电瓶车去找师傅。随后她带我们去吃自助餐（火锅），饭没煮熟外（不知道是不是高原的缘故），味道还行的。<br>  </br>吃完饭，师傅便带我们去排队坐大巴车去坐索道的地方，这下真的去雪山了。<br>  </br>她把氧气瓶给我们后，简单交代了些去雪山的事。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/24.jpeg\" alt=\"\"></p>\n<p>拍照3张100块，真会玩</p>\n<p><img src=\"/img/dali-lijiang/25.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/26.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/27.jpeg\" alt=\"\"></p>\n<p>全程穿短袖装逼的250</p>\n<p><img src=\"/img/dali-lijiang/28.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/29.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>被小伙的口才折服，拍了个照片。20大洋</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/30.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/31.jpeg\" alt=\"\"></p>\n<h3 id=\"甘海子-amp-逗逼的一家人\"><a href=\"#甘海子-amp-逗逼的一家人\" class=\"headerlink\" title=\"甘海子&amp;逗逼的一家人\"></a>甘海子&amp;逗逼的一家人</h3><blockquote>\n<p>从雪山下来后，直接去找师傅。师傅说话算数，带我们去甘海子玩。</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/32.jpg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/33.jpg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/34.jpg\" alt=\"\"></p>\n<h3 id=\"Last\"><a href=\"#Last\" class=\"headerlink\" title=\"Last\"></a>Last</h3><blockquote>\n<p>最后，本来想直接就先回大理住的，结果因为事先定的酒店退不了。无奈只能在丽江留宿，因为怕堵车，所以在我的建议下，我们决定第二天早上的5点从丽江出发。<br>  </br>最后在酒店旁边找了一家丽江腊排骨吃过之后。又去古城转了一圈～</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/35.jpeg\" alt=\"\"></p>\n<blockquote>\n<p>对于搬砖的我来说。对此还是挺感兴趣的，我猜测它是使用的基站定位来实现的，至于预测难道是大数据？不过好像只能对移动用户定位？因为实际人流量感觉比这多得多啊</p>\n</blockquote>\n<p><img src=\"/img/dali-lijiang/36.jpeg\" alt=\"\"></p>\n<p><img src=\"/img/dali-lijiang/37.jpeg\" alt=\"\"></p>\n<p>这货玩傻了</p>\n<p><img src=\"/img/dali-lijiang/38.jpeg\" alt=\"\"></p>\n<h3 id=\"回家\"><a href=\"#回家\" class=\"headerlink\" title=\"回家\"></a>回家</h3><p>第四天</p>\n<blockquote>\n<p>实际上我并没有4点半起床，我接近5点才起的。冲了个凉水澡，因为过一会要开车，我必须得马上保持清醒状态。<br>  </br>走得早，有好处。全程没有堵车，刚进城就开始堵。因为就在我们前面出现车祸，7张车隧道内连撞，我们在隧道外急刹车差点撞到前面那辆车。画面太….所以就不上传了。</p>\n</blockquote>\n<h3 id=\"如果有机会，我在丽江等你\"><a href=\"#如果有机会，我在丽江等你\" class=\"headerlink\" title=\"如果有机会，我在丽江等你\"></a>如果有机会，我在丽江等你</h3><p><img src=\"/img/dali-lijiang/39.jpg\" alt=\"\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这次游玩算是比较匆忙，因为我本来是要回家帮忙收包谷（玉米）的。不知怎么的？老头子和老妈子居然被姐姐说服出来玩（浪）。所以才有了这么几天的大理&amp;丽江自驾游，也是我第一次到大理&amp;丽江玩。我们5个人，不算下买东西（衣服什么乱七八糟的），只算门票+住宿+吃饭+照相+加油+停车，人均大概1100大洋左右。</p>\n<p>about 玉龙雪山，个人觉得真的值得一去。第一次去还是建议买一个那个旅游策划公司的套票，（它不是跟团，就是有人带你到那里，你自己去玩。玩好了，你去找那个人，她又带你到下个地方玩，中途你玩多长时间她完全不管你的。）因为这样有人带着你去坐车，能省下很多时间，如果你一个人自己去又是第一次。绝对要大部分时间花在找坐车的地方&amp;坐车转车上面。</p>\n<p>aoubt 购物，一定要会砍价啊，不然坑死你没得说。</p>\n<p>第一次写游记，简直就是废话连篇&amp;写的也不好。上面的照片均是我手机所拍，如有侵犯个人隐私权，请联系我删除。</p>\n"},{"title":"我的滑板女神第一天上路","date":"2020-05-24T03:19:59.000Z","_content":"\n\n第一天上路就遇到下雨，还摔了一跤，动都不敢动。\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/1qq.png\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/The-skateboard-girl-01.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>","source":"_posts/我的滑板女神第一天上路.md","raw":"---\ntitle: 我的滑板女神第一天上路\ndate: 2020-05-24 11:19:59\ntags: queen\n---\n\n\n第一天上路就遇到下雨，还摔了一跤，动都不敢动。\n\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/1qq.png\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/The-skateboard-girl-01.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>","slug":"我的滑板女神第一天上路","published":1,"updated":"2020-05-24T03:26:56.178Z","_id":"ckaki2e71000051x45w3y9m24","comments":1,"layout":"post","photos":[],"link":"","content":"<p>第一天上路就遇到下雨，还摔了一跤，动都不敢动。</p>\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/1qq.png\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/The-skateboard-girl-01.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p>第一天上路就遇到下雨，还摔了一跤，动都不敢动。</p>\n<video id=\"video\" controls=\"\" preload=\"none\" poster=\"http://520.biggerforum.org/1qq.png\">\n      <source id=\"mp4\" src=\"http://520.biggerforum.org/The-skateboard-girl-01.mp4\" type=\"video/mp4\">\n      <p>Your user agent does not support the HTML5 Video element.</p>\n</video>"},{"title":"这一辈子可能都不曾想过，最后会和陆先生走到一起","date":"2020-05-26T06:16:24.000Z","_content":"\n\n![](http://520.biggerforum.org/z1-01.jpeg)\n\n\n我和陆先生相识于7年前，那时他大一，我大二。作为老乡学姐，\n理应多给予一些同样在异乡求学的学弟学妹们一些帮助。\n我还记得我和陆先生第一次见面的场景————行知大道。尴尬的聊了几句。\n后面我们一起发传单，见证他的感情经历......\n\n\n那时的我们，真的就和亲姐弟一般，我视他为弟弟\n而陆先生，总是习惯性地叫我学姐。\n陆先生说：我那个时候对他很好，其实，关于这一点，我并没有太多印象\n亦或者是我觉得他所谓的好，在我看来是很平常的一件事\n故而，我自己也没有放在心上。\n\n大学那三年，我和陆先生的友情一直很好，尽管他后来有女朋友\n但是并没有影响我们之间的姐弟情，待他的女友也一样好。\n\n我和陆先生分开，断绝联系，是发生在她和女朋友闹分手之际，\n那几天，他总找我，向我诉说他们之间的事，希望我能够帮他\n挽回女朋友，我知道他很难过，也很着急。\n而我自己，也因为感情，一直和异性保持距离，连话都不敢讲，\n陆先生那几天找我找的太频繁了，我很无难......\n那一天，正巧我是在昆明飞机场，我印象很深刻\n是的，朋友，我要把你删了，倘若以后自由了，我一定向你道歉，\n于是，我编辑了一段很尴尬的文字，大概意思是很爱前任，\n为了前任要放弃异性朋友。\n\n当陆先生看到那段文字，他的内心应该是很绝望吧。\n一边是自己相恋多年的女友，一边是自己的知心姐姐。\n这一时刻，她们都要离他而去。\n\n这三年，我是真心把陆先生当弟弟看，从未有过男女之情，\n加上失恋双重打击。\n编辑那条QQ信息的时候，我便暗自许下承诺。\n——————— 倘若那天自由了，一定要和陆先生道歉，解释当时的原因。\n\n至于陆先生接不接受道歉，或者是否已经淡忘\n都通通没关系，我只求心安。\n就这样，我和陆先生长达4年未曾有过一丝的联系。\n\n\n和陆先生失联的这四年，我是过得极其悲惨的\n而且是痛到骨子里的痛，这种痛可能一辈子都难以疫合。\n后面得知陆先生这四年，过得也不是很好\n对于感情，我和陆先生都经历过伤痛，也学会了珍惜。\n其实我挺感谢这次疫情的\n因为疫情的特殊，让我无处可去，最后选择回家，\n倘若不是疫情，或许我会换一个地方重新开始，\n是疫情，让我回了家，那时我整整2年没回过家了。\n\n我在家一待便待了2个多月，是的，我自由了。\n这期间，我想过陆先生，想起过那个承诺。\n\n很快脑海里便会有另外一个想法————————\n\t时间都过了那么久了，他会不会已经淡忘了呢？\n\t于是，我犹豫了，或者人家已经有女朋友，结婚了也说不定的，\n\t就这样，我打消了这个念头。\n\n\n![](http://520.biggerforum.org/z1-02.jpeg)\n\n不知道过了多久，这个念头又在脑海中闪现。\n那一天,我又是一个人宅在家，当时我想———————\n\t要做一个守信用的人，既然自己当年许下承诺\n\t为何现在不去实现呢？\n\n于是，我开始大量地去翻说说评论找陆先生。\n查找的过程有些纠结，怕找错，加错。\n这样的话会很尴尬，最后，我猜定这一个一定是陆先生，\n大胆地加去吧。到不了加错了重新在找一次。\n接下来有一点程序化----输QQ号----姓名验证----加友成功。\n\n\n那一天是2020年4月24晚，我开口第一句便问：\n\n\t陆兴文？\n\n\t....\n\n\t你有女朋友没?\n\n\t....\n\n\n在确定他单身之后，我告诉了他我的来意\n让我意外的是，他还记得我，甚至也深深的牵挂过我。\n从加好友那一刻起，我们就停不下来了\n他和我讲了这几年的遭遇\n那一晚，我们聊了接近一个通宵，一切就像是学生时代一样，\n好像一点都没有变，又好像一切都变了。\n\n在我们聊了几天之后，我告诉了他我的感情经历\n“学姐，我喜欢你，你不要和别人领证\"\n当看到他发的这条信息，我是又气又好笑。\n好笑的是他让我和别和别人领证\n气的是，难道这小子也要来套路我？\n\n对于感情，我真的很怕很怕\n每一次，我都是认真对待，可是后来才明白\n我不过是被套路而矣，不过是别人养的一条鱼\n我是很失望，很失落，也很可悲的。\n我向往纯真美好的爱情，然而一切只不过是一个泡影\n所以，当我觉得是这个人的时候\n我是很想去珍惜和把握的\n我知道，人这一生，能够有幸遇到真心待自己的人\n是很很难的，假如遇到了，我真的不想错过。\n\n刚再一次开始接触陆兴文，一切还停留在学生时代\n又一次见面是2020、4、29\n那天天气很好，当天陆先生穿了一件黑色短袖+牛仔裤\n这样的打扮，简直和学生时代一毛一样\n陆先生走路还是一样的一晃一晃，一甩一甩的\n难怪人称“甩甩”\n\n我们简单地互相打过照面，一切好像都没变\n按计划，我们先吃早餐，然后自驾去重庆\n这里补充一下去重庆的由来：\n> 原本是那谁要陪我去重庆，但陆先生听说这人不靠谱，于是主动提出要陪我去，一开始，我是拒绝的，作为朋友，我觉得很麻烦人家，毕竟那时重庆，不是附近的小地方，走几步就到，然而，陆先生一再坚持，加上我的情况特殊，确实需要一个人陪同，于是我们达成了共识，一同上重庆。\n\n\n![](http://520.biggerforum.org/z1-03.jpeg)\n\n\n作为一个东道主，其实我对丘北也不是很熟\n那里好吃好玩，我是一概不知的\n我知道的，仅仅是姐姐们或者朋友带我去过哪里\n我觉得好，下次再来便是，不好，则不再来\n这就是我熟悉没事的方法，这样真的是又笨又慢\n谁让我爱宅呢？不主动出击，只能被动选择\n所以，我印象中巷子里那家酸汤米线不错，把它作为早餐点。\n\n可能4年未见，又可能是以前的相处模式便是如此\n陆先生总是走在我前面，快我几步，我们总是隔3米远\n倘若是朋友，我是不在乎的，若是作为另一半，我是介意的\n都不知道等我一下，以后会知道宠我吗？\n\n吃过早餐，坐上车，我以为我们要出发去重庆了\n\n\t“学姐，我们去一趟普者黑吧”\n\t“有事？还是说你要去接人？“\n\t”我有很重要的事要去做！“\n\n当时车里放着”我喜欢你“这首歌，我问他是具体什么事？\n陆先生闭口不说，只说有很重要的事要做。\n那一刻，我有些紧张————他不会事要表白吧？\n一路就这样，紧张又不知所措。\n假如他真表白了，我是该接受还是不该接受呢？\n\n过了几分钟，我们来到了喷泉音乐广场\n陆先生让我先下车，背着他走在前，他说要准备一下说词\n当时，我挺不知所措，不知该正对着他，还是背对好\n最后我选择了一个比较尴尬的姿势————侧着对他\n而我的正对面，是一个旋转木马\n\n那一刻，陆先生其实说了挺多，大概意思如下：\n\n我一直以为这些年你过得挺好\n如果别人不能保护你\n那么换我来吧\n即使你现在不喜欢我也没关系\n我会努力对你好，让你喜欢我\n\n听完陆先生的告白，陆先生双手将一束粉色的玫瑰递上\n当时我是挺不想接受花的，接受花是否代表同意交往呢？\n可是，我们整整4年未见，目前我对他是胡真没那感觉\n陆先生一再坚持，我亦不好这样浪费时间\n\n“花我可以先收下，感情的事我们再慢慢相处”\n“目前我并没有答应，我想考虑一下”\n\n就这样接受了陆先生的花\n结束了告白仪式，随后便踏上了重庆之旅。\n\n![](http://520.biggerforum.org/z1-04.jpeg)\n\n\n去重庆的路上，大多顺利，唯独一个小插曲————陆先生生病了，在叙永\n好的一点是我带了药，这药原本是给自己准备的\n不成想竟用在了陆先生身上\n陆先生应该很难受，我们无法前行，为安全考虑\n我们在叙永休息了很久\n陆先生吃了我带的药，像个孩子一样\n倚靠在我身旁，嘴巴一直在念叨：\n\n“学姐，我喜欢你”\n“学姐，我爱你”\n“你知道吗？看着你和别人纠缠不断的时候，我很心痛“\n\n此时，陆先生迷迷糊糊的吻了我一下。\n是的，他成功的吻了一下我的嘴唇\n天哪，这一幕太不可信了，他是陆兴文，是学弟，是弟弟呀！\n这一切太不可思议了，而且，为什么我没有拒绝？没有一把推开呢？\n为什么好像我的身体并没有对他产生抗拒？\n我知道，喜不喜欢一个人，嘴巴会骗，但是身体是很诚实的\n这一刻，我慌了\n\n陆先生生病了，我还是会像姐姐一样好好照顾他\n对他不会有一丝男女之情\n然而那个吻，轻轻的一个吻，我的内心慌乱了。\n\n在心里，我问自己————“喜欢他吗？” 好像不喜欢！\n可是，那个吻是怎么回事呢？\n是的，这个不经意的吻成功地引起了我的胡思乱想\n我直白地告诉陆先生：\n\n作为姐姐，你的一切坏毛病我都会尽力包容\n我会尽力地去帮助你的一切，照顾你的一切\n但是，作为女友的话，我需要的是——你宠爱\n一切都会反过来，而且你做得不好我还会批评你。\n\n\n就这样，莫名其妙的在一起了，一切也自然而然地发生\n就像一般恋人时期的热恋期一样\n陆先生也在尽其所能地给我宠爱：\n\n为我解决后顾之忧\n给我买各种礼物\n\n这时的我，倒成了个小孩子\n\n陆先生说他早已把握当家人，所以给我录指纹，带我见家人......\n一切的一切，都很美好。\n\n我并不是贪图陆先生对我的好，或许我对陆先生的感觉\n不及陆先生对我强烈，但是，我是喜欢陆先生的\n是啊，真奇怪，我怎么会喜欢上自己曾经的“弟弟”呢？\n\n![](http://520.biggerforum.org/z1-05.jpeg)\n\n陆先生虽比我小，但陆先生与同龄人相比，也算成熟得多\n这也是我不介意他比我小3岁的原因之一\n再有，我觉得和陆先生相处的时候，一切都挺自然、自在的\n我很喜欢这种相处模式\n和陆先生相处久了，便越发的依恋他，舍不得和他分离\n\n我和陆先生异地，他在个旧，我在丘北\n这几次都是陆先生空了就下来看我\n最近最感动的应该就是我生病之事，我身体不好，作为另一半\n我们虽未结婚，但我不该瞒他，我觉得自己是自私的\n这样会拖累陆先生的，那一刻，我是有想放弃的念头\n尽管我和陆先生在一起，我们各自都觉得很合适\n人这一生，伴侣莫过于互知冷暖，相互疼爱。\n或许我们都是被爱情折腾够的人\n当我们再一次相聚时，产生了化学反应，相聚，相知，相恋\n我当然很舍不得陆先生，他是这么好的一个人\n也正是这么好的一个人，我如何能如此自私呢\n\n我哭了\n陆先生也哭了\n陆先生说：无论怎样，他都要陪我一起走，绝不扔下我\n为了提前实习，做一个好丈夫，陆先生从收拾自己的卧室开始\n陆先生说，要照顾我一辈子，宠我一辈子\n那么，就从改掉懒惰开始吧！\n\n看，多么好的一个男孩子\n倘若是其他人，得知我身体不好，一定会慢慢对我冷淡\n最后选择离开我，这一切我又怎会不知\n只是与其说等对方将我抛弃，我还不如掌握主动权\n这样的话，离开那一刻依然是有爱的\n是美好的，而不至于太\n过于悲惨\n可是，陆先生没有退缩\n他选择和我站一起，选择见家长\n那一刻，我的心，又暖又疼\n陆先生是一个又担当的男人，这里我不禁要问自己：\n\n是否配得上这样的一个好男人？\n我该怎么样做才能配得上他的赤诚？\n\n![](http://520.biggerforum.org/z1-06.jpeg)\n\n大概是2020、5、23，周六晚吧，我和陆先生一起玩滑板\n那是我和陆先生人生中第一次一起玩滑板\n原本我们是在普者黑玩的，不巧的是下雨了，我们便一起在亭下避雨\n陆先生头发都淋湿了，看着有点傻傻的，竟也有点可爱\n那时，码头的荷叶已经露出水面，给水乡又添了一丝色彩\n路旁的蓝花盈盛开着，花瓣洒落在人行道上\n路灯微微照亮，我和陆先生相拥在码头上\n此情此景，怎一个美字了得\n可惜的是，这样的画面只能在脑海中浮现\n未曾用镜头记录下来\n陆先生平时经常给我拍照，他说他要录vlog\n而且是一辈子的那种\n\n\n雨停之后，我们散过步，记录下美好的时刻，我们便返回城里。\n返回城里的第一件事竟是去广场再次玩滑板\n像我和陆先生这样的可能也少\n我们无不良嗜好，还能一起互相拍照，一起玩滑板\n此外，陆先生生活中也挺照顾我的\n系鞋带、穿袜子、鞋子、衣服...\n打住，我并不是缺乏自理能力，我自己做这一切会更有效率\n\n可我独独很享受陆先生这般照顾我\n因为他是我的另一半，我恋他，依赖他\n所以我喜欢他照顾我\n和陆先生在一起，我真的很开心\n笑容多了，也渐渐开朗多了\n陆先生带给我了很多\n虽然陆先生常说和我在一起很开心，很开心\n但是我自己也不知道，究竟给陆先生带来过什么？\n我知道他宠我，但是我也心疼他\n我不希望他只知道一味的宠我，自己委屈了也不告诉我\n所以，我经常鼓励他有什么要和我说\n当然，当我自己意识到问题的时候，我也会反思，会改正\n\n\n那天晚上，我们一直很开心\n然而，半夜的时候，也不知道几点\n我隐约觉得在梦里身体就很不舒服，总觉得想吐\n在梦里挣扎不过，突然立马起身就跑到厕所”放鞭炮“了，\n一切真是说时迟，那时快\n陆先生见我起身也随我来到厕所，在我身旁照顾我。\n发泄完之后，我整个人时晕呼呼的，回到床上后\n却难以入睡，才过几分钟，又拉肚子\n真是上吐下泻的，头又晕，感觉整个人快不行了\n\n\n##### 这里陆先生附上滑滑板的vLog，刚开始学习摄影\n\n<iframe src=\"//player.bilibili.com/player.html?aid=795803043&bvid=BV17C4y1p7mZ&cid=194548776&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n视频源地址： https://www.bilibili.com/video/BV17C4y1p7mZ/\n\n\n\n![](http://520.biggerforum.org/z1-07.jpeg)\n\n折腾完这一切，我整个人都虚了，怎么回的床\n我都不记得了，那个时候天灰蒙蒙的\n随后，我似乎又迷迷糊糊过去了\n隐约只记得陆先生说他要出去一下，至于去干嘛\n我完全没听清就晕睡过去了\n\n待我醒来时，陆先生给我带了稀饭，买了药\n多细心的一个男孩子，对丘北不熟，一定没少跑吧\n让我去买稀饭我还不一定找得到在哪买呢！\n不过，那时的我，晕晕呼呼的，也没想到这些\n我只记得一会陆先生喂我吃稀饭，一会又跑去泡药\n一会又喂我吃药，那时的我，完全处于迟钝状态\n陆先生叫我干嘛，我便干嘛\n陆先生说:以前都是我在照顾他，这次换他来照顾我\n\n吃过早餐，喝了药，我又躺了下去，原以为一会便会好转\n没成想，不一会功夫，吃下的全吐了出来，肚子也没闲着\n这是一段又味道的文字，然而，陆先生他竟然站在门口\n我知道，陆先生时担心我有所需要\n他选择站在我的视线内，以便可以随时上前帮忙\n这一点，陆先生真的很暖\n谈到这，又不得不提半夜我起夜的时候\n睡眼很惺松，我连被子都没又掀一下\n陆先生便一个公主抱就把我抱进厕所\n我很自然的搂着他的脖子，像个孩子一样被抱着\n那时的我并不算很清醒，还适不适合用手揉揉睁不开的眼睛\n心里却是甜甜的，心想：\n这怕不是在演偶像剧？\n\n接着说生病的事，哪一个半夜我挺忙，忙着上吐下泄\n回到床又倒头不知东南西北\n只是梦里好像一直听到陆先生在忙\n时而坐在我身旁敲电脑，时而在洗东西\n待我再一次醒来才知，原来陆先生忙着帮我\n剪视频、洗滑板\n\n陆先生见我醒来，问我身体是否好转，是否要起身？\n接着就是“爸爸”给“女儿”从头到脚\n一样一样地帮我穿好\n嘴里还时不时念叨“我真笨”，衣服\n都穿不好\n\n看到这一切，我不由地说了一句————\n有你真好！\n\n\n![](http://520.biggerforum.org/z1-08.jpeg)\n\n回想我和陆先生这一路走来，真的挺奇妙：\n\n- 初中三年，校友，不识\n- 高中三年，水平线，无任何交集\n- 大学4年，3年相识，我主动结交的陆先生\n- 后来失联4年，杳无信息\n- 2020.4.24，我因一口诺言，主动找回陆先生\n\n自从和陆先生在一起，我仿佛感受到了上天的宠爱\n一切刚刚好，一切又让我们回到了从前，让我们找到了彼此\n有人说，因果相随\n我和陆先生的因\n- 一是我2次主动联系陆先生\n- 二是我先前真心待陆先生如弟弟般\n\n果便是陆先生从此记住了我的好，也牵挂过我。\n当得知我过得并不好的时候\n他便忍不住站出来，想要去保护我\n以前是我争取他，即便争取的只是朋\n友的缘分\n而这一次，却是陆先生一直在争取我\n只是这一次，换成了爱情！\n\n因此，遇到了，就不想错过，只想好好把握\n所以，陆先生和我，原本不会擦出爱情火花的两个人\n竟然真的在2020、5、1产生了交集，走到了一起\n还好，一切都还不算太晚\n一切都还来得及\n一切都刚刚好\n我知道，我和陆先生也会有矛盾的时候\n只要我们坦诚相待，好好沟通\n我相信，我们会一直幸福下去。\n\n\n**亲爱的陆先生，感谢有你！**\n**余生，愿与你共同努力，和你一起走下去！**\n\n\n2020、5、26,周二,阴\n补写于粉色书桌上.\n\n\n\n\n","source":"_posts/这一辈子可能都不曾想过，最后会和陆先生走到一起.md","raw":"---\ntitle: 这一辈子可能都不曾想过，最后会和陆先生走到一起\ndate: 2020-05-26 14:16:24\ntags: queen\n---\n\n\n![](http://520.biggerforum.org/z1-01.jpeg)\n\n\n我和陆先生相识于7年前，那时他大一，我大二。作为老乡学姐，\n理应多给予一些同样在异乡求学的学弟学妹们一些帮助。\n我还记得我和陆先生第一次见面的场景————行知大道。尴尬的聊了几句。\n后面我们一起发传单，见证他的感情经历......\n\n\n那时的我们，真的就和亲姐弟一般，我视他为弟弟\n而陆先生，总是习惯性地叫我学姐。\n陆先生说：我那个时候对他很好，其实，关于这一点，我并没有太多印象\n亦或者是我觉得他所谓的好，在我看来是很平常的一件事\n故而，我自己也没有放在心上。\n\n大学那三年，我和陆先生的友情一直很好，尽管他后来有女朋友\n但是并没有影响我们之间的姐弟情，待他的女友也一样好。\n\n我和陆先生分开，断绝联系，是发生在她和女朋友闹分手之际，\n那几天，他总找我，向我诉说他们之间的事，希望我能够帮他\n挽回女朋友，我知道他很难过，也很着急。\n而我自己，也因为感情，一直和异性保持距离，连话都不敢讲，\n陆先生那几天找我找的太频繁了，我很无难......\n那一天，正巧我是在昆明飞机场，我印象很深刻\n是的，朋友，我要把你删了，倘若以后自由了，我一定向你道歉，\n于是，我编辑了一段很尴尬的文字，大概意思是很爱前任，\n为了前任要放弃异性朋友。\n\n当陆先生看到那段文字，他的内心应该是很绝望吧。\n一边是自己相恋多年的女友，一边是自己的知心姐姐。\n这一时刻，她们都要离他而去。\n\n这三年，我是真心把陆先生当弟弟看，从未有过男女之情，\n加上失恋双重打击。\n编辑那条QQ信息的时候，我便暗自许下承诺。\n——————— 倘若那天自由了，一定要和陆先生道歉，解释当时的原因。\n\n至于陆先生接不接受道歉，或者是否已经淡忘\n都通通没关系，我只求心安。\n就这样，我和陆先生长达4年未曾有过一丝的联系。\n\n\n和陆先生失联的这四年，我是过得极其悲惨的\n而且是痛到骨子里的痛，这种痛可能一辈子都难以疫合。\n后面得知陆先生这四年，过得也不是很好\n对于感情，我和陆先生都经历过伤痛，也学会了珍惜。\n其实我挺感谢这次疫情的\n因为疫情的特殊，让我无处可去，最后选择回家，\n倘若不是疫情，或许我会换一个地方重新开始，\n是疫情，让我回了家，那时我整整2年没回过家了。\n\n我在家一待便待了2个多月，是的，我自由了。\n这期间，我想过陆先生，想起过那个承诺。\n\n很快脑海里便会有另外一个想法————————\n\t时间都过了那么久了，他会不会已经淡忘了呢？\n\t于是，我犹豫了，或者人家已经有女朋友，结婚了也说不定的，\n\t就这样，我打消了这个念头。\n\n\n![](http://520.biggerforum.org/z1-02.jpeg)\n\n不知道过了多久，这个念头又在脑海中闪现。\n那一天,我又是一个人宅在家，当时我想———————\n\t要做一个守信用的人，既然自己当年许下承诺\n\t为何现在不去实现呢？\n\n于是，我开始大量地去翻说说评论找陆先生。\n查找的过程有些纠结，怕找错，加错。\n这样的话会很尴尬，最后，我猜定这一个一定是陆先生，\n大胆地加去吧。到不了加错了重新在找一次。\n接下来有一点程序化----输QQ号----姓名验证----加友成功。\n\n\n那一天是2020年4月24晚，我开口第一句便问：\n\n\t陆兴文？\n\n\t....\n\n\t你有女朋友没?\n\n\t....\n\n\n在确定他单身之后，我告诉了他我的来意\n让我意外的是，他还记得我，甚至也深深的牵挂过我。\n从加好友那一刻起，我们就停不下来了\n他和我讲了这几年的遭遇\n那一晚，我们聊了接近一个通宵，一切就像是学生时代一样，\n好像一点都没有变，又好像一切都变了。\n\n在我们聊了几天之后，我告诉了他我的感情经历\n“学姐，我喜欢你，你不要和别人领证\"\n当看到他发的这条信息，我是又气又好笑。\n好笑的是他让我和别和别人领证\n气的是，难道这小子也要来套路我？\n\n对于感情，我真的很怕很怕\n每一次，我都是认真对待，可是后来才明白\n我不过是被套路而矣，不过是别人养的一条鱼\n我是很失望，很失落，也很可悲的。\n我向往纯真美好的爱情，然而一切只不过是一个泡影\n所以，当我觉得是这个人的时候\n我是很想去珍惜和把握的\n我知道，人这一生，能够有幸遇到真心待自己的人\n是很很难的，假如遇到了，我真的不想错过。\n\n刚再一次开始接触陆兴文，一切还停留在学生时代\n又一次见面是2020、4、29\n那天天气很好，当天陆先生穿了一件黑色短袖+牛仔裤\n这样的打扮，简直和学生时代一毛一样\n陆先生走路还是一样的一晃一晃，一甩一甩的\n难怪人称“甩甩”\n\n我们简单地互相打过照面，一切好像都没变\n按计划，我们先吃早餐，然后自驾去重庆\n这里补充一下去重庆的由来：\n> 原本是那谁要陪我去重庆，但陆先生听说这人不靠谱，于是主动提出要陪我去，一开始，我是拒绝的，作为朋友，我觉得很麻烦人家，毕竟那时重庆，不是附近的小地方，走几步就到，然而，陆先生一再坚持，加上我的情况特殊，确实需要一个人陪同，于是我们达成了共识，一同上重庆。\n\n\n![](http://520.biggerforum.org/z1-03.jpeg)\n\n\n作为一个东道主，其实我对丘北也不是很熟\n那里好吃好玩，我是一概不知的\n我知道的，仅仅是姐姐们或者朋友带我去过哪里\n我觉得好，下次再来便是，不好，则不再来\n这就是我熟悉没事的方法，这样真的是又笨又慢\n谁让我爱宅呢？不主动出击，只能被动选择\n所以，我印象中巷子里那家酸汤米线不错，把它作为早餐点。\n\n可能4年未见，又可能是以前的相处模式便是如此\n陆先生总是走在我前面，快我几步，我们总是隔3米远\n倘若是朋友，我是不在乎的，若是作为另一半，我是介意的\n都不知道等我一下，以后会知道宠我吗？\n\n吃过早餐，坐上车，我以为我们要出发去重庆了\n\n\t“学姐，我们去一趟普者黑吧”\n\t“有事？还是说你要去接人？“\n\t”我有很重要的事要去做！“\n\n当时车里放着”我喜欢你“这首歌，我问他是具体什么事？\n陆先生闭口不说，只说有很重要的事要做。\n那一刻，我有些紧张————他不会事要表白吧？\n一路就这样，紧张又不知所措。\n假如他真表白了，我是该接受还是不该接受呢？\n\n过了几分钟，我们来到了喷泉音乐广场\n陆先生让我先下车，背着他走在前，他说要准备一下说词\n当时，我挺不知所措，不知该正对着他，还是背对好\n最后我选择了一个比较尴尬的姿势————侧着对他\n而我的正对面，是一个旋转木马\n\n那一刻，陆先生其实说了挺多，大概意思如下：\n\n我一直以为这些年你过得挺好\n如果别人不能保护你\n那么换我来吧\n即使你现在不喜欢我也没关系\n我会努力对你好，让你喜欢我\n\n听完陆先生的告白，陆先生双手将一束粉色的玫瑰递上\n当时我是挺不想接受花的，接受花是否代表同意交往呢？\n可是，我们整整4年未见，目前我对他是胡真没那感觉\n陆先生一再坚持，我亦不好这样浪费时间\n\n“花我可以先收下，感情的事我们再慢慢相处”\n“目前我并没有答应，我想考虑一下”\n\n就这样接受了陆先生的花\n结束了告白仪式，随后便踏上了重庆之旅。\n\n![](http://520.biggerforum.org/z1-04.jpeg)\n\n\n去重庆的路上，大多顺利，唯独一个小插曲————陆先生生病了，在叙永\n好的一点是我带了药，这药原本是给自己准备的\n不成想竟用在了陆先生身上\n陆先生应该很难受，我们无法前行，为安全考虑\n我们在叙永休息了很久\n陆先生吃了我带的药，像个孩子一样\n倚靠在我身旁，嘴巴一直在念叨：\n\n“学姐，我喜欢你”\n“学姐，我爱你”\n“你知道吗？看着你和别人纠缠不断的时候，我很心痛“\n\n此时，陆先生迷迷糊糊的吻了我一下。\n是的，他成功的吻了一下我的嘴唇\n天哪，这一幕太不可信了，他是陆兴文，是学弟，是弟弟呀！\n这一切太不可思议了，而且，为什么我没有拒绝？没有一把推开呢？\n为什么好像我的身体并没有对他产生抗拒？\n我知道，喜不喜欢一个人，嘴巴会骗，但是身体是很诚实的\n这一刻，我慌了\n\n陆先生生病了，我还是会像姐姐一样好好照顾他\n对他不会有一丝男女之情\n然而那个吻，轻轻的一个吻，我的内心慌乱了。\n\n在心里，我问自己————“喜欢他吗？” 好像不喜欢！\n可是，那个吻是怎么回事呢？\n是的，这个不经意的吻成功地引起了我的胡思乱想\n我直白地告诉陆先生：\n\n作为姐姐，你的一切坏毛病我都会尽力包容\n我会尽力地去帮助你的一切，照顾你的一切\n但是，作为女友的话，我需要的是——你宠爱\n一切都会反过来，而且你做得不好我还会批评你。\n\n\n就这样，莫名其妙的在一起了，一切也自然而然地发生\n就像一般恋人时期的热恋期一样\n陆先生也在尽其所能地给我宠爱：\n\n为我解决后顾之忧\n给我买各种礼物\n\n这时的我，倒成了个小孩子\n\n陆先生说他早已把握当家人，所以给我录指纹，带我见家人......\n一切的一切，都很美好。\n\n我并不是贪图陆先生对我的好，或许我对陆先生的感觉\n不及陆先生对我强烈，但是，我是喜欢陆先生的\n是啊，真奇怪，我怎么会喜欢上自己曾经的“弟弟”呢？\n\n![](http://520.biggerforum.org/z1-05.jpeg)\n\n陆先生虽比我小，但陆先生与同龄人相比，也算成熟得多\n这也是我不介意他比我小3岁的原因之一\n再有，我觉得和陆先生相处的时候，一切都挺自然、自在的\n我很喜欢这种相处模式\n和陆先生相处久了，便越发的依恋他，舍不得和他分离\n\n我和陆先生异地，他在个旧，我在丘北\n这几次都是陆先生空了就下来看我\n最近最感动的应该就是我生病之事，我身体不好，作为另一半\n我们虽未结婚，但我不该瞒他，我觉得自己是自私的\n这样会拖累陆先生的，那一刻，我是有想放弃的念头\n尽管我和陆先生在一起，我们各自都觉得很合适\n人这一生，伴侣莫过于互知冷暖，相互疼爱。\n或许我们都是被爱情折腾够的人\n当我们再一次相聚时，产生了化学反应，相聚，相知，相恋\n我当然很舍不得陆先生，他是这么好的一个人\n也正是这么好的一个人，我如何能如此自私呢\n\n我哭了\n陆先生也哭了\n陆先生说：无论怎样，他都要陪我一起走，绝不扔下我\n为了提前实习，做一个好丈夫，陆先生从收拾自己的卧室开始\n陆先生说，要照顾我一辈子，宠我一辈子\n那么，就从改掉懒惰开始吧！\n\n看，多么好的一个男孩子\n倘若是其他人，得知我身体不好，一定会慢慢对我冷淡\n最后选择离开我，这一切我又怎会不知\n只是与其说等对方将我抛弃，我还不如掌握主动权\n这样的话，离开那一刻依然是有爱的\n是美好的，而不至于太\n过于悲惨\n可是，陆先生没有退缩\n他选择和我站一起，选择见家长\n那一刻，我的心，又暖又疼\n陆先生是一个又担当的男人，这里我不禁要问自己：\n\n是否配得上这样的一个好男人？\n我该怎么样做才能配得上他的赤诚？\n\n![](http://520.biggerforum.org/z1-06.jpeg)\n\n大概是2020、5、23，周六晚吧，我和陆先生一起玩滑板\n那是我和陆先生人生中第一次一起玩滑板\n原本我们是在普者黑玩的，不巧的是下雨了，我们便一起在亭下避雨\n陆先生头发都淋湿了，看着有点傻傻的，竟也有点可爱\n那时，码头的荷叶已经露出水面，给水乡又添了一丝色彩\n路旁的蓝花盈盛开着，花瓣洒落在人行道上\n路灯微微照亮，我和陆先生相拥在码头上\n此情此景，怎一个美字了得\n可惜的是，这样的画面只能在脑海中浮现\n未曾用镜头记录下来\n陆先生平时经常给我拍照，他说他要录vlog\n而且是一辈子的那种\n\n\n雨停之后，我们散过步，记录下美好的时刻，我们便返回城里。\n返回城里的第一件事竟是去广场再次玩滑板\n像我和陆先生这样的可能也少\n我们无不良嗜好，还能一起互相拍照，一起玩滑板\n此外，陆先生生活中也挺照顾我的\n系鞋带、穿袜子、鞋子、衣服...\n打住，我并不是缺乏自理能力，我自己做这一切会更有效率\n\n可我独独很享受陆先生这般照顾我\n因为他是我的另一半，我恋他，依赖他\n所以我喜欢他照顾我\n和陆先生在一起，我真的很开心\n笑容多了，也渐渐开朗多了\n陆先生带给我了很多\n虽然陆先生常说和我在一起很开心，很开心\n但是我自己也不知道，究竟给陆先生带来过什么？\n我知道他宠我，但是我也心疼他\n我不希望他只知道一味的宠我，自己委屈了也不告诉我\n所以，我经常鼓励他有什么要和我说\n当然，当我自己意识到问题的时候，我也会反思，会改正\n\n\n那天晚上，我们一直很开心\n然而，半夜的时候，也不知道几点\n我隐约觉得在梦里身体就很不舒服，总觉得想吐\n在梦里挣扎不过，突然立马起身就跑到厕所”放鞭炮“了，\n一切真是说时迟，那时快\n陆先生见我起身也随我来到厕所，在我身旁照顾我。\n发泄完之后，我整个人时晕呼呼的，回到床上后\n却难以入睡，才过几分钟，又拉肚子\n真是上吐下泻的，头又晕，感觉整个人快不行了\n\n\n##### 这里陆先生附上滑滑板的vLog，刚开始学习摄影\n\n<iframe src=\"//player.bilibili.com/player.html?aid=795803043&bvid=BV17C4y1p7mZ&cid=194548776&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n视频源地址： https://www.bilibili.com/video/BV17C4y1p7mZ/\n\n\n\n![](http://520.biggerforum.org/z1-07.jpeg)\n\n折腾完这一切，我整个人都虚了，怎么回的床\n我都不记得了，那个时候天灰蒙蒙的\n随后，我似乎又迷迷糊糊过去了\n隐约只记得陆先生说他要出去一下，至于去干嘛\n我完全没听清就晕睡过去了\n\n待我醒来时，陆先生给我带了稀饭，买了药\n多细心的一个男孩子，对丘北不熟，一定没少跑吧\n让我去买稀饭我还不一定找得到在哪买呢！\n不过，那时的我，晕晕呼呼的，也没想到这些\n我只记得一会陆先生喂我吃稀饭，一会又跑去泡药\n一会又喂我吃药，那时的我，完全处于迟钝状态\n陆先生叫我干嘛，我便干嘛\n陆先生说:以前都是我在照顾他，这次换他来照顾我\n\n吃过早餐，喝了药，我又躺了下去，原以为一会便会好转\n没成想，不一会功夫，吃下的全吐了出来，肚子也没闲着\n这是一段又味道的文字，然而，陆先生他竟然站在门口\n我知道，陆先生时担心我有所需要\n他选择站在我的视线内，以便可以随时上前帮忙\n这一点，陆先生真的很暖\n谈到这，又不得不提半夜我起夜的时候\n睡眼很惺松，我连被子都没又掀一下\n陆先生便一个公主抱就把我抱进厕所\n我很自然的搂着他的脖子，像个孩子一样被抱着\n那时的我并不算很清醒，还适不适合用手揉揉睁不开的眼睛\n心里却是甜甜的，心想：\n这怕不是在演偶像剧？\n\n接着说生病的事，哪一个半夜我挺忙，忙着上吐下泄\n回到床又倒头不知东南西北\n只是梦里好像一直听到陆先生在忙\n时而坐在我身旁敲电脑，时而在洗东西\n待我再一次醒来才知，原来陆先生忙着帮我\n剪视频、洗滑板\n\n陆先生见我醒来，问我身体是否好转，是否要起身？\n接着就是“爸爸”给“女儿”从头到脚\n一样一样地帮我穿好\n嘴里还时不时念叨“我真笨”，衣服\n都穿不好\n\n看到这一切，我不由地说了一句————\n有你真好！\n\n\n![](http://520.biggerforum.org/z1-08.jpeg)\n\n回想我和陆先生这一路走来，真的挺奇妙：\n\n- 初中三年，校友，不识\n- 高中三年，水平线，无任何交集\n- 大学4年，3年相识，我主动结交的陆先生\n- 后来失联4年，杳无信息\n- 2020.4.24，我因一口诺言，主动找回陆先生\n\n自从和陆先生在一起，我仿佛感受到了上天的宠爱\n一切刚刚好，一切又让我们回到了从前，让我们找到了彼此\n有人说，因果相随\n我和陆先生的因\n- 一是我2次主动联系陆先生\n- 二是我先前真心待陆先生如弟弟般\n\n果便是陆先生从此记住了我的好，也牵挂过我。\n当得知我过得并不好的时候\n他便忍不住站出来，想要去保护我\n以前是我争取他，即便争取的只是朋\n友的缘分\n而这一次，却是陆先生一直在争取我\n只是这一次，换成了爱情！\n\n因此，遇到了，就不想错过，只想好好把握\n所以，陆先生和我，原本不会擦出爱情火花的两个人\n竟然真的在2020、5、1产生了交集，走到了一起\n还好，一切都还不算太晚\n一切都还来得及\n一切都刚刚好\n我知道，我和陆先生也会有矛盾的时候\n只要我们坦诚相待，好好沟通\n我相信，我们会一直幸福下去。\n\n\n**亲爱的陆先生，感谢有你！**\n**余生，愿与你共同努力，和你一起走下去！**\n\n\n2020、5、26,周二,阴\n补写于粉色书桌上.\n\n\n\n\n","slug":"这一辈子可能都不曾想过，最后会和陆先生走到一起","published":1,"updated":"2020-05-27T10:05:50.429Z","_id":"ckankdona0000anx4eea43xrk","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://520.biggerforum.org/z1-01.jpeg\" alt=\"\"></p>\n<p>我和陆先生相识于7年前，那时他大一，我大二。作为老乡学姐，<br>理应多给予一些同样在异乡求学的学弟学妹们一些帮助。<br>我还记得我和陆先生第一次见面的场景————行知大道。尴尬的聊了几句。<br>后面我们一起发传单，见证他的感情经历……</p>\n<p>那时的我们，真的就和亲姐弟一般，我视他为弟弟<br>而陆先生，总是习惯性地叫我学姐。<br>陆先生说：我那个时候对他很好，其实，关于这一点，我并没有太多印象<br>亦或者是我觉得他所谓的好，在我看来是很平常的一件事<br>故而，我自己也没有放在心上。</p>\n<p>大学那三年，我和陆先生的友情一直很好，尽管他后来有女朋友<br>但是并没有影响我们之间的姐弟情，待他的女友也一样好。</p>\n<p>我和陆先生分开，断绝联系，是发生在她和女朋友闹分手之际，<br>那几天，他总找我，向我诉说他们之间的事，希望我能够帮他<br>挽回女朋友，我知道他很难过，也很着急。<br>而我自己，也因为感情，一直和异性保持距离，连话都不敢讲，<br>陆先生那几天找我找的太频繁了，我很无难……<br>那一天，正巧我是在昆明飞机场，我印象很深刻<br>是的，朋友，我要把你删了，倘若以后自由了，我一定向你道歉，<br>于是，我编辑了一段很尴尬的文字，大概意思是很爱前任，<br>为了前任要放弃异性朋友。</p>\n<p>当陆先生看到那段文字，他的内心应该是很绝望吧。<br>一边是自己相恋多年的女友，一边是自己的知心姐姐。<br>这一时刻，她们都要离他而去。</p>\n<p>这三年，我是真心把陆先生当弟弟看，从未有过男女之情，<br>加上失恋双重打击。<br>编辑那条QQ信息的时候，我便暗自许下承诺。<br>——————— 倘若那天自由了，一定要和陆先生道歉，解释当时的原因。</p>\n<p>至于陆先生接不接受道歉，或者是否已经淡忘<br>都通通没关系，我只求心安。<br>就这样，我和陆先生长达4年未曾有过一丝的联系。</p>\n<p>和陆先生失联的这四年，我是过得极其悲惨的<br>而且是痛到骨子里的痛，这种痛可能一辈子都难以疫合。<br>后面得知陆先生这四年，过得也不是很好<br>对于感情，我和陆先生都经历过伤痛，也学会了珍惜。<br>其实我挺感谢这次疫情的<br>因为疫情的特殊，让我无处可去，最后选择回家，<br>倘若不是疫情，或许我会换一个地方重新开始，<br>是疫情，让我回了家，那时我整整2年没回过家了。</p>\n<p>我在家一待便待了2个多月，是的，我自由了。<br>这期间，我想过陆先生，想起过那个承诺。</p>\n<p>很快脑海里便会有另外一个想法————————<br>    时间都过了那么久了，他会不会已经淡忘了呢？<br>    于是，我犹豫了，或者人家已经有女朋友，结婚了也说不定的，<br>    就这样，我打消了这个念头。</p>\n<p><img src=\"http://520.biggerforum.org/z1-02.jpeg\" alt=\"\"></p>\n<p>不知道过了多久，这个念头又在脑海中闪现。<br>那一天,我又是一个人宅在家，当时我想———————<br>    要做一个守信用的人，既然自己当年许下承诺<br>    为何现在不去实现呢？</p>\n<p>于是，我开始大量地去翻说说评论找陆先生。<br>查找的过程有些纠结，怕找错，加错。<br>这样的话会很尴尬，最后，我猜定这一个一定是陆先生，<br>大胆地加去吧。到不了加错了重新在找一次。<br>接下来有一点程序化—-输QQ号—-姓名验证—-加友成功。</p>\n<p>那一天是2020年4月24晚，我开口第一句便问：</p>\n<pre><code>陆兴文？\n\n....\n\n你有女朋友没?\n\n....</code></pre><p>在确定他单身之后，我告诉了他我的来意<br>让我意外的是，他还记得我，甚至也深深的牵挂过我。<br>从加好友那一刻起，我们就停不下来了<br>他和我讲了这几年的遭遇<br>那一晚，我们聊了接近一个通宵，一切就像是学生时代一样，<br>好像一点都没有变，又好像一切都变了。</p>\n<p>在我们聊了几天之后，我告诉了他我的感情经历<br>“学姐，我喜欢你，你不要和别人领证”<br>当看到他发的这条信息，我是又气又好笑。<br>好笑的是他让我和别和别人领证<br>气的是，难道这小子也要来套路我？</p>\n<p>对于感情，我真的很怕很怕<br>每一次，我都是认真对待，可是后来才明白<br>我不过是被套路而矣，不过是别人养的一条鱼<br>我是很失望，很失落，也很可悲的。<br>我向往纯真美好的爱情，然而一切只不过是一个泡影<br>所以，当我觉得是这个人的时候<br>我是很想去珍惜和把握的<br>我知道，人这一生，能够有幸遇到真心待自己的人<br>是很很难的，假如遇到了，我真的不想错过。</p>\n<p>刚再一次开始接触陆兴文，一切还停留在学生时代<br>又一次见面是2020、4、29<br>那天天气很好，当天陆先生穿了一件黑色短袖+牛仔裤<br>这样的打扮，简直和学生时代一毛一样<br>陆先生走路还是一样的一晃一晃，一甩一甩的<br>难怪人称“甩甩”</p>\n<p>我们简单地互相打过照面，一切好像都没变<br>按计划，我们先吃早餐，然后自驾去重庆<br>这里补充一下去重庆的由来：</p>\n<blockquote>\n<p>原本是那谁要陪我去重庆，但陆先生听说这人不靠谱，于是主动提出要陪我去，一开始，我是拒绝的，作为朋友，我觉得很麻烦人家，毕竟那时重庆，不是附近的小地方，走几步就到，然而，陆先生一再坚持，加上我的情况特殊，确实需要一个人陪同，于是我们达成了共识，一同上重庆。</p>\n</blockquote>\n<p><img src=\"http://520.biggerforum.org/z1-03.jpeg\" alt=\"\"></p>\n<p>作为一个东道主，其实我对丘北也不是很熟<br>那里好吃好玩，我是一概不知的<br>我知道的，仅仅是姐姐们或者朋友带我去过哪里<br>我觉得好，下次再来便是，不好，则不再来<br>这就是我熟悉没事的方法，这样真的是又笨又慢<br>谁让我爱宅呢？不主动出击，只能被动选择<br>所以，我印象中巷子里那家酸汤米线不错，把它作为早餐点。</p>\n<p>可能4年未见，又可能是以前的相处模式便是如此<br>陆先生总是走在我前面，快我几步，我们总是隔3米远<br>倘若是朋友，我是不在乎的，若是作为另一半，我是介意的<br>都不知道等我一下，以后会知道宠我吗？</p>\n<p>吃过早餐，坐上车，我以为我们要出发去重庆了</p>\n<pre><code>“学姐，我们去一趟普者黑吧”\n“有事？还是说你要去接人？“\n”我有很重要的事要去做！“</code></pre><p>当时车里放着”我喜欢你“这首歌，我问他是具体什么事？<br>陆先生闭口不说，只说有很重要的事要做。<br>那一刻，我有些紧张————他不会事要表白吧？<br>一路就这样，紧张又不知所措。<br>假如他真表白了，我是该接受还是不该接受呢？</p>\n<p>过了几分钟，我们来到了喷泉音乐广场<br>陆先生让我先下车，背着他走在前，他说要准备一下说词<br>当时，我挺不知所措，不知该正对着他，还是背对好<br>最后我选择了一个比较尴尬的姿势————侧着对他<br>而我的正对面，是一个旋转木马</p>\n<p>那一刻，陆先生其实说了挺多，大概意思如下：</p>\n<p>我一直以为这些年你过得挺好<br>如果别人不能保护你<br>那么换我来吧<br>即使你现在不喜欢我也没关系<br>我会努力对你好，让你喜欢我</p>\n<p>听完陆先生的告白，陆先生双手将一束粉色的玫瑰递上<br>当时我是挺不想接受花的，接受花是否代表同意交往呢？<br>可是，我们整整4年未见，目前我对他是胡真没那感觉<br>陆先生一再坚持，我亦不好这样浪费时间</p>\n<p>“花我可以先收下，感情的事我们再慢慢相处”<br>“目前我并没有答应，我想考虑一下”</p>\n<p>就这样接受了陆先生的花<br>结束了告白仪式，随后便踏上了重庆之旅。</p>\n<p><img src=\"http://520.biggerforum.org/z1-04.jpeg\" alt=\"\"></p>\n<p>去重庆的路上，大多顺利，唯独一个小插曲————陆先生生病了，在叙永<br>好的一点是我带了药，这药原本是给自己准备的<br>不成想竟用在了陆先生身上<br>陆先生应该很难受，我们无法前行，为安全考虑<br>我们在叙永休息了很久<br>陆先生吃了我带的药，像个孩子一样<br>倚靠在我身旁，嘴巴一直在念叨：</p>\n<p>“学姐，我喜欢你”<br>“学姐，我爱你”<br>“你知道吗？看着你和别人纠缠不断的时候，我很心痛“</p>\n<p>此时，陆先生迷迷糊糊的吻了我一下。<br>是的，他成功的吻了一下我的嘴唇<br>天哪，这一幕太不可信了，他是陆兴文，是学弟，是弟弟呀！<br>这一切太不可思议了，而且，为什么我没有拒绝？没有一把推开呢？<br>为什么好像我的身体并没有对他产生抗拒？<br>我知道，喜不喜欢一个人，嘴巴会骗，但是身体是很诚实的<br>这一刻，我慌了</p>\n<p>陆先生生病了，我还是会像姐姐一样好好照顾他<br>对他不会有一丝男女之情<br>然而那个吻，轻轻的一个吻，我的内心慌乱了。</p>\n<p>在心里，我问自己————“喜欢他吗？” 好像不喜欢！<br>可是，那个吻是怎么回事呢？<br>是的，这个不经意的吻成功地引起了我的胡思乱想<br>我直白地告诉陆先生：</p>\n<p>作为姐姐，你的一切坏毛病我都会尽力包容<br>我会尽力地去帮助你的一切，照顾你的一切<br>但是，作为女友的话，我需要的是——你宠爱<br>一切都会反过来，而且你做得不好我还会批评你。</p>\n<p>就这样，莫名其妙的在一起了，一切也自然而然地发生<br>就像一般恋人时期的热恋期一样<br>陆先生也在尽其所能地给我宠爱：</p>\n<p>为我解决后顾之忧<br>给我买各种礼物</p>\n<p>这时的我，倒成了个小孩子</p>\n<p>陆先生说他早已把握当家人，所以给我录指纹，带我见家人……<br>一切的一切，都很美好。</p>\n<p>我并不是贪图陆先生对我的好，或许我对陆先生的感觉<br>不及陆先生对我强烈，但是，我是喜欢陆先生的<br>是啊，真奇怪，我怎么会喜欢上自己曾经的“弟弟”呢？</p>\n<p><img src=\"http://520.biggerforum.org/z1-05.jpeg\" alt=\"\"></p>\n<p>陆先生虽比我小，但陆先生与同龄人相比，也算成熟得多<br>这也是我不介意他比我小3岁的原因之一<br>再有，我觉得和陆先生相处的时候，一切都挺自然、自在的<br>我很喜欢这种相处模式<br>和陆先生相处久了，便越发的依恋他，舍不得和他分离</p>\n<p>我和陆先生异地，他在个旧，我在丘北<br>这几次都是陆先生空了就下来看我<br>最近最感动的应该就是我生病之事，我身体不好，作为另一半<br>我们虽未结婚，但我不该瞒他，我觉得自己是自私的<br>这样会拖累陆先生的，那一刻，我是有想放弃的念头<br>尽管我和陆先生在一起，我们各自都觉得很合适<br>人这一生，伴侣莫过于互知冷暖，相互疼爱。<br>或许我们都是被爱情折腾够的人<br>当我们再一次相聚时，产生了化学反应，相聚，相知，相恋<br>我当然很舍不得陆先生，他是这么好的一个人<br>也正是这么好的一个人，我如何能如此自私呢</p>\n<p>我哭了<br>陆先生也哭了<br>陆先生说：无论怎样，他都要陪我一起走，绝不扔下我<br>为了提前实习，做一个好丈夫，陆先生从收拾自己的卧室开始<br>陆先生说，要照顾我一辈子，宠我一辈子<br>那么，就从改掉懒惰开始吧！</p>\n<p>看，多么好的一个男孩子<br>倘若是其他人，得知我身体不好，一定会慢慢对我冷淡<br>最后选择离开我，这一切我又怎会不知<br>只是与其说等对方将我抛弃，我还不如掌握主动权<br>这样的话，离开那一刻依然是有爱的<br>是美好的，而不至于太<br>过于悲惨<br>可是，陆先生没有退缩<br>他选择和我站一起，选择见家长<br>那一刻，我的心，又暖又疼<br>陆先生是一个又担当的男人，这里我不禁要问自己：</p>\n<p>是否配得上这样的一个好男人？<br>我该怎么样做才能配得上他的赤诚？</p>\n<p><img src=\"http://520.biggerforum.org/z1-06.jpeg\" alt=\"\"></p>\n<p>大概是2020、5、23，周六晚吧，我和陆先生一起玩滑板<br>那是我和陆先生人生中第一次一起玩滑板<br>原本我们是在普者黑玩的，不巧的是下雨了，我们便一起在亭下避雨<br>陆先生头发都淋湿了，看着有点傻傻的，竟也有点可爱<br>那时，码头的荷叶已经露出水面，给水乡又添了一丝色彩<br>路旁的蓝花盈盛开着，花瓣洒落在人行道上<br>路灯微微照亮，我和陆先生相拥在码头上<br>此情此景，怎一个美字了得<br>可惜的是，这样的画面只能在脑海中浮现<br>未曾用镜头记录下来<br>陆先生平时经常给我拍照，他说他要录vlog<br>而且是一辈子的那种</p>\n<p>雨停之后，我们散过步，记录下美好的时刻，我们便返回城里。<br>返回城里的第一件事竟是去广场再次玩滑板<br>像我和陆先生这样的可能也少<br>我们无不良嗜好，还能一起互相拍照，一起玩滑板<br>此外，陆先生生活中也挺照顾我的<br>系鞋带、穿袜子、鞋子、衣服…<br>打住，我并不是缺乏自理能力，我自己做这一切会更有效率</p>\n<p>可我独独很享受陆先生这般照顾我<br>因为他是我的另一半，我恋他，依赖他<br>所以我喜欢他照顾我<br>和陆先生在一起，我真的很开心<br>笑容多了，也渐渐开朗多了<br>陆先生带给我了很多<br>虽然陆先生常说和我在一起很开心，很开心<br>但是我自己也不知道，究竟给陆先生带来过什么？<br>我知道他宠我，但是我也心疼他<br>我不希望他只知道一味的宠我，自己委屈了也不告诉我<br>所以，我经常鼓励他有什么要和我说<br>当然，当我自己意识到问题的时候，我也会反思，会改正</p>\n<p>那天晚上，我们一直很开心<br>然而，半夜的时候，也不知道几点<br>我隐约觉得在梦里身体就很不舒服，总觉得想吐<br>在梦里挣扎不过，突然立马起身就跑到厕所”放鞭炮“了，<br>一切真是说时迟，那时快<br>陆先生见我起身也随我来到厕所，在我身旁照顾我。<br>发泄完之后，我整个人时晕呼呼的，回到床上后<br>却难以入睡，才过几分钟，又拉肚子<br>真是上吐下泻的，头又晕，感觉整个人快不行了</p>\n<h5 id=\"这里陆先生附上滑滑板的vLog，刚开始学习摄影\"><a href=\"#这里陆先生附上滑滑板的vLog，刚开始学习摄影\" class=\"headerlink\" title=\"这里陆先生附上滑滑板的vLog，刚开始学习摄影\"></a>这里陆先生附上滑滑板的vLog，刚开始学习摄影</h5><iframe src=\"//player.bilibili.com/player.html?aid=795803043&bvid=BV17C4y1p7mZ&cid=194548776&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>视频源地址： <a href=\"https://www.bilibili.com/video/BV17C4y1p7mZ/\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/BV17C4y1p7mZ/</a></p>\n<p><img src=\"http://520.biggerforum.org/z1-07.jpeg\" alt=\"\"></p>\n<p>折腾完这一切，我整个人都虚了，怎么回的床<br>我都不记得了，那个时候天灰蒙蒙的<br>随后，我似乎又迷迷糊糊过去了<br>隐约只记得陆先生说他要出去一下，至于去干嘛<br>我完全没听清就晕睡过去了</p>\n<p>待我醒来时，陆先生给我带了稀饭，买了药<br>多细心的一个男孩子，对丘北不熟，一定没少跑吧<br>让我去买稀饭我还不一定找得到在哪买呢！<br>不过，那时的我，晕晕呼呼的，也没想到这些<br>我只记得一会陆先生喂我吃稀饭，一会又跑去泡药<br>一会又喂我吃药，那时的我，完全处于迟钝状态<br>陆先生叫我干嘛，我便干嘛<br>陆先生说:以前都是我在照顾他，这次换他来照顾我</p>\n<p>吃过早餐，喝了药，我又躺了下去，原以为一会便会好转<br>没成想，不一会功夫，吃下的全吐了出来，肚子也没闲着<br>这是一段又味道的文字，然而，陆先生他竟然站在门口<br>我知道，陆先生时担心我有所需要<br>他选择站在我的视线内，以便可以随时上前帮忙<br>这一点，陆先生真的很暖<br>谈到这，又不得不提半夜我起夜的时候<br>睡眼很惺松，我连被子都没又掀一下<br>陆先生便一个公主抱就把我抱进厕所<br>我很自然的搂着他的脖子，像个孩子一样被抱着<br>那时的我并不算很清醒，还适不适合用手揉揉睁不开的眼睛<br>心里却是甜甜的，心想：<br>这怕不是在演偶像剧？</p>\n<p>接着说生病的事，哪一个半夜我挺忙，忙着上吐下泄<br>回到床又倒头不知东南西北<br>只是梦里好像一直听到陆先生在忙<br>时而坐在我身旁敲电脑，时而在洗东西<br>待我再一次醒来才知，原来陆先生忙着帮我<br>剪视频、洗滑板</p>\n<p>陆先生见我醒来，问我身体是否好转，是否要起身？<br>接着就是“爸爸”给“女儿”从头到脚<br>一样一样地帮我穿好<br>嘴里还时不时念叨“我真笨”，衣服<br>都穿不好</p>\n<p>看到这一切，我不由地说了一句————<br>有你真好！</p>\n<p><img src=\"http://520.biggerforum.org/z1-08.jpeg\" alt=\"\"></p>\n<p>回想我和陆先生这一路走来，真的挺奇妙：</p>\n<ul>\n<li>初中三年，校友，不识</li>\n<li>高中三年，水平线，无任何交集</li>\n<li>大学4年，3年相识，我主动结交的陆先生</li>\n<li>后来失联4年，杳无信息</li>\n<li>2020.4.24，我因一口诺言，主动找回陆先生</li>\n</ul>\n<p>自从和陆先生在一起，我仿佛感受到了上天的宠爱<br>一切刚刚好，一切又让我们回到了从前，让我们找到了彼此<br>有人说，因果相随<br>我和陆先生的因</p>\n<ul>\n<li>一是我2次主动联系陆先生</li>\n<li>二是我先前真心待陆先生如弟弟般</li>\n</ul>\n<p>果便是陆先生从此记住了我的好，也牵挂过我。<br>当得知我过得并不好的时候<br>他便忍不住站出来，想要去保护我<br>以前是我争取他，即便争取的只是朋<br>友的缘分<br>而这一次，却是陆先生一直在争取我<br>只是这一次，换成了爱情！</p>\n<p>因此，遇到了，就不想错过，只想好好把握<br>所以，陆先生和我，原本不会擦出爱情火花的两个人<br>竟然真的在2020、5、1产生了交集，走到了一起<br>还好，一切都还不算太晚<br>一切都还来得及<br>一切都刚刚好<br>我知道，我和陆先生也会有矛盾的时候<br>只要我们坦诚相待，好好沟通<br>我相信，我们会一直幸福下去。</p>\n<p><strong>亲爱的陆先生，感谢有你！</strong><br><strong>余生，愿与你共同努力，和你一起走下去！</strong></p>\n<p>2020、5、26,周二,阴<br>补写于粉色书桌上.</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"luxingwen":{"link":"https://github.com/luxingwen","avatar":"/images/miku-ico.png","desc":"my github"},"vim-小抄":{"link":"https://vim.rtorr.com/lang/zh_cn","avatar":"/images/miku-ico.png","desc":"vim-小抄"},"srcmap":{"link":"https://github.com/yznu-cn/srcmap","avatar":"/images/miku-ico.png","desc":"开源书籍、开源学习资料link整理"}}}},"excerpt":"","more":"<p><img src=\"http://520.biggerforum.org/z1-01.jpeg\" alt=\"\"></p>\n<p>我和陆先生相识于7年前，那时他大一，我大二。作为老乡学姐，<br>理应多给予一些同样在异乡求学的学弟学妹们一些帮助。<br>我还记得我和陆先生第一次见面的场景————行知大道。尴尬的聊了几句。<br>后面我们一起发传单，见证他的感情经历……</p>\n<p>那时的我们，真的就和亲姐弟一般，我视他为弟弟<br>而陆先生，总是习惯性地叫我学姐。<br>陆先生说：我那个时候对他很好，其实，关于这一点，我并没有太多印象<br>亦或者是我觉得他所谓的好，在我看来是很平常的一件事<br>故而，我自己也没有放在心上。</p>\n<p>大学那三年，我和陆先生的友情一直很好，尽管他后来有女朋友<br>但是并没有影响我们之间的姐弟情，待他的女友也一样好。</p>\n<p>我和陆先生分开，断绝联系，是发生在她和女朋友闹分手之际，<br>那几天，他总找我，向我诉说他们之间的事，希望我能够帮他<br>挽回女朋友，我知道他很难过，也很着急。<br>而我自己，也因为感情，一直和异性保持距离，连话都不敢讲，<br>陆先生那几天找我找的太频繁了，我很无难……<br>那一天，正巧我是在昆明飞机场，我印象很深刻<br>是的，朋友，我要把你删了，倘若以后自由了，我一定向你道歉，<br>于是，我编辑了一段很尴尬的文字，大概意思是很爱前任，<br>为了前任要放弃异性朋友。</p>\n<p>当陆先生看到那段文字，他的内心应该是很绝望吧。<br>一边是自己相恋多年的女友，一边是自己的知心姐姐。<br>这一时刻，她们都要离他而去。</p>\n<p>这三年，我是真心把陆先生当弟弟看，从未有过男女之情，<br>加上失恋双重打击。<br>编辑那条QQ信息的时候，我便暗自许下承诺。<br>——————— 倘若那天自由了，一定要和陆先生道歉，解释当时的原因。</p>\n<p>至于陆先生接不接受道歉，或者是否已经淡忘<br>都通通没关系，我只求心安。<br>就这样，我和陆先生长达4年未曾有过一丝的联系。</p>\n<p>和陆先生失联的这四年，我是过得极其悲惨的<br>而且是痛到骨子里的痛，这种痛可能一辈子都难以疫合。<br>后面得知陆先生这四年，过得也不是很好<br>对于感情，我和陆先生都经历过伤痛，也学会了珍惜。<br>其实我挺感谢这次疫情的<br>因为疫情的特殊，让我无处可去，最后选择回家，<br>倘若不是疫情，或许我会换一个地方重新开始，<br>是疫情，让我回了家，那时我整整2年没回过家了。</p>\n<p>我在家一待便待了2个多月，是的，我自由了。<br>这期间，我想过陆先生，想起过那个承诺。</p>\n<p>很快脑海里便会有另外一个想法————————<br>    时间都过了那么久了，他会不会已经淡忘了呢？<br>    于是，我犹豫了，或者人家已经有女朋友，结婚了也说不定的，<br>    就这样，我打消了这个念头。</p>\n<p><img src=\"http://520.biggerforum.org/z1-02.jpeg\" alt=\"\"></p>\n<p>不知道过了多久，这个念头又在脑海中闪现。<br>那一天,我又是一个人宅在家，当时我想———————<br>    要做一个守信用的人，既然自己当年许下承诺<br>    为何现在不去实现呢？</p>\n<p>于是，我开始大量地去翻说说评论找陆先生。<br>查找的过程有些纠结，怕找错，加错。<br>这样的话会很尴尬，最后，我猜定这一个一定是陆先生，<br>大胆地加去吧。到不了加错了重新在找一次。<br>接下来有一点程序化—-输QQ号—-姓名验证—-加友成功。</p>\n<p>那一天是2020年4月24晚，我开口第一句便问：</p>\n<pre><code>陆兴文？\n\n....\n\n你有女朋友没?\n\n....</code></pre><p>在确定他单身之后，我告诉了他我的来意<br>让我意外的是，他还记得我，甚至也深深的牵挂过我。<br>从加好友那一刻起，我们就停不下来了<br>他和我讲了这几年的遭遇<br>那一晚，我们聊了接近一个通宵，一切就像是学生时代一样，<br>好像一点都没有变，又好像一切都变了。</p>\n<p>在我们聊了几天之后，我告诉了他我的感情经历<br>“学姐，我喜欢你，你不要和别人领证”<br>当看到他发的这条信息，我是又气又好笑。<br>好笑的是他让我和别和别人领证<br>气的是，难道这小子也要来套路我？</p>\n<p>对于感情，我真的很怕很怕<br>每一次，我都是认真对待，可是后来才明白<br>我不过是被套路而矣，不过是别人养的一条鱼<br>我是很失望，很失落，也很可悲的。<br>我向往纯真美好的爱情，然而一切只不过是一个泡影<br>所以，当我觉得是这个人的时候<br>我是很想去珍惜和把握的<br>我知道，人这一生，能够有幸遇到真心待自己的人<br>是很很难的，假如遇到了，我真的不想错过。</p>\n<p>刚再一次开始接触陆兴文，一切还停留在学生时代<br>又一次见面是2020、4、29<br>那天天气很好，当天陆先生穿了一件黑色短袖+牛仔裤<br>这样的打扮，简直和学生时代一毛一样<br>陆先生走路还是一样的一晃一晃，一甩一甩的<br>难怪人称“甩甩”</p>\n<p>我们简单地互相打过照面，一切好像都没变<br>按计划，我们先吃早餐，然后自驾去重庆<br>这里补充一下去重庆的由来：</p>\n<blockquote>\n<p>原本是那谁要陪我去重庆，但陆先生听说这人不靠谱，于是主动提出要陪我去，一开始，我是拒绝的，作为朋友，我觉得很麻烦人家，毕竟那时重庆，不是附近的小地方，走几步就到，然而，陆先生一再坚持，加上我的情况特殊，确实需要一个人陪同，于是我们达成了共识，一同上重庆。</p>\n</blockquote>\n<p><img src=\"http://520.biggerforum.org/z1-03.jpeg\" alt=\"\"></p>\n<p>作为一个东道主，其实我对丘北也不是很熟<br>那里好吃好玩，我是一概不知的<br>我知道的，仅仅是姐姐们或者朋友带我去过哪里<br>我觉得好，下次再来便是，不好，则不再来<br>这就是我熟悉没事的方法，这样真的是又笨又慢<br>谁让我爱宅呢？不主动出击，只能被动选择<br>所以，我印象中巷子里那家酸汤米线不错，把它作为早餐点。</p>\n<p>可能4年未见，又可能是以前的相处模式便是如此<br>陆先生总是走在我前面，快我几步，我们总是隔3米远<br>倘若是朋友，我是不在乎的，若是作为另一半，我是介意的<br>都不知道等我一下，以后会知道宠我吗？</p>\n<p>吃过早餐，坐上车，我以为我们要出发去重庆了</p>\n<pre><code>“学姐，我们去一趟普者黑吧”\n“有事？还是说你要去接人？“\n”我有很重要的事要去做！“</code></pre><p>当时车里放着”我喜欢你“这首歌，我问他是具体什么事？<br>陆先生闭口不说，只说有很重要的事要做。<br>那一刻，我有些紧张————他不会事要表白吧？<br>一路就这样，紧张又不知所措。<br>假如他真表白了，我是该接受还是不该接受呢？</p>\n<p>过了几分钟，我们来到了喷泉音乐广场<br>陆先生让我先下车，背着他走在前，他说要准备一下说词<br>当时，我挺不知所措，不知该正对着他，还是背对好<br>最后我选择了一个比较尴尬的姿势————侧着对他<br>而我的正对面，是一个旋转木马</p>\n<p>那一刻，陆先生其实说了挺多，大概意思如下：</p>\n<p>我一直以为这些年你过得挺好<br>如果别人不能保护你<br>那么换我来吧<br>即使你现在不喜欢我也没关系<br>我会努力对你好，让你喜欢我</p>\n<p>听完陆先生的告白，陆先生双手将一束粉色的玫瑰递上<br>当时我是挺不想接受花的，接受花是否代表同意交往呢？<br>可是，我们整整4年未见，目前我对他是胡真没那感觉<br>陆先生一再坚持，我亦不好这样浪费时间</p>\n<p>“花我可以先收下，感情的事我们再慢慢相处”<br>“目前我并没有答应，我想考虑一下”</p>\n<p>就这样接受了陆先生的花<br>结束了告白仪式，随后便踏上了重庆之旅。</p>\n<p><img src=\"http://520.biggerforum.org/z1-04.jpeg\" alt=\"\"></p>\n<p>去重庆的路上，大多顺利，唯独一个小插曲————陆先生生病了，在叙永<br>好的一点是我带了药，这药原本是给自己准备的<br>不成想竟用在了陆先生身上<br>陆先生应该很难受，我们无法前行，为安全考虑<br>我们在叙永休息了很久<br>陆先生吃了我带的药，像个孩子一样<br>倚靠在我身旁，嘴巴一直在念叨：</p>\n<p>“学姐，我喜欢你”<br>“学姐，我爱你”<br>“你知道吗？看着你和别人纠缠不断的时候，我很心痛“</p>\n<p>此时，陆先生迷迷糊糊的吻了我一下。<br>是的，他成功的吻了一下我的嘴唇<br>天哪，这一幕太不可信了，他是陆兴文，是学弟，是弟弟呀！<br>这一切太不可思议了，而且，为什么我没有拒绝？没有一把推开呢？<br>为什么好像我的身体并没有对他产生抗拒？<br>我知道，喜不喜欢一个人，嘴巴会骗，但是身体是很诚实的<br>这一刻，我慌了</p>\n<p>陆先生生病了，我还是会像姐姐一样好好照顾他<br>对他不会有一丝男女之情<br>然而那个吻，轻轻的一个吻，我的内心慌乱了。</p>\n<p>在心里，我问自己————“喜欢他吗？” 好像不喜欢！<br>可是，那个吻是怎么回事呢？<br>是的，这个不经意的吻成功地引起了我的胡思乱想<br>我直白地告诉陆先生：</p>\n<p>作为姐姐，你的一切坏毛病我都会尽力包容<br>我会尽力地去帮助你的一切，照顾你的一切<br>但是，作为女友的话，我需要的是——你宠爱<br>一切都会反过来，而且你做得不好我还会批评你。</p>\n<p>就这样，莫名其妙的在一起了，一切也自然而然地发生<br>就像一般恋人时期的热恋期一样<br>陆先生也在尽其所能地给我宠爱：</p>\n<p>为我解决后顾之忧<br>给我买各种礼物</p>\n<p>这时的我，倒成了个小孩子</p>\n<p>陆先生说他早已把握当家人，所以给我录指纹，带我见家人……<br>一切的一切，都很美好。</p>\n<p>我并不是贪图陆先生对我的好，或许我对陆先生的感觉<br>不及陆先生对我强烈，但是，我是喜欢陆先生的<br>是啊，真奇怪，我怎么会喜欢上自己曾经的“弟弟”呢？</p>\n<p><img src=\"http://520.biggerforum.org/z1-05.jpeg\" alt=\"\"></p>\n<p>陆先生虽比我小，但陆先生与同龄人相比，也算成熟得多<br>这也是我不介意他比我小3岁的原因之一<br>再有，我觉得和陆先生相处的时候，一切都挺自然、自在的<br>我很喜欢这种相处模式<br>和陆先生相处久了，便越发的依恋他，舍不得和他分离</p>\n<p>我和陆先生异地，他在个旧，我在丘北<br>这几次都是陆先生空了就下来看我<br>最近最感动的应该就是我生病之事，我身体不好，作为另一半<br>我们虽未结婚，但我不该瞒他，我觉得自己是自私的<br>这样会拖累陆先生的，那一刻，我是有想放弃的念头<br>尽管我和陆先生在一起，我们各自都觉得很合适<br>人这一生，伴侣莫过于互知冷暖，相互疼爱。<br>或许我们都是被爱情折腾够的人<br>当我们再一次相聚时，产生了化学反应，相聚，相知，相恋<br>我当然很舍不得陆先生，他是这么好的一个人<br>也正是这么好的一个人，我如何能如此自私呢</p>\n<p>我哭了<br>陆先生也哭了<br>陆先生说：无论怎样，他都要陪我一起走，绝不扔下我<br>为了提前实习，做一个好丈夫，陆先生从收拾自己的卧室开始<br>陆先生说，要照顾我一辈子，宠我一辈子<br>那么，就从改掉懒惰开始吧！</p>\n<p>看，多么好的一个男孩子<br>倘若是其他人，得知我身体不好，一定会慢慢对我冷淡<br>最后选择离开我，这一切我又怎会不知<br>只是与其说等对方将我抛弃，我还不如掌握主动权<br>这样的话，离开那一刻依然是有爱的<br>是美好的，而不至于太<br>过于悲惨<br>可是，陆先生没有退缩<br>他选择和我站一起，选择见家长<br>那一刻，我的心，又暖又疼<br>陆先生是一个又担当的男人，这里我不禁要问自己：</p>\n<p>是否配得上这样的一个好男人？<br>我该怎么样做才能配得上他的赤诚？</p>\n<p><img src=\"http://520.biggerforum.org/z1-06.jpeg\" alt=\"\"></p>\n<p>大概是2020、5、23，周六晚吧，我和陆先生一起玩滑板<br>那是我和陆先生人生中第一次一起玩滑板<br>原本我们是在普者黑玩的，不巧的是下雨了，我们便一起在亭下避雨<br>陆先生头发都淋湿了，看着有点傻傻的，竟也有点可爱<br>那时，码头的荷叶已经露出水面，给水乡又添了一丝色彩<br>路旁的蓝花盈盛开着，花瓣洒落在人行道上<br>路灯微微照亮，我和陆先生相拥在码头上<br>此情此景，怎一个美字了得<br>可惜的是，这样的画面只能在脑海中浮现<br>未曾用镜头记录下来<br>陆先生平时经常给我拍照，他说他要录vlog<br>而且是一辈子的那种</p>\n<p>雨停之后，我们散过步，记录下美好的时刻，我们便返回城里。<br>返回城里的第一件事竟是去广场再次玩滑板<br>像我和陆先生这样的可能也少<br>我们无不良嗜好，还能一起互相拍照，一起玩滑板<br>此外，陆先生生活中也挺照顾我的<br>系鞋带、穿袜子、鞋子、衣服…<br>打住，我并不是缺乏自理能力，我自己做这一切会更有效率</p>\n<p>可我独独很享受陆先生这般照顾我<br>因为他是我的另一半，我恋他，依赖他<br>所以我喜欢他照顾我<br>和陆先生在一起，我真的很开心<br>笑容多了，也渐渐开朗多了<br>陆先生带给我了很多<br>虽然陆先生常说和我在一起很开心，很开心<br>但是我自己也不知道，究竟给陆先生带来过什么？<br>我知道他宠我，但是我也心疼他<br>我不希望他只知道一味的宠我，自己委屈了也不告诉我<br>所以，我经常鼓励他有什么要和我说<br>当然，当我自己意识到问题的时候，我也会反思，会改正</p>\n<p>那天晚上，我们一直很开心<br>然而，半夜的时候，也不知道几点<br>我隐约觉得在梦里身体就很不舒服，总觉得想吐<br>在梦里挣扎不过，突然立马起身就跑到厕所”放鞭炮“了，<br>一切真是说时迟，那时快<br>陆先生见我起身也随我来到厕所，在我身旁照顾我。<br>发泄完之后，我整个人时晕呼呼的，回到床上后<br>却难以入睡，才过几分钟，又拉肚子<br>真是上吐下泻的，头又晕，感觉整个人快不行了</p>\n<h5 id=\"这里陆先生附上滑滑板的vLog，刚开始学习摄影\"><a href=\"#这里陆先生附上滑滑板的vLog，刚开始学习摄影\" class=\"headerlink\" title=\"这里陆先生附上滑滑板的vLog，刚开始学习摄影\"></a>这里陆先生附上滑滑板的vLog，刚开始学习摄影</h5><iframe src=\"//player.bilibili.com/player.html?aid=795803043&bvid=BV17C4y1p7mZ&cid=194548776&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>视频源地址： <a href=\"https://www.bilibili.com/video/BV17C4y1p7mZ/\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/video/BV17C4y1p7mZ/</a></p>\n<p><img src=\"http://520.biggerforum.org/z1-07.jpeg\" alt=\"\"></p>\n<p>折腾完这一切，我整个人都虚了，怎么回的床<br>我都不记得了，那个时候天灰蒙蒙的<br>随后，我似乎又迷迷糊糊过去了<br>隐约只记得陆先生说他要出去一下，至于去干嘛<br>我完全没听清就晕睡过去了</p>\n<p>待我醒来时，陆先生给我带了稀饭，买了药<br>多细心的一个男孩子，对丘北不熟，一定没少跑吧<br>让我去买稀饭我还不一定找得到在哪买呢！<br>不过，那时的我，晕晕呼呼的，也没想到这些<br>我只记得一会陆先生喂我吃稀饭，一会又跑去泡药<br>一会又喂我吃药，那时的我，完全处于迟钝状态<br>陆先生叫我干嘛，我便干嘛<br>陆先生说:以前都是我在照顾他，这次换他来照顾我</p>\n<p>吃过早餐，喝了药，我又躺了下去，原以为一会便会好转<br>没成想，不一会功夫，吃下的全吐了出来，肚子也没闲着<br>这是一段又味道的文字，然而，陆先生他竟然站在门口<br>我知道，陆先生时担心我有所需要<br>他选择站在我的视线内，以便可以随时上前帮忙<br>这一点，陆先生真的很暖<br>谈到这，又不得不提半夜我起夜的时候<br>睡眼很惺松，我连被子都没又掀一下<br>陆先生便一个公主抱就把我抱进厕所<br>我很自然的搂着他的脖子，像个孩子一样被抱着<br>那时的我并不算很清醒，还适不适合用手揉揉睁不开的眼睛<br>心里却是甜甜的，心想：<br>这怕不是在演偶像剧？</p>\n<p>接着说生病的事，哪一个半夜我挺忙，忙着上吐下泄<br>回到床又倒头不知东南西北<br>只是梦里好像一直听到陆先生在忙<br>时而坐在我身旁敲电脑，时而在洗东西<br>待我再一次醒来才知，原来陆先生忙着帮我<br>剪视频、洗滑板</p>\n<p>陆先生见我醒来，问我身体是否好转，是否要起身？<br>接着就是“爸爸”给“女儿”从头到脚<br>一样一样地帮我穿好<br>嘴里还时不时念叨“我真笨”，衣服<br>都穿不好</p>\n<p>看到这一切，我不由地说了一句————<br>有你真好！</p>\n<p><img src=\"http://520.biggerforum.org/z1-08.jpeg\" alt=\"\"></p>\n<p>回想我和陆先生这一路走来，真的挺奇妙：</p>\n<ul>\n<li>初中三年，校友，不识</li>\n<li>高中三年，水平线，无任何交集</li>\n<li>大学4年，3年相识，我主动结交的陆先生</li>\n<li>后来失联4年，杳无信息</li>\n<li>2020.4.24，我因一口诺言，主动找回陆先生</li>\n</ul>\n<p>自从和陆先生在一起，我仿佛感受到了上天的宠爱<br>一切刚刚好，一切又让我们回到了从前，让我们找到了彼此<br>有人说，因果相随<br>我和陆先生的因</p>\n<ul>\n<li>一是我2次主动联系陆先生</li>\n<li>二是我先前真心待陆先生如弟弟般</li>\n</ul>\n<p>果便是陆先生从此记住了我的好，也牵挂过我。<br>当得知我过得并不好的时候<br>他便忍不住站出来，想要去保护我<br>以前是我争取他，即便争取的只是朋<br>友的缘分<br>而这一次，却是陆先生一直在争取我<br>只是这一次，换成了爱情！</p>\n<p>因此，遇到了，就不想错过，只想好好把握<br>所以，陆先生和我，原本不会擦出爱情火花的两个人<br>竟然真的在2020、5、1产生了交集，走到了一起<br>还好，一切都还不算太晚<br>一切都还来得及<br>一切都刚刚好<br>我知道，我和陆先生也会有矛盾的时候<br>只要我们坦诚相待，好好沟通<br>我相信，我们会一直幸福下去。</p>\n<p><strong>亲爱的陆先生，感谢有你！</strong><br><strong>余生，愿与你共同努力，和你一起走下去！</strong></p>\n<p>2020、5、26,周二,阴<br>补写于粉色书桌上.</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckae1xdqi0008m7fhc6j334ut","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdqr000hm7fh8nt51zl2"},{"post_id":"ckae1xdq70000m7fh5wqydcxf","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdqv000mm7fh006a3zuk"},{"post_id":"ckae1xdqc0002m7fhagvt789u","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdqx000pm7fhaai17arf"},{"post_id":"ckae1xdqs000lm7fhae78bkn6","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdqz000vm7fhfjl6fnh1"},{"post_id":"ckae1xdqg0006m7fhe3g503ut","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdr0000zm7fhfxlk6myq"},{"post_id":"ckae1xdqw000nm7fhhy9z4xts","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdr10012m7fh827a48bg"},{"post_id":"ckae1xdqx000sm7fha1uo00ks","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdr30016m7fhd8gdcu51"},{"post_id":"ckae1xdqq000gm7fhd1lceezt","category_id":"ckae1xdqx000om7fhaku26e98","_id":"ckae1xdr4001am7fhcx0ze8wv"},{"post_id":"ckae1xdqz000um7fhhobadtoh","category_id":"ckae1xdqx000om7fhaku26e98","_id":"ckae1xdr5001em7fh0dfde7qk"},{"post_id":"ckae1xdr0000ym7fh3gmt7nob","category_id":"ckae1xdqx000om7fhaku26e98","_id":"ckae1xdr6001im7fh2vzk38pe"},{"post_id":"ckae1xdr20015m7fh7x9j943r","category_id":"ckae1xdqe0004m7fh5msug3uk","_id":"ckae1xdr8001mm7fh6d8vbzcm"},{"post_id":"ckae1xdr4001dm7fhgpz69bwd","category_id":"ckae1xdqx000om7fhaku26e98","_id":"ckae1xdr8001om7fh76plbfs7"},{"post_id":"ckae1xdr10011m7fhfnry4rwy","category_id":"ckae1xdr30017m7fh582u7ouy","_id":"ckae1xdr9001pm7fhhgnd0vrr"},{"post_id":"ckae1xdr7001lm7fh56qp3jah","category_id":"ckae1xdr30017m7fh582u7ouy","_id":"ckae1xdr9001sm7fhfhx8gbrw"},{"post_id":"ckae1xdr30019m7fhaj3ka9y7","category_id":"ckae1xdr30017m7fh582u7ouy","_id":"ckae1xdra001tm7fh4ih359qx"}],"PostTag":[{"post_id":"ckae1xdq70000m7fh5wqydcxf","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdqo000em7fhcie4djf9"},{"post_id":"ckae1xdqc0002m7fhagvt789u","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdqs000km7fh1sqqdyi9"},{"post_id":"ckae1xdqs000lm7fhae78bkn6","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdqx000rm7fhcfv585uu"},{"post_id":"ckae1xdqw000nm7fhhy9z4xts","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdqy000tm7fhbmeucnqi"},{"post_id":"ckae1xdqx000sm7fha1uo00ks","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdr0000xm7fhcfgqfoq1"},{"post_id":"ckae1xdqg0006m7fhe3g503ut","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdr10010m7fh2ccdemvq"},{"post_id":"ckae1xdqg0006m7fhe3g503ut","tag_id":"ckae1xdqx000qm7fh4kji4yld","_id":"ckae1xdr20014m7fh8zxlf3ha"},{"post_id":"ckae1xdqi0008m7fhc6j334ut","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdr30018m7fhegc8be7l"},{"post_id":"ckae1xdqi0008m7fhc6j334ut","tag_id":"ckae1xdqz000wm7fhgv6f6bez","_id":"ckae1xdr4001bm7fh0r7q823m"},{"post_id":"ckae1xdr20015m7fh7x9j943r","tag_id":"ckae1xdqg0005m7fh5rj22zn6","_id":"ckae1xdr6001fm7fh6tc78vig"},{"post_id":"ckae1xdqk000am7fh1oaxdztm","tag_id":"ckae1xdr20013m7fhe4724knc","_id":"ckae1xdr7001jm7fh4b12hp06"},{"post_id":"ckae1xdqo000fm7fh3q1ucpsg","tag_id":"ckae1xdr20013m7fhe4724knc","_id":"ckae1xdr8001nm7fh00vg7fd4"},{"post_id":"ckae1xdqq000gm7fhd1lceezt","tag_id":"ckae1xdr7001km7fhg41r5fyp","_id":"ckae1xdr9001rm7fh9pgj4q7b"},{"post_id":"ckae1xdqz000um7fhhobadtoh","tag_id":"ckae1xdr9001qm7fhbeam1yho","_id":"ckae1xdra001vm7fh56sx1fyx"},{"post_id":"ckae1xdr0000ym7fh3gmt7nob","tag_id":"ckae1xdra001um7fh2u03cekm","_id":"ckae1xdrb001ym7fh11p89oyk"},{"post_id":"ckae1xdr0000ym7fh3gmt7nob","tag_id":"ckae1xdra001wm7fh8tkie78r","_id":"ckae1xdrb001zm7fhaowq64kk"},{"post_id":"ckae1xdr10011m7fhfnry4rwy","tag_id":"ckae1xdrb001xm7fh061z0ttu","_id":"ckae1xdrc0022m7fhhlwvg8p6"},{"post_id":"ckae1xdr10011m7fhfnry4rwy","tag_id":"ckae1xdrb0020m7fhekel4p6k","_id":"ckae1xdrc0023m7fh8wfca0t3"},{"post_id":"ckae1xdr30019m7fhaj3ka9y7","tag_id":"ckae1xdrc0021m7fh4b0wgtd7","_id":"ckae1xdrd0025m7fh6kbb6tdp"},{"post_id":"ckae1xdr4001dm7fhgpz69bwd","tag_id":"ckae1xdrc0024m7fh7zijgx9l","_id":"ckae1xdrd0027m7fhez9ad09x"},{"post_id":"ckae1xdr6001gm7fh51gk2v1i","tag_id":"ckae1xdrd0026m7fh9s86hsuo","_id":"ckae1xdre0029m7fh94ip6b3v"},{"post_id":"ckae1xdr7001lm7fh56qp3jah","tag_id":"ckae1xdrd0028m7fh2au948df","_id":"ckae1xdrf002bm7fhgg510nzu"},{"post_id":"ckae1xdr7001lm7fh56qp3jah","tag_id":"ckae1xdre002am7fh4a0pagzy","_id":"ckae1xdrf002cm7fh8pypfcok"},{"post_id":"ckaki2e71000051x45w3y9m24","tag_id":"ckae1xdr20013m7fhe4724knc","_id":"ckaki2e7h000151x49pdoak3h"},{"post_id":"ckankdona0000anx4eea43xrk","tag_id":"ckae1xdr20013m7fhe4724knc","_id":"ckankdood0001anx47r7e8vdv"}],"Tag":[{"name":"erlang","_id":"ckae1xdqg0005m7fh5rj22zn6"},{"name":"rebar3","_id":"ckae1xdqx000qm7fh4kji4yld"},{"name":"ets","_id":"ckae1xdqz000wm7fhgv6f6bez"},{"name":"queen","_id":"ckae1xdr20013m7fhe4724knc"},{"name":"二叉树","_id":"ckae1xdr7001km7fhg41r5fyp"},{"name":"排序","_id":"ckae1xdr9001qm7fhbeam1yho"},{"name":"深度优先搜索","_id":"ckae1xdra001um7fh2u03cekm"},{"name":"广度优先搜索","_id":"ckae1xdra001wm7fh8tkie78r"},{"name":"桂林","_id":"ckae1xdrb001xm7fh061z0ttu"},{"name":"阳朔","_id":"ckae1xdrb0020m7fhekel4p6k"},{"name":"广州","_id":"ckae1xdrc0021m7fh4b0wgtd7"},{"name":"链表","_id":"ckae1xdrc0024m7fh7zijgx9l"},{"name":"随笔","_id":"ckae1xdrd0026m7fh9s86hsuo"},{"name":"大理","_id":"ckae1xdrd0028m7fh2au948df"},{"name":"丽江","_id":"ckae1xdre002am7fh4a0pagzy"}]}}